!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ANTZ_OBJS	makefile	/^ANTZ_OBJS = \\$/;"	m
APIENTRY	lib/soil/src/SOIL.c	27;"	d	file:
BIN	lib/soil/projects/makefile/makefile	/^BIN = $(LIBDIR)\/$(LIB)$/;"	m
BUGFIX_MATRIX	io/npgl.c	305;"	d	file:
CASE	lib/soil/src/stb_image_aug.c	2114;"	d	file:
CASE	lib/soil/src/stb_image_aug.c	2127;"	d	file:
CASE	lib/soil/src/stb_image_aug.c	2130;"	d	file:
CASE	lib/soil/src/stb_image_aug.c	2143;"	d	file:
CASE	lib/soil/src/stb_image_aug.c	489;"	d	file:
CASE	lib/soil/src/stb_image_aug.c	507;"	d	file:
COMBO	lib/soil/src/stb_image_aug.c	488;"	d	file:
COPIER	lib/soil/projects/makefile/makefile	/^COPIER = cp$/;"	m
CXX	lib/soil/projects/makefile/makefile	/^CXX = gcc$/;"	m
CXXFLAGS	lib/soil/projects/makefile/makefile	/^CXXFLAGS = -O2 -s -Wall$/;"	m
CreateCircle	io/gl/npgeometry.c	/^void CreateCircle (NPcirclePtr circle)$/;"	f
CreatePinDL	io/gl/npgeometry.c	/^GLuint CreatePinDL()$/;"	f
CreatePinWireDL	io/gl/npgeometry.c	/^GLuint CreatePinWireDL()$/;"	f
CreateTorus	io/gl/npgeometry.c	/^void CreateTorus (NPtorusPtr torus)$/;"	f
CreateTorusDL	io/gl/npgeometry.c	/^GLuint CreateTorusDL()$/;"	f
CreateTorusWireDL	io/gl/npgeometry.c	/^GLuint CreateTorusWireDL()$/;"	f
CreateTracks	io/npch.c	/^void CreateTracks (int numberTracks, void *dataRef)$/;"	f
DDPF_ALPHAPIXELS	lib/soil/src/image_DXT.h	102;"	d
DDPF_ALPHAPIXELS	lib/soil/src/stbi_DDS_aug_c.h	53;"	d
DDPF_FOURCC	lib/soil/src/image_DXT.h	103;"	d
DDPF_FOURCC	lib/soil/src/stbi_DDS_aug_c.h	54;"	d
DDPF_RGB	lib/soil/src/image_DXT.h	104;"	d
DDPF_RGB	lib/soil/src/stbi_DDS_aug_c.h	55;"	d
DDSCAPS2_CUBEMAP	lib/soil/src/image_DXT.h	114;"	d
DDSCAPS2_CUBEMAP	lib/soil/src/stbi_DDS_aug_c.h	65;"	d
DDSCAPS2_CUBEMAP_NEGATIVEX	lib/soil/src/image_DXT.h	116;"	d
DDSCAPS2_CUBEMAP_NEGATIVEX	lib/soil/src/stbi_DDS_aug_c.h	67;"	d
DDSCAPS2_CUBEMAP_NEGATIVEY	lib/soil/src/image_DXT.h	118;"	d
DDSCAPS2_CUBEMAP_NEGATIVEY	lib/soil/src/stbi_DDS_aug_c.h	69;"	d
DDSCAPS2_CUBEMAP_NEGATIVEZ	lib/soil/src/image_DXT.h	120;"	d
DDSCAPS2_CUBEMAP_NEGATIVEZ	lib/soil/src/stbi_DDS_aug_c.h	71;"	d
DDSCAPS2_CUBEMAP_POSITIVEX	lib/soil/src/image_DXT.h	115;"	d
DDSCAPS2_CUBEMAP_POSITIVEX	lib/soil/src/stbi_DDS_aug_c.h	66;"	d
DDSCAPS2_CUBEMAP_POSITIVEY	lib/soil/src/image_DXT.h	117;"	d
DDSCAPS2_CUBEMAP_POSITIVEY	lib/soil/src/stbi_DDS_aug_c.h	68;"	d
DDSCAPS2_CUBEMAP_POSITIVEZ	lib/soil/src/image_DXT.h	119;"	d
DDSCAPS2_CUBEMAP_POSITIVEZ	lib/soil/src/stbi_DDS_aug_c.h	70;"	d
DDSCAPS2_VOLUME	lib/soil/src/image_DXT.h	121;"	d
DDSCAPS2_VOLUME	lib/soil/src/stbi_DDS_aug_c.h	72;"	d
DDSCAPS_COMPLEX	lib/soil/src/image_DXT.h	108;"	d
DDSCAPS_COMPLEX	lib/soil/src/stbi_DDS_aug_c.h	59;"	d
DDSCAPS_MIPMAP	lib/soil/src/image_DXT.h	110;"	d
DDSCAPS_MIPMAP	lib/soil/src/stbi_DDS_aug_c.h	61;"	d
DDSCAPS_TEXTURE	lib/soil/src/image_DXT.h	109;"	d
DDSCAPS_TEXTURE	lib/soil/src/stbi_DDS_aug_c.h	60;"	d
DDSD_CAPS	lib/soil/src/image_DXT.h	92;"	d
DDSD_CAPS	lib/soil/src/stbi_DDS_aug_c.h	43;"	d
DDSD_DEPTH	lib/soil/src/image_DXT.h	99;"	d
DDSD_DEPTH	lib/soil/src/stbi_DDS_aug_c.h	50;"	d
DDSD_HEIGHT	lib/soil/src/image_DXT.h	93;"	d
DDSD_HEIGHT	lib/soil/src/stbi_DDS_aug_c.h	44;"	d
DDSD_LINEARSIZE	lib/soil/src/image_DXT.h	98;"	d
DDSD_LINEARSIZE	lib/soil/src/stbi_DDS_aug_c.h	49;"	d
DDSD_MIPMAPCOUNT	lib/soil/src/image_DXT.h	97;"	d
DDSD_MIPMAPCOUNT	lib/soil/src/stbi_DDS_aug_c.h	48;"	d
DDSD_PITCH	lib/soil/src/image_DXT.h	95;"	d
DDSD_PITCH	lib/soil/src/stbi_DDS_aug_c.h	46;"	d
DDSD_PIXELFORMAT	lib/soil/src/image_DXT.h	96;"	d
DDSD_PIXELFORMAT	lib/soil/src/stbi_DDS_aug_c.h	47;"	d
DDSD_WIDTH	lib/soil/src/image_DXT.h	94;"	d
DDSD_WIDTH	lib/soil/src/stbi_DDS_aug_c.h	45;"	d
DDS_header	lib/soil/src/image_DXT.h	/^DDS_header ;$/;"	t	typeref:struct:__anon51
DDS_header	lib/soil/src/stbi_DDS_aug_c.h	/^} DDS_header ;$/;"	t	typeref:struct:__anon59
DELETER	lib/soil/projects/makefile/makefile	/^DELETER = rm -f$/;"	m
DNL	lib/soil/src/stb_image_aug.c	1259;"	d	file:
Data	data/nptypes.h	/^struct Data {$/;"	s
Data	data/nptypes.h	/^typedef struct Data Data;$/;"	t	typeref:struct:Data
DeleteCircle	io/gl/npgeometry.c	/^void DeleteCircle (NPcirclePtr circle)$/;"	f
DrawCamera	io/gl/npgldraw.c	/^void DrawCamera (NPnodePtr node)$/;"	f
DrawDefault	io/gl/npgldraw.c	/^void DrawDefault (NPnodePtr node)$/;"	f
DrawGrid	io/gl/npgldraw.c	/^void DrawGrid (NPnodePtr node, void* dataRef)$/;"	f
DrawPin	io/gl/npgldraw.c	/^void DrawPin (int selectedRootNode, NPnodePtr node, void* dataRef)$/;"	f
DrawPinChild	io/gl/npgldraw.c	/^void DrawPinChild (NPnodePtr node, void* dataRef)$/;"	f
DrawPinDL	io/gl/npgeometry.c	/^void DrawPinDL() $/;"	f
DrawPinWireDL	io/gl/npgeometry.c	/^void DrawPinWireDL() $/;"	f
DrawPoints	io/gl/npgldraw.c	/^void DrawPoints (NPnodePtr node)$/;"	f
DrawSurface	io/gl/npgldraw.c	/^void DrawSurface (NPnodePtr node)$/;"	f
DrawTorusDL	io/gl/npgeometry.c	/^void DrawTorusDL() $/;"	f
DrawTorusWireDL	io/gl/npgeometry.c	/^void DrawTorusWireDL() $/;"	f
DrawVideo	io/gl/npgldraw.c	/^void DrawVideo (NPnodePtr node)$/;"	f
DumpChannel	io/npch.c	/^void DumpChannel(char* str, pNPch ch)$/;"	f
EOI	lib/soil/src/stb_image_aug.c	1261;"	d	file:
FAST_BITS	lib/soil/src/stb_image_aug.c	587;"	d	file:
FGAPI	lib/freeglut/include/GL/freeglut_std.h	106;"	d
FGAPI	lib/freeglut/include/GL/freeglut_std.h	68;"	d
FGAPI	lib/freeglut/include/GL/freeglut_std.h	81;"	d
FGAPI	lib/freeglut/include/GL/freeglut_std.h	83;"	d
FGAPIENTRY	lib/freeglut/include/GL/freeglut_std.h	107;"	d
FGAPIENTRY	lib/freeglut/include/GL/freeglut_std.h	69;"	d
FGAPIENTRY	lib/freeglut/include/GL/freeglut_std.h	79;"	d
FGUNUSED	lib/freeglut/include/GL/freeglut_std.h	608;"	d
FGUNUSED	lib/freeglut/include/GL/freeglut_std.h	610;"	d
FREEGLUT	lib/freeglut/include/GL/freeglut_std.h	114;"	d
FREEGLUT_LIB_PRAGMAS	lib/freeglut/include/GL/freeglut_std.h	51;"	d
FREEGLUT_LIB_PRAGMAS	lib/freeglut/include/GL/freeglut_std.h	53;"	d
FREEGLUT_VERSION_2_0	lib/freeglut/include/GL/freeglut_std.h	116;"	d
F_avg	lib/soil/src/stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon72	file:
F_avg_first	lib/soil/src/stb_image_aug.c	/^   F_avg_first, F_paeth_first,$/;"	e	enum:__anon72	file:
F_none	lib/soil/src/stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon72	file:
F_paeth	lib/soil/src/stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon72	file:
F_paeth_first	lib/soil/src/stb_image_aug.c	/^   F_avg_first, F_paeth_first,$/;"	e	enum:__anon72	file:
F_sub	lib/soil/src/stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon72	file:
F_up	lib/soil/src/stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon72	file:
GLUT_ACCUM	lib/freeglut/include/GL/freeglut_std.h	169;"	d
GLUT_ACTION_CONTINUE_EXECUTION	lib/freeglut/include/GL/freeglut_ext.h	53;"	d
GLUT_ACTION_EXIT	lib/freeglut/include/GL/freeglut_ext.h	51;"	d
GLUT_ACTION_GLUTMAINLOOP_RETURNS	lib/freeglut/include/GL/freeglut_ext.h	52;"	d
GLUT_ACTION_ON_WINDOW_CLOSE	lib/freeglut/include/GL/freeglut_ext.h	74;"	d
GLUT_ACTIVE_ALT	lib/freeglut/include/GL/freeglut_std.h	329;"	d
GLUT_ACTIVE_CTRL	lib/freeglut/include/GL/freeglut_std.h	328;"	d
GLUT_ACTIVE_SHIFT	lib/freeglut/include/GL/freeglut_std.h	327;"	d
GLUT_ALLOW_DIRECT_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	65;"	d
GLUT_ALPHA	lib/freeglut/include/GL/freeglut_std.h	170;"	d
GLUT_API_VERSION	lib/freeglut/include/GL/freeglut_std.h	115;"	d
GLUT_AUX	lib/freeglut/include/GL/freeglut_ext.h	91;"	d
GLUT_AUX1	lib/freeglut/include/GL/freeglut_ext.h	93;"	d
GLUT_AUX2	lib/freeglut/include/GL/freeglut_ext.h	94;"	d
GLUT_AUX3	lib/freeglut/include/GL/freeglut_ext.h	95;"	d
GLUT_AUX4	lib/freeglut/include/GL/freeglut_ext.h	96;"	d
GLUT_BITMAP_8_BY_13	lib/freeglut/include/GL/freeglut_std.h	198;"	d
GLUT_BITMAP_8_BY_13	lib/freeglut/include/GL/freeglut_std.h	224;"	d
GLUT_BITMAP_9_BY_15	lib/freeglut/include/GL/freeglut_std.h	197;"	d
GLUT_BITMAP_9_BY_15	lib/freeglut/include/GL/freeglut_std.h	223;"	d
GLUT_BITMAP_HELVETICA_10	lib/freeglut/include/GL/freeglut_std.h	201;"	d
GLUT_BITMAP_HELVETICA_10	lib/freeglut/include/GL/freeglut_std.h	227;"	d
GLUT_BITMAP_HELVETICA_12	lib/freeglut/include/GL/freeglut_std.h	202;"	d
GLUT_BITMAP_HELVETICA_12	lib/freeglut/include/GL/freeglut_std.h	228;"	d
GLUT_BITMAP_HELVETICA_18	lib/freeglut/include/GL/freeglut_std.h	203;"	d
GLUT_BITMAP_HELVETICA_18	lib/freeglut/include/GL/freeglut_std.h	229;"	d
GLUT_BITMAP_TIMES_ROMAN_10	lib/freeglut/include/GL/freeglut_std.h	199;"	d
GLUT_BITMAP_TIMES_ROMAN_10	lib/freeglut/include/GL/freeglut_std.h	225;"	d
GLUT_BITMAP_TIMES_ROMAN_24	lib/freeglut/include/GL/freeglut_std.h	200;"	d
GLUT_BITMAP_TIMES_ROMAN_24	lib/freeglut/include/GL/freeglut_std.h	226;"	d
GLUT_BLUE	lib/freeglut/include/GL/freeglut_std.h	363;"	d
GLUT_BORDERLESS	lib/freeglut/include/GL/freeglut_ext.h	227;"	d
GLUT_CAPTIONLESS	lib/freeglut/include/GL/freeglut_ext.h	226;"	d
GLUT_COMPATIBILITY_PROFILE	lib/freeglut/include/GL/freeglut_ext.h	117;"	d
GLUT_CORE_PROFILE	lib/freeglut/include/GL/freeglut_ext.h	116;"	d
GLUT_CREATE_NEW_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	58;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	lib/freeglut/include/GL/freeglut_std.h	353;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	lib/freeglut/include/GL/freeglut_std.h	352;"	d
GLUT_CURSOR_BOTTOM_SIDE	lib/freeglut/include/GL/freeglut_std.h	347;"	d
GLUT_CURSOR_CROSSHAIR	lib/freeglut/include/GL/freeglut_std.h	343;"	d
GLUT_CURSOR_CYCLE	lib/freeglut/include/GL/freeglut_std.h	339;"	d
GLUT_CURSOR_DESTROY	lib/freeglut/include/GL/freeglut_std.h	337;"	d
GLUT_CURSOR_FULL_CROSSHAIR	lib/freeglut/include/GL/freeglut_std.h	356;"	d
GLUT_CURSOR_HELP	lib/freeglut/include/GL/freeglut_std.h	338;"	d
GLUT_CURSOR_INFO	lib/freeglut/include/GL/freeglut_std.h	336;"	d
GLUT_CURSOR_INHERIT	lib/freeglut/include/GL/freeglut_std.h	354;"	d
GLUT_CURSOR_LEFT_ARROW	lib/freeglut/include/GL/freeglut_std.h	335;"	d
GLUT_CURSOR_LEFT_RIGHT	lib/freeglut/include/GL/freeglut_std.h	345;"	d
GLUT_CURSOR_LEFT_SIDE	lib/freeglut/include/GL/freeglut_std.h	348;"	d
GLUT_CURSOR_NONE	lib/freeglut/include/GL/freeglut_std.h	355;"	d
GLUT_CURSOR_RIGHT_ARROW	lib/freeglut/include/GL/freeglut_std.h	334;"	d
GLUT_CURSOR_RIGHT_SIDE	lib/freeglut/include/GL/freeglut_std.h	349;"	d
GLUT_CURSOR_SPRAY	lib/freeglut/include/GL/freeglut_std.h	340;"	d
GLUT_CURSOR_TEXT	lib/freeglut/include/GL/freeglut_std.h	342;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	lib/freeglut/include/GL/freeglut_std.h	350;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	lib/freeglut/include/GL/freeglut_std.h	351;"	d
GLUT_CURSOR_TOP_SIDE	lib/freeglut/include/GL/freeglut_std.h	346;"	d
GLUT_CURSOR_UP_DOWN	lib/freeglut/include/GL/freeglut_std.h	344;"	d
GLUT_CURSOR_WAIT	lib/freeglut/include/GL/freeglut_std.h	341;"	d
GLUT_DEBUG	lib/freeglut/include/GL/freeglut_ext.h	109;"	d
GLUT_DEPTH	lib/freeglut/include/GL/freeglut_std.h	171;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	lib/freeglut/include/GL/freeglut_std.h	286;"	d
GLUT_DEVICE_KEY_REPEAT	lib/freeglut/include/GL/freeglut_std.h	287;"	d
GLUT_DIRECT_RENDERING	lib/freeglut/include/GL/freeglut_ext.h	82;"	d
GLUT_DISPLAY_MODE_POSSIBLE	lib/freeglut/include/GL/freeglut_std.h	264;"	d
GLUT_DOUBLE	lib/freeglut/include/GL/freeglut_std.h	168;"	d
GLUT_DOWN	lib/freeglut/include/GL/freeglut_std.h	156;"	d
GLUT_ELAPSED_TIME	lib/freeglut/include/GL/freeglut_std.h	270;"	d
GLUT_ENTERED	lib/freeglut/include/GL/freeglut_std.h	159;"	d
GLUT_FORCE_DIRECT_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	67;"	d
GLUT_FORCE_INDIRECT_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	64;"	d
GLUT_FORWARD_COMPATIBLE	lib/freeglut/include/GL/freeglut_ext.h	110;"	d
GLUT_FULLY_COVERED	lib/freeglut/include/GL/freeglut_std.h	187;"	d
GLUT_FULLY_RETAINED	lib/freeglut/include/GL/freeglut_std.h	185;"	d
GLUT_FULL_SCREEN	lib/freeglut/include/GL/freeglut_ext.h	84;"	d
GLUT_GAME_MODE_ACTIVE	lib/freeglut/include/GL/freeglut_std.h	380;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	lib/freeglut/include/GL/freeglut_std.h	386;"	d
GLUT_GAME_MODE_HEIGHT	lib/freeglut/include/GL/freeglut_std.h	383;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	lib/freeglut/include/GL/freeglut_std.h	384;"	d
GLUT_GAME_MODE_POSSIBLE	lib/freeglut/include/GL/freeglut_std.h	381;"	d
GLUT_GAME_MODE_REFRESH_RATE	lib/freeglut/include/GL/freeglut_std.h	385;"	d
GLUT_GAME_MODE_WIDTH	lib/freeglut/include/GL/freeglut_std.h	382;"	d
GLUT_GREEN	lib/freeglut/include/GL/freeglut_std.h	362;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	lib/freeglut/include/GL/freeglut_std.h	279;"	d
GLUT_HAS_JOYSTICK	lib/freeglut/include/GL/freeglut_std.h	288;"	d
GLUT_HAS_KEYBOARD	lib/freeglut/include/GL/freeglut_std.h	276;"	d
GLUT_HAS_MOUSE	lib/freeglut/include/GL/freeglut_std.h	277;"	d
GLUT_HAS_MULTI	lib/freeglut/include/GL/freeglut_ext.h	180;"	d
GLUT_HAS_OVERLAY	lib/freeglut/include/GL/freeglut_std.h	299;"	d
GLUT_HAS_SPACEBALL	lib/freeglut/include/GL/freeglut_std.h	278;"	d
GLUT_HAS_TABLET	lib/freeglut/include/GL/freeglut_std.h	280;"	d
GLUT_HIDDEN	lib/freeglut/include/GL/freeglut_std.h	184;"	d
GLUT_INDEX	lib/freeglut/include/GL/freeglut_std.h	166;"	d
GLUT_INIT_DISPLAY_MODE	lib/freeglut/include/GL/freeglut_std.h	269;"	d
GLUT_INIT_FLAGS	lib/freeglut/include/GL/freeglut_ext.h	103;"	d
GLUT_INIT_MAJOR_VERSION	lib/freeglut/include/GL/freeglut_ext.h	101;"	d
GLUT_INIT_MINOR_VERSION	lib/freeglut/include/GL/freeglut_ext.h	102;"	d
GLUT_INIT_PROFILE	lib/freeglut/include/GL/freeglut_ext.h	104;"	d
GLUT_INIT_STATE	lib/freeglut/include/GL/freeglut_ext.h	72;"	d
GLUT_INIT_WINDOW_HEIGHT	lib/freeglut/include/GL/freeglut_std.h	268;"	d
GLUT_INIT_WINDOW_WIDTH	lib/freeglut/include/GL/freeglut_std.h	267;"	d
GLUT_INIT_WINDOW_X	lib/freeglut/include/GL/freeglut_std.h	265;"	d
GLUT_INIT_WINDOW_Y	lib/freeglut/include/GL/freeglut_std.h	266;"	d
GLUT_JOYSTICK_AXES	lib/freeglut/include/GL/freeglut_std.h	291;"	d
GLUT_JOYSTICK_BUTTONS	lib/freeglut/include/GL/freeglut_std.h	290;"	d
GLUT_JOYSTICK_BUTTON_A	lib/freeglut/include/GL/freeglut_std.h	372;"	d
GLUT_JOYSTICK_BUTTON_B	lib/freeglut/include/GL/freeglut_std.h	373;"	d
GLUT_JOYSTICK_BUTTON_C	lib/freeglut/include/GL/freeglut_std.h	374;"	d
GLUT_JOYSTICK_BUTTON_D	lib/freeglut/include/GL/freeglut_std.h	375;"	d
GLUT_JOYSTICK_POLL_RATE	lib/freeglut/include/GL/freeglut_std.h	292;"	d
GLUT_KEY_ALT_L	lib/freeglut/include/GL/freeglut_ext.h	45;"	d
GLUT_KEY_ALT_R	lib/freeglut/include/GL/freeglut_ext.h	46;"	d
GLUT_KEY_BEGIN	lib/freeglut/include/GL/freeglut_ext.h	39;"	d
GLUT_KEY_CTRL_L	lib/freeglut/include/GL/freeglut_ext.h	43;"	d
GLUT_KEY_CTRL_R	lib/freeglut/include/GL/freeglut_ext.h	44;"	d
GLUT_KEY_DELETE	lib/freeglut/include/GL/freeglut_ext.h	40;"	d
GLUT_KEY_DOWN	lib/freeglut/include/GL/freeglut_std.h	143;"	d
GLUT_KEY_END	lib/freeglut/include/GL/freeglut_std.h	147;"	d
GLUT_KEY_F1	lib/freeglut/include/GL/freeglut_std.h	128;"	d
GLUT_KEY_F10	lib/freeglut/include/GL/freeglut_std.h	137;"	d
GLUT_KEY_F11	lib/freeglut/include/GL/freeglut_std.h	138;"	d
GLUT_KEY_F12	lib/freeglut/include/GL/freeglut_std.h	139;"	d
GLUT_KEY_F2	lib/freeglut/include/GL/freeglut_std.h	129;"	d
GLUT_KEY_F3	lib/freeglut/include/GL/freeglut_std.h	130;"	d
GLUT_KEY_F4	lib/freeglut/include/GL/freeglut_std.h	131;"	d
GLUT_KEY_F5	lib/freeglut/include/GL/freeglut_std.h	132;"	d
GLUT_KEY_F6	lib/freeglut/include/GL/freeglut_std.h	133;"	d
GLUT_KEY_F7	lib/freeglut/include/GL/freeglut_std.h	134;"	d
GLUT_KEY_F8	lib/freeglut/include/GL/freeglut_std.h	135;"	d
GLUT_KEY_F9	lib/freeglut/include/GL/freeglut_std.h	136;"	d
GLUT_KEY_HOME	lib/freeglut/include/GL/freeglut_std.h	146;"	d
GLUT_KEY_INSERT	lib/freeglut/include/GL/freeglut_std.h	148;"	d
GLUT_KEY_LEFT	lib/freeglut/include/GL/freeglut_std.h	140;"	d
GLUT_KEY_NUM_LOCK	lib/freeglut/include/GL/freeglut_ext.h	38;"	d
GLUT_KEY_PAGE_DOWN	lib/freeglut/include/GL/freeglut_std.h	145;"	d
GLUT_KEY_PAGE_UP	lib/freeglut/include/GL/freeglut_std.h	144;"	d
GLUT_KEY_REPEAT_DEFAULT	lib/freeglut/include/GL/freeglut_std.h	370;"	d
GLUT_KEY_REPEAT_OFF	lib/freeglut/include/GL/freeglut_std.h	368;"	d
GLUT_KEY_REPEAT_ON	lib/freeglut/include/GL/freeglut_std.h	369;"	d
GLUT_KEY_RIGHT	lib/freeglut/include/GL/freeglut_std.h	142;"	d
GLUT_KEY_SHIFT_L	lib/freeglut/include/GL/freeglut_ext.h	41;"	d
GLUT_KEY_SHIFT_R	lib/freeglut/include/GL/freeglut_ext.h	42;"	d
GLUT_KEY_UP	lib/freeglut/include/GL/freeglut_std.h	141;"	d
GLUT_LAYER_IN_USE	lib/freeglut/include/GL/freeglut_std.h	298;"	d
GLUT_LEFT	lib/freeglut/include/GL/freeglut_std.h	158;"	d
GLUT_LEFT_BUTTON	lib/freeglut/include/GL/freeglut_std.h	153;"	d
GLUT_LUMINANCE	lib/freeglut/include/GL/freeglut_std.h	175;"	d
GLUT_MENU_IN_USE	lib/freeglut/include/GL/freeglut_std.h	181;"	d
GLUT_MENU_NOT_IN_USE	lib/freeglut/include/GL/freeglut_std.h	180;"	d
GLUT_MENU_NUM_ITEMS	lib/freeglut/include/GL/freeglut_std.h	263;"	d
GLUT_MIDDLE_BUTTON	lib/freeglut/include/GL/freeglut_std.h	154;"	d
GLUT_MULTISAMPLE	lib/freeglut/include/GL/freeglut_std.h	173;"	d
GLUT_NORMAL	lib/freeglut/include/GL/freeglut_std.h	321;"	d
GLUT_NORMAL_DAMAGED	lib/freeglut/include/GL/freeglut_std.h	301;"	d
GLUT_NOT_VISIBLE	lib/freeglut/include/GL/freeglut_std.h	182;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	lib/freeglut/include/GL/freeglut_std.h	283;"	d
GLUT_NUM_DIALS	lib/freeglut/include/GL/freeglut_std.h	284;"	d
GLUT_NUM_MOUSE_BUTTONS	lib/freeglut/include/GL/freeglut_std.h	281;"	d
GLUT_NUM_SPACEBALL_BUTTONS	lib/freeglut/include/GL/freeglut_std.h	282;"	d
GLUT_NUM_TABLET_BUTTONS	lib/freeglut/include/GL/freeglut_std.h	285;"	d
GLUT_OVERLAY	lib/freeglut/include/GL/freeglut_std.h	322;"	d
GLUT_OVERLAY_DAMAGED	lib/freeglut/include/GL/freeglut_std.h	302;"	d
GLUT_OVERLAY_POSSIBLE	lib/freeglut/include/GL/freeglut_std.h	297;"	d
GLUT_OWNS_JOYSTICK	lib/freeglut/include/GL/freeglut_std.h	289;"	d
GLUT_PARTIALLY_RETAINED	lib/freeglut/include/GL/freeglut_std.h	186;"	d
GLUT_RED	lib/freeglut/include/GL/freeglut_std.h	361;"	d
GLUT_RENDERING_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	81;"	d
GLUT_RGB	lib/freeglut/include/GL/freeglut_std.h	164;"	d
GLUT_RGBA	lib/freeglut/include/GL/freeglut_std.h	165;"	d
GLUT_RIGHT_BUTTON	lib/freeglut/include/GL/freeglut_std.h	155;"	d
GLUT_SCREEN_HEIGHT	lib/freeglut/include/GL/freeglut_std.h	260;"	d
GLUT_SCREEN_HEIGHT_MM	lib/freeglut/include/GL/freeglut_std.h	262;"	d
GLUT_SCREEN_WIDTH	lib/freeglut/include/GL/freeglut_std.h	259;"	d
GLUT_SCREEN_WIDTH_MM	lib/freeglut/include/GL/freeglut_std.h	261;"	d
GLUT_SINGLE	lib/freeglut/include/GL/freeglut_std.h	167;"	d
GLUT_SRGB	lib/freeglut/include/GL/freeglut_ext.h	228;"	d
GLUT_STENCIL	lib/freeglut/include/GL/freeglut_std.h	172;"	d
GLUT_STEREO	lib/freeglut/include/GL/freeglut_std.h	174;"	d
GLUT_STROKE_MONO_ROMAN	lib/freeglut/include/GL/freeglut_std.h	196;"	d
GLUT_STROKE_MONO_ROMAN	lib/freeglut/include/GL/freeglut_std.h	222;"	d
GLUT_STROKE_ROMAN	lib/freeglut/include/GL/freeglut_std.h	195;"	d
GLUT_STROKE_ROMAN	lib/freeglut/include/GL/freeglut_std.h	221;"	d
GLUT_TRANSPARENT_INDEX	lib/freeglut/include/GL/freeglut_std.h	300;"	d
GLUT_TRY_DIRECT_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	66;"	d
GLUT_UP	lib/freeglut/include/GL/freeglut_std.h	157;"	d
GLUT_USE_CURRENT_CONTEXT	lib/freeglut/include/GL/freeglut_ext.h	59;"	d
GLUT_VERSION	lib/freeglut/include/GL/freeglut_ext.h	79;"	d
GLUT_VIDEO_RESIZE_HEIGHT	lib/freeglut/include/GL/freeglut_std.h	316;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	lib/freeglut/include/GL/freeglut_std.h	312;"	d
GLUT_VIDEO_RESIZE_IN_USE	lib/freeglut/include/GL/freeglut_std.h	308;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	lib/freeglut/include/GL/freeglut_std.h	307;"	d
GLUT_VIDEO_RESIZE_WIDTH	lib/freeglut/include/GL/freeglut_std.h	315;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	lib/freeglut/include/GL/freeglut_std.h	311;"	d
GLUT_VIDEO_RESIZE_X	lib/freeglut/include/GL/freeglut_std.h	313;"	d
GLUT_VIDEO_RESIZE_X_DELTA	lib/freeglut/include/GL/freeglut_std.h	309;"	d
GLUT_VIDEO_RESIZE_Y	lib/freeglut/include/GL/freeglut_std.h	314;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	lib/freeglut/include/GL/freeglut_std.h	310;"	d
GLUT_VISIBLE	lib/freeglut/include/GL/freeglut_std.h	183;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	lib/freeglut/include/GL/freeglut_std.h	249;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	lib/freeglut/include/GL/freeglut_std.h	248;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	lib/freeglut/include/GL/freeglut_std.h	247;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	lib/freeglut/include/GL/freeglut_std.h	246;"	d
GLUT_WINDOW_ALPHA_SIZE	lib/freeglut/include/GL/freeglut_std.h	245;"	d
GLUT_WINDOW_BLUE_SIZE	lib/freeglut/include/GL/freeglut_std.h	244;"	d
GLUT_WINDOW_BORDER_WIDTH	lib/freeglut/include/GL/freeglut_ext.h	76;"	d
GLUT_WINDOW_BUFFER_SIZE	lib/freeglut/include/GL/freeglut_std.h	239;"	d
GLUT_WINDOW_COLORMAP_SIZE	lib/freeglut/include/GL/freeglut_std.h	254;"	d
GLUT_WINDOW_CURSOR	lib/freeglut/include/GL/freeglut_std.h	257;"	d
GLUT_WINDOW_DEPTH_SIZE	lib/freeglut/include/GL/freeglut_std.h	241;"	d
GLUT_WINDOW_DOUBLEBUFFER	lib/freeglut/include/GL/freeglut_std.h	250;"	d
GLUT_WINDOW_FORMAT_ID	lib/freeglut/include/GL/freeglut_std.h	271;"	d
GLUT_WINDOW_GREEN_SIZE	lib/freeglut/include/GL/freeglut_std.h	243;"	d
GLUT_WINDOW_HEADER_HEIGHT	lib/freeglut/include/GL/freeglut_ext.h	77;"	d
GLUT_WINDOW_HEIGHT	lib/freeglut/include/GL/freeglut_std.h	238;"	d
GLUT_WINDOW_NUM_CHILDREN	lib/freeglut/include/GL/freeglut_std.h	253;"	d
GLUT_WINDOW_NUM_SAMPLES	lib/freeglut/include/GL/freeglut_std.h	255;"	d
GLUT_WINDOW_PARENT	lib/freeglut/include/GL/freeglut_std.h	252;"	d
GLUT_WINDOW_RED_SIZE	lib/freeglut/include/GL/freeglut_std.h	242;"	d
GLUT_WINDOW_RGBA	lib/freeglut/include/GL/freeglut_std.h	251;"	d
GLUT_WINDOW_STENCIL_SIZE	lib/freeglut/include/GL/freeglut_std.h	240;"	d
GLUT_WINDOW_STEREO	lib/freeglut/include/GL/freeglut_std.h	256;"	d
GLUT_WINDOW_WIDTH	lib/freeglut/include/GL/freeglut_std.h	237;"	d
GLUT_WINDOW_X	lib/freeglut/include/GL/freeglut_std.h	235;"	d
GLUT_WINDOW_Y	lib/freeglut/include/GL/freeglut_std.h	236;"	d
GLUT_XLIB_IMPLEMENTATION	lib/freeglut/include/GL/freeglut_std.h	117;"	d
GLUTproc	lib/freeglut/include/GL/freeglut_ext.h	/^typedef void (*GLUTproc)();$/;"	t
GetTrackOffset	io/npch.c	/^int GetTrackOffset(char** trackScanner, char* propertyName)$/;"	f
HDR_BUFLEN	lib/soil/src/stb_image_aug.c	3265;"	d	file:
HEADER_IMAGE_DXT	lib/soil/src/image_DXT.h	11;"	d
HEADER_IMAGE_HELPER	lib/soil/src/image_helper.h	10;"	d
HEADER_SIMPLE_OPENGL_IMAGE_LIBRARY	lib/soil/src/SOIL.h	41;"	d
HEADER_STB_IMAGE_AUGMENTED	lib/soil/src/stb_image_aug.h	67;"	d
HEADER_STB_IMAGE_DDS_AUGMENTATION	lib/soil/src/stbi_DDS_aug.h	6;"	d
IDCT_1D	lib/soil/src/stb_image_aug.c	836;"	d	file:
INC	lib/soil/projects/makefile/makefile	/^INC = SOIL.h$/;"	m
INCDIR	lib/soil/projects/makefile/makefile	/^INCDIR = ..\/..\/src$/;"	m
InitNodeGrid	data/npnode.c	/^void InitNodeGrid (NPnodePtr node)$/;"	f
InitNodePin	data/npnode.c	/^void InitNodePin (NPnodePtr node)$/;"	f
InitNodePoints	data/npnode.c	/^void InitNodePoints (NPnodePtr node)$/;"	f
InitNodeSurface	data/npnode.c	/^void InitNodeSurface (NPnodePtr node)$/;"	f
InitNodeVideo	data/npnode.c	/^void InitNodeVideo (NPnodePtr node)$/;"	f
InitTorus	io/gl/npgeometry.c	/^void InitTorus (void* dataRef)$/;"	f
LIB	lib/soil/projects/makefile/makefile	/^LIB = libSOIL.a$/;"	m
LIBDIR	lib/soil/projects/makefile/makefile	/^LIBDIR = ..\/..\/lib$/;"	m
LOCAL	lib/soil/projects/makefile/makefile	/^LOCAL = \/usr\/local$/;"	m
LSE_master_colors_max_min	lib/soil/src/image_DXT.c	/^void LSE_master_colors_max_min($/;"	f
MARKER_none	lib/soil/src/stb_image_aug.c	987;"	d	file:
MAX_LOADERS	lib/soil/src/stb_image_aug.c	147;"	d	file:
MapTrackOffset	io/npch.c	/^void MapTrackOffset(int trackOffset, NPnodePtr node, char* propertyName, void* dataRef)$/;"	f
MapTrackToFloatAttribute	io/npch.c	/^void MapTrackToFloatAttribute (int trackOffset, float* attributeValuePtr, void* dataRef)$/;"	f
MapTrackToIntAttribute	io/npch.c	/^void MapTrackToIntAttribute (int trackOffset, int* attributeValuePtr, void* dataRef)$/;"	f
MapTrackToUcharAttribute	io/npch.c	/^void MapTrackToUcharAttribute (int trackOffset, unsigned char* attributeValuePtr, void* dataRef)$/;"	f
NOMINMAX	lib/freeglut/include/GL/freeglut_std.h	61;"	d
NPAUXDB_H_	io/db/npauxdb.h	26;"	d
NPCH_H_	io/npch.h	26;"	d
NPCSV_H_	io/file/npcsv.h	26;"	d
NPDB_H_	io/npdb.h	26;"	d
NPFILE_H_	io/npfile.h	26;"	d
NPGDAL_H_	io/file/npgdal.h	26;"	d
NPGLDRAW_H_	io/gl/npgldraw.h	26;"	d
NPGLSURFACE_H_	io/gl/npgeometry.h	26;"	d
NPGLUT_H_	io/npglut.h	26;"	d
NPGL_H_	io/npgl.h	26;"	d
NPJSON_H_	io/file/npjson.h	26;"	d
NPKML_H_	io/file/npkml.h	26;"	d
NPLINUX_H_	os/linux/nplinux.h	26;"	d
NPMAPFILE_H_	data/npmapfile.h	34;"	d
NPMAP_H_	data/npmap.h	26;"	d
NPMSWFILE_H_	os/msw/npmsw.h	26;"	d
NPMYSQL_H_	io/db/npmysql.h	26;"	d
NPOBJ_H_	io/file/npobj.h	26;"	d
NPOSX_H_	os/osx/nposx.h	26;"	d
NPOS_H_	os/npos.h	26;"	d
NPTAGS_H_	io/gl/nptags.h	26;"	d
NPTEXMAP_H_	io/gl/nptexmap.h	26;"	d
NPTYPES_H_	data/nptypes.h	26;"	d
NPXML_H_	io/file/npxml.h	26;"	d
NP_LINUX_	npdata.h	35;"	d
NPboolXYZ	data/nptypes.h	/^} NPboolXYZ;$/;"	t	typeref:struct:__anon10
NPboolXYZS	data/nptypes.h	/^} NPboolXYZS;$/;"	t	typeref:struct:__anon11
NPcamera	data/nptypes.h	/^struct NPcamera$/;"	s
NPcamera	data/nptypes.h	/^typedef struct NPcamera NPcamera;$/;"	t	typeref:struct:NPcamera
NPcameraPtr	data/nptypes.h	/^typedef struct NPcamera *NPcameraPtr;$/;"	t	typeref:struct:NPcamera
NPch	data/nptypes.h	/^struct NPch {$/;"	s
NPch	data/nptypes.h	/^typedef struct NPch NPch;$/;"	t	typeref:struct:NPch
NPcircle	io/gl/npgeometry.c	/^struct NPcircle {$/;"	s	file:
NPcircle	io/gl/npgeometry.c	/^typedef struct NPcircle NPcircle;$/;"	t	typeref:struct:NPcircle	file:
NPcirclePtr	io/gl/npgeometry.c	/^typedef struct NPcircle * NPcirclePtr;$/;"	t	typeref:struct:NPcircle	file:
NPconsole	data/nptypes.h	/^struct NPconsole {	$/;"	s
NPconsole	data/nptypes.h	/^typedef struct NPconsole NPconsole;$/;"	t	typeref:struct:NPconsole
NPctrl	data/nptypes.h	/^struct NPctrl {$/;"	s
NPctrl	data/nptypes.h	/^typedef struct NPctrl NPctrl;$/;"	t	typeref:struct:NPctrl
NPdataItem	data/nptypes.h	/^struct NPdataItem$/;"	s
NPdataItem	data/nptypes.h	/^typedef struct NPdataItem NPdataItem;$/;"	t	typeref:struct:NPdataItem
NPdataItemPtr	data/nptypes.h	/^typedef struct NPdataItem * NPdataItemPtr;$/;"	t	typeref:struct:NPdataItem
NPfile	data/nptypes.h	/^struct NPfile$/;"	s
NPfile	data/nptypes.h	/^typedef struct NPfile NPfile;$/;"	t	typeref:struct:NPfile
NPfloatRGB	data/nptypes.h	/^} NPfloatRGB;$/;"	t	typeref:struct:__anon4
NPfloatRGBA	data/nptypes.h	/^} NPfloatRGBA;$/;"	t	typeref:struct:__anon5
NPfloatXY	data/nptypes.h	/^} NPfloatXY;$/;"	t	typeref:struct:__anon1
NPfloatXYZ	data/nptypes.h	/^struct NPfloatXYZ{$/;"	s
NPfloatXYZ	data/nptypes.h	/^typedef struct NPfloatXYZ NPfloatXYZ;$/;"	t	typeref:struct:NPfloatXYZ
NPfloatXYZA	data/nptypes.h	/^} NPfloatXYZA;$/;"	t	typeref:struct:__anon2
NPfloatXYZS	data/nptypes.h	/^} NPfloatXYZS;$/;"	t	typeref:struct:__anon3
NPgis	data/nptypes.h	/^struct NPgis$/;"	s
NPgis	data/nptypes.h	/^typedef struct NPgis NPgis;$/;"	t	typeref:struct:NPgis
NPgisPtr	data/nptypes.h	/^typedef struct NPgis *NPgisPtr;$/;"	t	typeref:struct:NPgis
NPgl	data/nptypes.h	/^struct NPgl {$/;"	s
NPgl	data/nptypes.h	/^typedef struct NPgl NPgl;$/;"	t	typeref:struct:NPgl
NPgrid	data/nptypes.h	/^struct NPgrid$/;"	s
NPgrid	data/nptypes.h	/^typedef struct NPgrid NPgrid;$/;"	t	typeref:struct:NPgrid
NPgridPtr	data/nptypes.h	/^typedef struct NPgrid * NPgridPtr;$/;"	t	typeref:struct:NPgrid
NPhud	data/nptypes.h	/^struct NPhud {	$/;"	s
NPhud	data/nptypes.h	/^typedef struct NPhud NPhud;$/;"	t	typeref:struct:NPhud
NPintXY	data/nptypes.h	/^} NPintXY;$/;"	t	typeref:struct:__anon6
NPintXYZ	data/nptypes.h	/^} NPintXYZ;$/;"	t	typeref:struct:__anon7
NPintXYZS	data/nptypes.h	/^} NPintXYZS;$/;"	t	typeref:struct:__anon8
NPio	data/nptypes.h	/^struct NPio {$/;"	s
NPio	data/nptypes.h	/^typedef struct NPio NPio;$/;"	t	typeref:struct:NPio
NPkey	data/nptypes.h	/^struct NPkey {$/;"	s
NPkey	data/nptypes.h	/^typedef struct NPkey NPkey;$/;"	t	typeref:struct:NPkey
NPlabel	data/nptypes.h	/^struct NPlabel$/;"	s
NPlabel	data/nptypes.h	/^typedef struct NPlabel NPlabel;$/;"	t	typeref:struct:NPlabel
NPlabelPtr	data/nptypes.h	/^typedef struct NPlabel *NPlabelPtr;$/;"	t	typeref:struct:NPlabel
NPmap	data/nptypes.h	/^struct NPmap {$/;"	s
NPmap	data/nptypes.h	/^typedef struct NPmap NPmap;$/;"	t	typeref:struct:NPmap
NPmapType	data/nptypes.h	/^struct NPmapType$/;"	s
NPmapType	data/nptypes.h	/^typedef struct NPmapType NPmapType;$/;"	t	typeref:struct:NPmapType
NPmapTypePtr	data/nptypes.h	/^typedef struct NPmapType *NPmapTypePtr;$/;"	t	typeref:struct:NPmapType
NPmessage	data/nptypes.h	/^struct NPmessage$/;"	s
NPmessage	data/nptypes.h	/^typedef struct NPmessage NPmessage;$/;"	t	typeref:struct:NPmessage
NPmouse	data/nptypes.h	/^struct NPmouse {$/;"	s
NPmouse	data/nptypes.h	/^typedef struct NPmouse NPmouse;$/;"	t	typeref:struct:NPmouse
NPnode	data/nptypes.h	/^struct NPnode$/;"	s
NPnode	data/nptypes.h	/^typedef struct NPnode NPnode;$/;"	t	typeref:struct:NPnode
NPnodeData	data/nptypes.h	/^struct NPnodeData$/;"	s
NPnodeData	data/nptypes.h	/^typedef struct NPnodeData NPnodeData;$/;"	t	typeref:struct:NPnodeData
NPnodePropertyTracks	data/nptypes.h	/^struct NPnodePropertyTracks {$/;"	s
NPnodePropertyTracks	data/nptypes.h	/^typedef struct NPnodePropertyTracks NPnodePropertyTracks;$/;"	t	typeref:struct:NPnodePropertyTracks
NPnodePtr	data/nptypes.h	/^typedef struct NPnode *NPnodePtr;$/;"	t	typeref:struct:NPnode
NPpin	data/nptypes.h	/^struct NPpin$/;"	s
NPpin	data/nptypes.h	/^typedef struct NPpin NPpin;$/;"	t	typeref:struct:NPpin
NPpinPtr	data/nptypes.h	/^typedef struct NPpin *NPpinPtr;$/;"	t	typeref:struct:NPpin
NPpoints	data/nptypes.h	/^struct NPpoints$/;"	s
NPpoints	data/nptypes.h	/^typedef struct NPpoints NPpoints;$/;"	t	typeref:struct:NPpoints
NPpointsPtr	data/nptypes.h	/^typedef struct NPpoints *NPpointsPtr;$/;"	t	typeref:struct:NPpoints
NPrecordTag	data/nptypes.h	/^struct NPrecordTag$/;"	s
NPrecordTag	data/nptypes.h	/^typedef struct NPrecordTag NPrecordTag;$/;"	t	typeref:struct:NPrecordTag
NPsurface	data/nptypes.h	/^struct NPsurface$/;"	s
NPsurface	data/nptypes.h	/^typedef struct NPsurface NPsurface;$/;"	t	typeref:struct:NPsurface
NPsurfacePtr	data/nptypes.h	/^typedef struct NPsurface *NPsurfacePtr;$/;"	t	typeref:struct:NPsurface
NPtags	data/nptypes.h	/^struct NPtags {$/;"	s
NPtags	data/nptypes.h	/^typedef struct NPtags NPtags;$/;"	t	typeref:struct:NPtags
NPtextTag	data/nptypes.h	/^struct NPtextTag$/;"	s
NPtextTag	data/nptypes.h	/^typedef struct NPtextTag NPtextTag;$/;"	t	typeref:struct:NPtextTag
NPtorus	io/gl/npgeometry.c	/^struct NPtorus {$/;"	s	file:
NPtorus	io/gl/npgeometry.c	/^typedef struct NPtorus NPtorus;$/;"	t	typeref:struct:NPtorus	file:
NPtorusPtr	io/gl/npgeometry.c	/^typedef struct NPtorus * NPtorusPtr;$/;"	t	typeref:struct:NPtorus	file:
NPubyteRGBA	data/nptypes.h	/^} NPubyteRGBA;$/;"	t	typeref:struct:__anon9
NPvideo	data/nptypes.h	/^struct NPvideo$/;"	s
NPvideo	data/nptypes.h	/^typedef struct NPvideo NPvideo;$/;"	t	typeref:struct:NPvideo
NPvideoPtr	data/nptypes.h	/^typedef struct NPvideo *NPvideoPtr;$/;"	t	typeref:struct:NPvideo
NPxref	data/nptypes.h	/^struct NPxref {$/;"	s
NPxref	data/nptypes.h	/^typedef struct NPxref NPxref;$/;"	t	typeref:struct:NPxref
OBJ	lib/soil/projects/makefile/makefile	/^OBJ = $(addprefix $(OBJDIR)\/, $(notdir $(SRCNAMES:.c=.o)))$/;"	m
OBJDIR	lib/soil/projects/makefile/makefile	/^OBJDIR = obj$/;"	m
OpenFileDialog	os/msw/npmsw.c	/^FILE* OpenFileDialog (const char* fileName, int kNPfileDialogOpen, void* dataRef)$/;"	f
PNG_TYPE	lib/soil/src/stb_image_aug.c	2031;"	d	file:
P_SOIL_GLCOMPRESSEDTEXIMAGE2DPROC	lib/soil/src/SOIL.c	/^typedef void (APIENTRY * P_SOIL_GLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t	file:
RESTART	lib/soil/src/stb_image_aug.c	1004;"	d	file:
RGBE_to_RGBdivA	lib/soil/src/image_helper.c	/^RGBE_to_RGBdivA$/;"	f
RGBE_to_RGBdivA2	lib/soil/src/image_helper.c	/^RGBE_to_RGBdivA2$/;"	f
SCAN_header	lib/soil/src/stb_image_aug.c	/^   SCAN_header,$/;"	e	enum:__anon62	file:
SCAN_load	lib/soil/src/stb_image_aug.c	/^   SCAN_load=0,$/;"	e	enum:__anon62	file:
SCAN_type	lib/soil/src/stb_image_aug.c	/^   SCAN_type,$/;"	e	enum:__anon62	file:
SOF	lib/soil/src/stb_image_aug.c	1262;"	d	file:
SOI	lib/soil/src/stb_image_aug.c	1260;"	d	file:
SOIL_CAPABILITY_NONE	lib/soil/src/SOIL.c	/^	SOIL_CAPABILITY_NONE = 0,$/;"	e	enum:__anon75	file:
SOIL_CAPABILITY_PRESENT	lib/soil/src/SOIL.c	/^	SOIL_CAPABILITY_PRESENT = 1$/;"	e	enum:__anon75	file:
SOIL_CAPABILITY_UNKNOWN	lib/soil/src/SOIL.c	/^	SOIL_CAPABILITY_UNKNOWN = -1,$/;"	e	enum:__anon75	file:
SOIL_CHECK_FOR_GL_ERRORS	lib/soil/src/SOIL.c	16;"	d	file:
SOIL_CLAMP_TO_EDGE	lib/soil/src/SOIL.c	53;"	d	file:
SOIL_CREATE_NEW_ID	lib/soil/src/SOIL.h	/^	SOIL_CREATE_NEW_ID = 0$/;"	e	enum:__anon55
SOIL_DDS_CUBEMAP_FACE_ORDER	lib/soil/src/SOIL.h	128;"	d
SOIL_FLAG_COMPRESS_TO_DXT	lib/soil/src/SOIL.h	/^	SOIL_FLAG_COMPRESS_TO_DXT = 32,$/;"	e	enum:__anon56
SOIL_FLAG_CoCg_Y	lib/soil/src/SOIL.h	/^	SOIL_FLAG_CoCg_Y = 256,$/;"	e	enum:__anon56
SOIL_FLAG_DDS_LOAD_DIRECT	lib/soil/src/SOIL.h	/^	SOIL_FLAG_DDS_LOAD_DIRECT = 64,$/;"	e	enum:__anon56
SOIL_FLAG_INVERT_Y	lib/soil/src/SOIL.h	/^	SOIL_FLAG_INVERT_Y = 16,$/;"	e	enum:__anon56
SOIL_FLAG_MIPMAPS	lib/soil/src/SOIL.h	/^	SOIL_FLAG_MIPMAPS = 2,$/;"	e	enum:__anon56
SOIL_FLAG_MULTIPLY_ALPHA	lib/soil/src/SOIL.h	/^	SOIL_FLAG_MULTIPLY_ALPHA = 8,$/;"	e	enum:__anon56
SOIL_FLAG_NTSC_SAFE_RGB	lib/soil/src/SOIL.h	/^	SOIL_FLAG_NTSC_SAFE_RGB = 128,$/;"	e	enum:__anon56
SOIL_FLAG_POWER_OF_TWO	lib/soil/src/SOIL.h	/^	SOIL_FLAG_POWER_OF_TWO = 1,$/;"	e	enum:__anon56
SOIL_FLAG_TEXTURE_RECTANGLE	lib/soil/src/SOIL.h	/^	SOIL_FLAG_TEXTURE_RECTANGLE = 512$/;"	e	enum:__anon56
SOIL_FLAG_TEXTURE_REPEATS	lib/soil/src/SOIL.h	/^	SOIL_FLAG_TEXTURE_REPEATS = 4,$/;"	e	enum:__anon56
SOIL_HDR_RGBE	lib/soil/src/SOIL.h	/^	SOIL_HDR_RGBE = 0,$/;"	e	enum:__anon58
SOIL_HDR_RGBdivA	lib/soil/src/SOIL.h	/^	SOIL_HDR_RGBdivA = 1,$/;"	e	enum:__anon58
SOIL_HDR_RGBdivA2	lib/soil/src/SOIL.h	/^	SOIL_HDR_RGBdivA2 = 2$/;"	e	enum:__anon58
SOIL_LOAD_AUTO	lib/soil/src/SOIL.h	/^	SOIL_LOAD_AUTO = 0,$/;"	e	enum:__anon54
SOIL_LOAD_L	lib/soil/src/SOIL.h	/^	SOIL_LOAD_L = 1,$/;"	e	enum:__anon54
SOIL_LOAD_LA	lib/soil/src/SOIL.h	/^	SOIL_LOAD_LA = 2,$/;"	e	enum:__anon54
SOIL_LOAD_RGB	lib/soil/src/SOIL.h	/^	SOIL_LOAD_RGB = 3,$/;"	e	enum:__anon54
SOIL_LOAD_RGBA	lib/soil/src/SOIL.h	/^	SOIL_LOAD_RGBA = 4$/;"	e	enum:__anon54
SOIL_MAX_CUBE_MAP_TEXTURE_SIZE	lib/soil/src/SOIL.c	65;"	d	file:
SOIL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	lib/soil/src/SOIL.c	73;"	d	file:
SOIL_NORMAL_MAP	lib/soil/src/SOIL.c	54;"	d	file:
SOIL_PROXY_TEXTURE_CUBE_MAP	lib/soil/src/SOIL.c	64;"	d	file:
SOIL_REFLECTION_MAP	lib/soil/src/SOIL.c	55;"	d	file:
SOIL_RGBA_S3TC_DXT1	lib/soil/src/SOIL.c	78;"	d	file:
SOIL_RGBA_S3TC_DXT3	lib/soil/src/SOIL.c	79;"	d	file:
SOIL_RGBA_S3TC_DXT5	lib/soil/src/SOIL.c	80;"	d	file:
SOIL_RGB_S3TC_DXT1	lib/soil/src/SOIL.c	77;"	d	file:
SOIL_SAVE_TYPE_BMP	lib/soil/src/SOIL.h	/^	SOIL_SAVE_TYPE_BMP = 1,$/;"	e	enum:__anon57
SOIL_SAVE_TYPE_DDS	lib/soil/src/SOIL.h	/^	SOIL_SAVE_TYPE_DDS = 2$/;"	e	enum:__anon57
SOIL_SAVE_TYPE_TGA	lib/soil/src/SOIL.h	/^	SOIL_SAVE_TYPE_TGA = 0,$/;"	e	enum:__anon57
SOIL_TEXTURE_BINDING_CUBE_MAP	lib/soil/src/SOIL.c	57;"	d	file:
SOIL_TEXTURE_CUBE_MAP	lib/soil/src/SOIL.c	56;"	d	file:
SOIL_TEXTURE_CUBE_MAP_NEGATIVE_X	lib/soil/src/SOIL.c	59;"	d	file:
SOIL_TEXTURE_CUBE_MAP_NEGATIVE_Y	lib/soil/src/SOIL.c	61;"	d	file:
SOIL_TEXTURE_CUBE_MAP_NEGATIVE_Z	lib/soil/src/SOIL.c	63;"	d	file:
SOIL_TEXTURE_CUBE_MAP_POSITIVE_X	lib/soil/src/SOIL.c	58;"	d	file:
SOIL_TEXTURE_CUBE_MAP_POSITIVE_Y	lib/soil/src/SOIL.c	60;"	d	file:
SOIL_TEXTURE_CUBE_MAP_POSITIVE_Z	lib/soil/src/SOIL.c	62;"	d	file:
SOIL_TEXTURE_RECTANGLE_ARB	lib/soil/src/SOIL.c	72;"	d	file:
SOIL_TEXTURE_WRAP_R	lib/soil/src/SOIL.c	52;"	d	file:
SOIL_create_OGL_single_cubemap	lib/soil/src/SOIL.c	/^	SOIL_create_OGL_single_cubemap$/;"	f
SOIL_create_OGL_texture	lib/soil/src/SOIL.c	/^	SOIL_create_OGL_texture$/;"	f
SOIL_direct_load_DDS	lib/soil/src/SOIL.c	/^unsigned int SOIL_direct_load_DDS($/;"	f
SOIL_direct_load_DDS_from_memory	lib/soil/src/SOIL.c	/^unsigned int SOIL_direct_load_DDS_from_memory($/;"	f
SOIL_free_image_data	lib/soil/src/SOIL.c	/^	SOIL_free_image_data$/;"	f
SOIL_internal_create_OGL_texture	lib/soil/src/SOIL.c	/^	SOIL_internal_create_OGL_texture$/;"	f
SOIL_last_result	lib/soil/src/SOIL.c	/^	SOIL_last_result$/;"	f
SOIL_load_OGL_HDR_texture	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_HDR_texture$/;"	f
SOIL_load_OGL_cubemap	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_cubemap$/;"	f
SOIL_load_OGL_cubemap_from_memory	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_cubemap_from_memory$/;"	f
SOIL_load_OGL_single_cubemap	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_single_cubemap$/;"	f
SOIL_load_OGL_single_cubemap_from_memory	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_single_cubemap_from_memory$/;"	f
SOIL_load_OGL_texture	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_texture$/;"	f
SOIL_load_OGL_texture_from_memory	lib/soil/src/SOIL.c	/^	SOIL_load_OGL_texture_from_memory$/;"	f
SOIL_load_image	lib/soil/src/SOIL.c	/^	SOIL_load_image$/;"	f
SOIL_load_image_from_memory	lib/soil/src/SOIL.c	/^	SOIL_load_image_from_memory$/;"	f
SOIL_save_image	lib/soil/src/SOIL.c	/^	SOIL_save_image$/;"	f
SOIL_save_screenshot	lib/soil/src/SOIL.c	/^	SOIL_save_screenshot$/;"	f
SOS	lib/soil/src/stb_image_aug.c	1263;"	d	file:
SRCDIR	lib/soil/projects/makefile/makefile	/^SRCDIR = ..\/..\/src$/;"	m
SRCNAMES	lib/soil/projects/makefile/makefile	/^SRCNAMES = \\$/;"	m
STBI_FAILURE_USERMSG	lib/soil/src/stb_image_aug.c	110;"	d	file:
STBI_NO_WRITE	lib/soil/src/stb_image_aug.c	102;"	d	file:
STBI_VERSION	lib/soil/src/stb_image_aug.h	161;"	d
STBI_default	lib/soil/src/stb_image_aug.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon73
STBI_grey	lib/soil/src/stb_image_aug.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon73
STBI_grey_alpha	lib/soil/src/stb_image_aug.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon73
STBI_rgb	lib/soil/src/stb_image_aug.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon73
STBI_rgb_alpha	lib/soil/src/stb_image_aug.h	/^   STBI_rgb_alpha  = 4,$/;"	e	enum:__anon73
SaveData	io/npch.c	/^bool SaveData(int numberTracks, int offset, float** trackData, unsigned char** trackUcharData, int** trackIntData, char** buffer)$/;"	f
SaveFileDialog	os/msw/npmsw.c	/^FILE* SaveFileDialog()$/;"	f
SaveHeader	io/npch.c	/^void SaveHeader(int offset, char* header, void *dataRef)$/;"	f
SaveHeaders	io/npch.c	/^int SaveHeaders(char** headers, void *dataRef)$/;"	f
SetIndexColor	io/gl/npgldraw.c	/^void SetIndexColor (NPubyteRGBA *color, int *colorIndex)$/;"	f
TraverseTree	npctrl.c	/^void TraverseTree (int command, NPnodePtr node, void* dataRef)$/;"	f
USE_COV_MAT	lib/soil/src/image_DXT.c	20;"	d	file:
UpdateNode	ctrl/npengine.c	/^void UpdateNode (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeCamera	ctrl/npengine.c	/^void UpdateNodeCamera (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeChild	ctrl/npengine.c	/^void UpdateNodeChild (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeData	ctrl/npengine.c	/^void UpdateNodeData (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeDefault	ctrl/npengine.c	/^void UpdateNodeDefault (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeGrid	ctrl/npengine.c	/^void UpdateNodeGrid (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodePin	ctrl/npengine.c	/^void UpdateNodePin (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodePoints	ctrl/npengine.c	/^void UpdateNodePoints (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeSurface	ctrl/npengine.c	/^void UpdateNodeSurface (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeVideo	ctrl/npengine.c	/^void UpdateNodeVideo (NPnodePtr node, pData dataRef)$/;"	f
UpdateNodeWithMouse	ctrl/npengine.c	/^void UpdateNodeWithMouse (NPnodePtr node, pData dataRef)$/;"	f
WATCH	io/watchtools.h	54;"	d
WATCH	io/watchtools.h	67;"	d
WATCH_BOOL	io/watchtools.h	45;"	d
WATCH_BOOL	io/watchtools.h	59;"	d
WATCH_END	io/watchtools.h	57;"	d
WATCH_END	io/watchtools.h	70;"	d
WATCH_FLOAT	io/watchtools.h	48;"	d
WATCH_FLOAT	io/watchtools.h	62;"	d
WATCH_FMT	io/watchtools.h	53;"	d
WATCH_FMT	io/watchtools.h	65;"	d
WATCH_FUNC	io/watchtools.h	55;"	d
WATCH_FUNC	io/watchtools.h	68;"	d
WATCH_FUNCCOUNT	io/watchtools.h	56;"	d
WATCH_FUNCCOUNT	io/watchtools.h	69;"	d
WATCH_INT	io/watchtools.h	46;"	d
WATCH_INT	io/watchtools.h	60;"	d
WATCH_ON	io/watchtools.h	29;"	d
WATCH_PTR	io/watchtools.h	50;"	d
WATCH_SEP	io/watchtools.h	39;"	d
WATCH_SEP	io/watchtools.h	41;"	d
WATCH_STR	io/watchtools.h	49;"	d
WATCH_STR	io/watchtools.h	63;"	d
WATCH_UINT	io/watchtools.h	47;"	d
WATCH_UINT	io/watchtools.h	61;"	d
WATCH_VEC	io/watchtools.h	51;"	d
WATCH_VEC	io/watchtools.h	64;"	d
WATCH_VEC2	io/watchtools.h	52;"	d
WATCH_VEC2	io/watchtools.h	66;"	d
WGLExtensionSupported	os/msw/npmsw.c	/^bool WGLExtensionSupported (const char *extension_name)$/;"	f
WIN32_LEAN_AND_MEAN	lib/freeglut/include/GL/freeglut_std.h	58;"	d
WIN32_LEAN_AND_MEAN	lib/soil/src/SOIL.c	19;"	d	file:
YCbCr_to_RGB_row	lib/soil/src/stb_image_aug.c	/^static void YCbCr_to_RGB_row(uint8 *out, uint8 *y, uint8 *pcb, uint8 *pcr, int count, int step)$/;"	f	file:
ZFAST_BITS	lib/soil/src/stb_image_aug.c	1607;"	d	file:
ZFAST_MASK	lib/soil/src/stb_image_aug.c	1608;"	d	file:
_STDBOOL_H	data/stdbool.h	26;"	d
_USE_MATH_DEFINES	npdata.h	40;"	d
__FREEGLUT_EXT_H__	lib/freeglut/include/GL/freeglut_ext.h	2;"	d
__FREEGLUT_H__	lib/freeglut/include/GL/freeglut.h	2;"	d
__FREEGLUT_STD_H__	lib/freeglut/include/GL/freeglut_std.h	2;"	d
__GLUT_H__	lib/freeglut/include/GL/glut.h	2;"	d
__bool_true_false_are_defined	data/stdbool.h	31;"	d
__forceinline	lib/soil/src/stb_image_aug.c	83;"	d	file:
__forceinline	lib/soil/src/stb_image_aug.c	85;"	d	file:
a	data/nptypes.h	/^	float r,g,b,a;$/;"	m	struct:__anon5
a	data/nptypes.h	/^	unsigned char r,g,b,a;$/;"	m	struct:__anon9
a	data/nptypes.h	/^	void*		a;			\/\/points to an array of data pointers$/;"	m	struct:NPnodeData
activeCam	data/nptypes.h	/^	NPnodePtr	activeCam;			\/\/active camera used for zsort distance$/;"	m	struct:NPmap
alphaMode	data/nptypes.h	/^	int			alphaMode;$/;"	m	struct:NPgl
angle	data/nptypes.h	/^	float x,y,z,angle;$/;"	m	struct:__anon2
aperture	data/nptypes.h	/^	float		aperture;					\/\/F stop$/;"	m	struct:NPcamera
appPath	data/nptypes.h	/^	char		appPath[4096];$/;"	m	struct:NPfile
argc	data/nptypes.h	/^	int			argc;$/;"	m	struct:NPio
argv	data/nptypes.h	/^	char**		argv;$/;"	m	struct:NPio
arrayIndex	data/nptypes.h	/^	int			arrayIndex;					\/\/current vertex index in the array$/;"	m	struct:NPgis
arrayIndex	data/nptypes.h	/^	int			arrayIndex;					\/\/current vertex index in the array$/;"	m	struct:NPpoints
arrayIndex	data/nptypes.h	/^	int			arrayIndex;					\/\/current vertex index in the array$/;"	m	struct:NPsurface
aspectRatio	data/nptypes.h	/^	float		aspectRatio;				\/\/1.0, 1.333, 1.777, 1.85, 2.25... $/;"	m	struct:NPcamera
aspectRatio	data/nptypes.h	/^	float		aspectRatio;				\/\/1.0, 1.333, 1.777, 1.85, 2.25... $/;"	m	struct:NPvideo
at_eof	lib/soil/src/stb_image_aug.c	/^__forceinline static int at_eof(stbi *s)$/;"	f	file:
attributeName	data/nptypes.h	/^	char*		attributeName;$/;"	m	struct:NPxref
autoZoom	data/nptypes.h	/^	NPintXYZ	autoZoom;					\/\/scales node to fit screen, scroll, center to node origin$/;"	m	struct:NPnode
auxA	data/nptypes.h	/^	NPintXYZ	auxA;						\/\/reserved for future use$/;"	m	struct:NPnode
auxB	data/nptypes.h	/^	NPintXYZ	auxB;						\/\/reserved for future use$/;"	m	struct:NPnode
average	data/nptypes.h	/^	int			average;					\/\/averaging type applied to data$/;"	m	struct:NPnode
axes	data/nptypes.h	/^	NPboolXYZ	axes;					\/\/selects active x,y,z, axes			debug, zz$/;"	m	struct:NPio
b	data/nptypes.h	/^	float r,g,b,a;$/;"	m	struct:__anon5
b	data/nptypes.h	/^	float r,g,b;$/;"	m	struct:__anon4
b	data/nptypes.h	/^	unsigned char r,g,b,a;$/;"	m	struct:__anon9
bias	data/nptypes.h	/^	NPfloatRGBA	bias;						\/\/color shift$/;"	m	struct:NPvideo
bit_reverse	lib/soil/src/stb_image_aug.c	/^__forceinline static int bit_reverse(int v, int bits)$/;"	f	file:
bitcount	lib/soil/src/stb_image_aug.c	/^static int bitcount(unsigned int a)$/;"	f	file:
bitreverse16	lib/soil/src/stb_image_aug.c	/^__forceinline static int bitreverse16(int n)$/;"	f	file:
blackLevel	data/nptypes.h	/^	float		blackLevel;$/;"	m	struct:NPvideo
bmask	lib/soil/src/stb_image_aug.c	/^static uint32 bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v	file:
bmp_load	lib/soil/src/stb_image_aug.c	/^static stbi_uc *bmp_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
bmp_test	lib/soil/src/stb_image_aug.c	/^static int bmp_test(stbi *s)$/;"	f	file:
bool	data/stdbool.h	28;"	d
box	data/nptypes.h	/^	NPfloatXY	box;						\/\/background box size$/;"	m	struct:NPconsole
boxColor	data/nptypes.h	/^	NPubyteRGBA	boxColor;					\/\/color assigned to new data$/;"	m	struct:NPconsole
boxColor	data/nptypes.h	/^	NPubyteRGBA boxColor;		\/\/background color of box$/;"	m	struct:NPtextTag
boxColorIndex	data/nptypes.h	/^	int			boxColorIndex;$/;"	m	struct:NPconsole
boxSize	data/nptypes.h	/^	NPfloatXY	boxSize;$/;"	m	struct:NPtextTag
branchLevel	data/nptypes.h	/^	int			branchLevel;				\/\/0 is the trunk, 1 is 1st branch$/;"	m	struct:NPnode
brightness	data/nptypes.h	/^	float		brightness;$/;"	m	struct:NPvideo
build_huffman	lib/soil/src/stb_image_aug.c	/^static int build_huffman(huffman *h, int *count)$/;"	f	file:
buttonC	data/nptypes.h	/^	bool		buttonC;$/;"	m	struct:NPmouse
buttonL	data/nptypes.h	/^	bool		buttonL;				\/\/true when pressed$/;"	m	struct:NPmouse
buttonR	data/nptypes.h	/^	bool		buttonR;$/;"	m	struct:NPmouse
ch	data/nptypes.h	/^	NPch		ch;$/;"	m	struct:NPio
chInputID	data/nptypes.h	/^	int			chInputID;					\/\/track to node channel_id map$/;"	m	struct:NPnode
chLastUpdated	data/nptypes.h	/^	int			chLastUpdated;				\/\/cycle of last channel update$/;"	m	struct:NPnode
chOutputID	data/nptypes.h	/^	int			chOutputID;					\/\/node to track record channel_id$/;"	m	struct:NPnode
channelDataSize	data/nptypes.h	/^	int			channelDataSize;		\/\/ amount of data in each track, any value between 0 and kNPtrackBufferSize$/;"	m	struct:NPch
channelFileTokenBuffer	data/nptypes.h	/^	char		channelFileTokenBuffer[kNPmaxLineLength];$/;"	m	struct:NPch
channelFileTokens	data/nptypes.h	/^	char*		channelFileTokens[kNPmaxTokens];			$/;"	m	struct:NPch
channelNextDataChangeTime	data/nptypes.h	/^	long long	channelNextDataChangeTime;	\/\/ next time to change data (by updating channelReadIndex) on this channel, used with sample rate to determine when to change data$/;"	m	struct:NPch
channelNumber	data/nptypes.h	/^	int			channelNumber;$/;"	m	struct:NPxref
channelReadIndex	data/nptypes.h	/^	int			channelReadIndex;		\/\/ offset in all tracks, next data to read$/;"	m	struct:NPch
channelSampleRate	data/nptypes.h	/^	int			channelSampleRate;		\/\/ sample rate for this channel, # of milliseconds to keep same channel data, e.g. 50 === 20 changes per second (1000 ms\/50 ms)$/;"	m	struct:NPch
channelWriteIndex	data/nptypes.h	/^	int			channelWriteIndex;		\/\/ offset in all tracks, next data to read$/;"	m	struct:NPch
charPerLine	data/nptypes.h	/^	int			charPerLine;				\/\/default is 80 characters per line$/;"	m	struct:NPconsole
check_for_GL_errors	lib/soil/src/SOIL.c	/^void check_for_GL_errors( const char *calling_location )$/;"	f
check_png_header	lib/soil/src/stb_image_aug.c	/^static int check_png_header(stbi *s)$/;"	f	file:
child	data/nptypes.h	/^	void*		child[kNPnodeChildMax];		\/\/children attached to this one$/;"	m	struct:NPnode
childCount	data/nptypes.h	/^	int			childCount;					\/\/current number of children$/;"	m	struct:NPnode
childIndex	data/nptypes.h	/^	int			childIndex;					\/\/the currently selected child$/;"	m	struct:NPnode
chunk	lib/soil/src/stb_image_aug.c	/^} chunk;$/;"	t	typeref:struct:__anon70	file:
clamp	lib/soil/src/stb_image_aug.c	/^__forceinline static uint8 clamp(int x)$/;"	f	file:
clamp_byte	lib/soil/src/image_helper.c	/^unsigned char clamp_byte( int x ) { return ( (x) < 0 ? (0) : ( (x) > 255 ? 255 : (x) ) ); }$/;"	f
cleanup_jpeg	lib/soil/src/stb_image_aug.c	/^static void cleanup_jpeg(jpeg *j)$/;"	f	file:
clear	data/nptypes.h	/^	NPfloatRGBA clear;				\/\/background color for clearing the screen$/;"	m	struct:NPio
clearFrameBuffer	data/nptypes.h	/^	int			clearFrameBuffer;$/;"	m	struct:NPio
clearIndex	data/nptypes.h	/^	int			clearIndex;$/;"	m	struct:NPio
clipFar	data/nptypes.h	/^	float		clipFar;$/;"	m	struct:NPcamera
clipNear	data/nptypes.h	/^	float		clipNear;$/;"	m	struct:NPcamera
cmDX	data/nptypes.h	/^	float		cmDX;$/;"	m	struct:NPmouse
cmDY	data/nptypes.h	/^	float		cmDY;$/;"	m	struct:NPmouse
code	lib/soil/src/stb_image_aug.c	/^   uint16 code[256];$/;"	m	struct:__anon64	file:
code_bits	lib/soil/src/stb_image_aug.c	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon65	file:
code_buffer	lib/soil/src/stb_image_aug.c	/^   uint32         code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon65	file:
code_buffer	lib/soil/src/stb_image_aug.c	/^   uint32 code_buffer;$/;"	m	struct:__anon69	file:
color	data/nptypes.h	/^	NPubyteRGBA	color;						\/\/color assigned to new data$/;"	m	struct:NPconsole
color	data/nptypes.h	/^	NPubyteRGBA	color;						\/\/color assigned to new data$/;"	m	struct:NPnode
color	data/nptypes.h	/^	NPubyteRGBA color;			\/\/used for the text and box outline$/;"	m	struct:NPtextTag
colorArray	data/nptypes.h	/^	unsigned char	*colorArray;				\/\/each point gets color assigned$/;"	m	struct:NPgis
colorArray	data/nptypes.h	/^	unsigned char	*colorArray;				\/\/each point gets color assigned$/;"	m	struct:NPpoints
colorArray	data/nptypes.h	/^	unsigned char	*colorArray;				\/\/each point gets color assigned$/;"	m	struct:NPsurface
colorFade	data/nptypes.h	/^	int			colorFade;					\/\/color alpha fade with time$/;"	m	struct:NPconsole
colorFade	data/nptypes.h	/^	int			colorFade;					\/\/cycles to fade color alpha, 0=off$/;"	m	struct:NPnode
colorIndex	data/nptypes.h	/^	int			colorIndex;$/;"	m	struct:NPconsole
colorIndex	data/nptypes.h	/^	int			colorIndex;$/;"	m	struct:NPnode
colorShift	data/nptypes.h	/^	float		colorShift;					\/\/pseudo Hue shift, -180 to 180$/;"	m	struct:NPnode
colorSpace	data/nptypes.h	/^	int			colorSpace;					\/\/8, 12bit, YUV, RGBA, XYZ, CMYK...$/;"	m	struct:NPcamera
colorSpace	data/nptypes.h	/^	int			colorSpace;					\/\/8, 12bit, YUV, RGBA, XYZ, CMYK...$/;"	m	struct:NPvideo
comparePinsDistanceFromCamera	io/gl/npgldraw.c	/^int comparePinsDistanceFromCamera (const void* a, const void* b)$/;"	f
compress_DDS_alpha_block	lib/soil/src/image_DXT.c	/^	compress_DDS_alpha_block$/;"	f
compress_DDS_color_block	lib/soil/src/image_DXT.c	/^	compress_DDS_color_block$/;"	f
compute_color_line_STDEV	lib/soil/src/image_DXT.c	/^void compute_color_line_STDEV($/;"	f
compute_huffman_codes	lib/soil/src/stb_image_aug.c	/^static int compute_huffman_codes(zbuf *a)$/;"	f	file:
compute_transparency	lib/soil/src/stb_image_aug.c	/^static int compute_transparency(png *z, uint8 tc[3], int out_n)$/;"	f	file:
compute_y	lib/soil/src/stb_image_aug.c	/^static uint8 compute_y(int r, int g, int b)$/;"	f	file:
console	data/nptypes.h	/^	NPconsole	console;$/;"	m	struct:NPhud
contrast	data/nptypes.h	/^	float		contrast;$/;"	m	struct:NPvideo
convert_RGB_to_YCoCg	lib/soil/src/image_helper.c	/^	convert_RGB_to_YCoCg$/;"	f
convert_YCoCg_to_RGB	lib/soil/src/image_helper.c	/^	convert_YCoCg_to_RGB$/;"	f
convert_bit_range	lib/soil/src/image_DXT.c	/^int convert_bit_range( int c, int from_bits, int to_bits )$/;"	f
convert_format	lib/soil/src/stb_image_aug.c	/^static unsigned char *convert_format(unsigned char *data, int img_n, int req_comp, uint x, uint y)$/;"	f	file:
convert_image_to_DXT1	lib/soil/src/image_DXT.c	/^unsigned char* convert_image_to_DXT1($/;"	f
convert_image_to_DXT5	lib/soil/src/image_DXT.c	/^unsigned char* convert_image_to_DXT5($/;"	f
count	data/nptypes.h	/^	int			count;$/;"	m	struct:NPtags
create_png_image	lib/soil/src/stb_image_aug.c	/^static int create_png_image(png *a, uint8 *raw, uint32 raw_len, int out_n)$/;"	f	file:
csvPath	data/nptypes.h	/^	char		csvPath[4096];$/;"	m	struct:NPfile
ctrl	data/nptypes.h	/^	NPctrl	ctrl;$/;"	m	struct:Data
currentNode	data/nptypes.h	/^	NPnodePtr	currentNode;		\/\/active node, commands, traversing tree$/;"	m	struct:NPmap
cycleCount	data/nptypes.h	/^	int			cycleCount;			\/\/number of cycles since app startup$/;"	m	struct:NPio
cycleDelta	data/nptypes.h	/^	double		cycleDelta;			\/\/the actual duration of the last cycle$/;"	m	struct:NPio
cyclePeriod	data/nptypes.h	/^	double		cyclePeriod;		\/\/period calculated from rate$/;"	m	struct:NPio
cycleRateHz	data/nptypes.h	/^	double		cycleRateHz;		\/\/target rate, not necessarily the actual$/;"	m	struct:NPio
data	data/nptypes.h	/^	void*		data;						\/\/node type specific data$/;"	m	struct:NPnode
data	lib/soil/src/stb_image_aug.c	/^      uint8 *data;$/;"	m	struct:__anon65::__anon66	file:
dataType	data/nptypes.h	/^	int*		dataType;		\/\/points to an int of the data type,$/;"	m	struct:NPnodeData
dc_pred	lib/soil/src/stb_image_aug.c	/^      int dc_pred;$/;"	m	struct:__anon65::__anon66	file:
dds_load	lib/soil/src/stbi_DDS_aug_c.h	/^static stbi_uc *dds_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f
dds_test	lib/soil/src/stbi_DDS_aug_c.h	/^static int dds_test(stbi *s)$/;"	f
decode	lib/soil/src/stb_image_aug.c	/^__forceinline static int decode(jpeg *j, huffman *h)$/;"	f	file:
decode_block	lib/soil/src/stb_image_aug.c	/^static int decode_block(jpeg *j, short data[64], huffman *hdc, huffman *hac, int b)$/;"	f	file:
decode_jpeg_header	lib/soil/src/stb_image_aug.c	/^static int decode_jpeg_header(jpeg *z, int scan)$/;"	f	file:
decode_jpeg_image	lib/soil/src/stb_image_aug.c	/^static int decode_jpeg_image(jpeg *j)$/;"	f	file:
default_distance	lib/soil/src/stb_image_aug.c	/^static uint8 default_length[288], default_distance[32];$/;"	v	file:
default_length	lib/soil/src/stb_image_aug.c	/^static uint8 default_length[288], default_distance[32];$/;"	v	file:
delta	data/nptypes.h	/^	NPfloatXYZ	delta;					\/\/mouse vector$/;"	m	struct:NPmouse
delta	lib/soil/src/stb_image_aug.c	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon64	file:
deltaSum	data/nptypes.h	/^	NPfloatXYZ	deltaSum;				\/\/sum of deltas, clears each NPE period$/;"	m	struct:NPmouse
dequant	lib/soil/src/stb_image_aug.c	/^   uint8 dequant[4][64];$/;"	m	struct:__anon65	file:
dequant2	lib/soil/src/stb_image_aug.c	/^   unsigned short dequant2[4][64];$/;"	m	struct:__anon65	file:
desc	data/nptypes.h	/^	char		desc[kNPdescSizeMax + 1];	\/\/allows for newline in desc$/;"	m	struct:NPrecordTag
desc	data/nptypes.h	/^	char		desc[kNPdescSizeMax + 1];	\/\/allows for newline in desc$/;"	m	struct:NPtextTag
descSize	data/nptypes.h	/^	int			descSize;			\/\/number of characters in description$/;"	m	struct:NPrecordTag
descSize	data/nptypes.h	/^	int			descSize;		\/\/number of characters in description$/;"	m	struct:NPtextTag
dezigzag	lib/soil/src/stb_image_aug.c	/^static uint8 dezigzag[64+15] =$/;"	v	file:
distFromCamera	data/nptypes.h	/^	float		distFromCamera;				\/\/MB-Transp					\/\/zz debug$/;"	m	struct:NPnode
dist_base	lib/soil/src/stb_image_aug.c	/^static int dist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	file:
dist_extra	lib/soil/src/stb_image_aug.c	/^static int dist_extra[32] =$/;"	v	file:
div16	lib/soil/src/stb_image_aug.c	1348;"	d	file:
div4	lib/soil/src/stb_image_aug.c	1309;"	d	file:
do_png	lib/soil/src/stb_image_aug.c	/^static unsigned char *do_png(png *p, int *x, int *y, int *n, int req_comp)$/;"	f	file:
do_zlib	lib/soil/src/stb_image_aug.c	/^static int do_zlib(zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	file:
drawAxes	data/nptypes.h	/^	bool		drawAxes;$/;"	m	struct:NPhud
drawCompass	data/nptypes.h	/^	bool		drawCompass;$/;"	m	struct:NPhud
drawConsole	data/nptypes.h	/^	bool		drawConsole;$/;"	m	struct:NPhud
drawCoord	data/nptypes.h	/^	bool		drawCoord;$/;"	m	struct:NPhud
drawFPS	data/nptypes.h	/^	bool		drawFPS;$/;"	m	struct:NPhud
drawMenu	data/nptypes.h	/^	int			drawMenu;$/;"	m	struct:NPio
drawMouseMode	data/nptypes.h	/^	bool		drawMouseMode;$/;"	m	struct:NPhud
drawSelectMode	data/nptypes.h	/^	bool		drawSelectMode;$/;"	m	struct:NPhud
drawTags	data/nptypes.h	/^	bool		drawTags;$/;"	m	struct:NPhud
dwAlphaBitMask	lib/soil/src/image_DXT.h	/^        unsigned int    dwAlphaBitMask;$/;"	m	struct:__anon51::__anon52
dwAlphaBitMask	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwAlphaBitMask;$/;"	m	struct:__anon59::__anon60
dwBBitMask	lib/soil/src/image_DXT.h	/^        unsigned int    dwBBitMask;$/;"	m	struct:__anon51::__anon52
dwBBitMask	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwBBitMask;$/;"	m	struct:__anon59::__anon60
dwCaps1	lib/soil/src/image_DXT.h	/^        unsigned int    dwCaps1;$/;"	m	struct:__anon51::__anon53
dwCaps1	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwCaps1;$/;"	m	struct:__anon59::__anon61
dwCaps2	lib/soil/src/image_DXT.h	/^        unsigned int    dwCaps2;$/;"	m	struct:__anon51::__anon53
dwCaps2	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwCaps2;$/;"	m	struct:__anon59::__anon61
dwDDSX	lib/soil/src/image_DXT.h	/^        unsigned int    dwDDSX;$/;"	m	struct:__anon51::__anon53
dwDDSX	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwDDSX;$/;"	m	struct:__anon59::__anon61
dwDepth	lib/soil/src/image_DXT.h	/^    unsigned int    dwDepth;$/;"	m	struct:__anon51
dwDepth	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwDepth;$/;"	m	struct:__anon59
dwFlags	lib/soil/src/image_DXT.h	/^        unsigned int    dwFlags;$/;"	m	struct:__anon51::__anon52
dwFlags	lib/soil/src/image_DXT.h	/^    unsigned int    dwFlags;$/;"	m	struct:__anon51
dwFlags	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwFlags;$/;"	m	struct:__anon59::__anon60
dwFlags	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwFlags;$/;"	m	struct:__anon59
dwFourCC	lib/soil/src/image_DXT.h	/^        unsigned int    dwFourCC;$/;"	m	struct:__anon51::__anon52
dwFourCC	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwFourCC;$/;"	m	struct:__anon59::__anon60
dwGBitMask	lib/soil/src/image_DXT.h	/^        unsigned int    dwGBitMask;$/;"	m	struct:__anon51::__anon52
dwGBitMask	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwGBitMask;$/;"	m	struct:__anon59::__anon60
dwHeight	lib/soil/src/image_DXT.h	/^    unsigned int    dwHeight;$/;"	m	struct:__anon51
dwHeight	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwHeight;$/;"	m	struct:__anon59
dwMagic	lib/soil/src/image_DXT.h	/^    unsigned int    dwMagic;$/;"	m	struct:__anon51
dwMagic	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwMagic;$/;"	m	struct:__anon59
dwMipMapCount	lib/soil/src/image_DXT.h	/^    unsigned int    dwMipMapCount;$/;"	m	struct:__anon51
dwMipMapCount	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwMipMapCount;$/;"	m	struct:__anon59
dwPitchOrLinearSize	lib/soil/src/image_DXT.h	/^    unsigned int    dwPitchOrLinearSize;$/;"	m	struct:__anon51
dwPitchOrLinearSize	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwPitchOrLinearSize;$/;"	m	struct:__anon59
dwRBitMask	lib/soil/src/image_DXT.h	/^        unsigned int    dwRBitMask;$/;"	m	struct:__anon51::__anon52
dwRBitMask	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwRBitMask;$/;"	m	struct:__anon59::__anon60
dwRGBBitCount	lib/soil/src/image_DXT.h	/^        unsigned int    dwRGBBitCount;$/;"	m	struct:__anon51::__anon52
dwRGBBitCount	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwRGBBitCount;$/;"	m	struct:__anon59::__anon60
dwReserved	lib/soil/src/image_DXT.h	/^        unsigned int    dwReserved;$/;"	m	struct:__anon51::__anon53
dwReserved	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwReserved;$/;"	m	struct:__anon59::__anon61
dwReserved1	lib/soil/src/image_DXT.h	/^    unsigned int    dwReserved1[ 11 ];$/;"	m	struct:__anon51
dwReserved1	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwReserved1[ 11 ];$/;"	m	struct:__anon59
dwReserved2	lib/soil/src/image_DXT.h	/^    unsigned int    dwReserved2;$/;"	m	struct:__anon51
dwReserved2	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwReserved2;$/;"	m	struct:__anon59
dwSize	lib/soil/src/image_DXT.h	/^        unsigned int    dwSize;$/;"	m	struct:__anon51::__anon52
dwSize	lib/soil/src/image_DXT.h	/^    unsigned int    dwSize;$/;"	m	struct:__anon51
dwSize	lib/soil/src/stbi_DDS_aug_c.h	/^      unsigned int    dwSize;$/;"	m	struct:__anon59::__anon60
dwSize	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwSize;$/;"	m	struct:__anon59
dwWidth	lib/soil/src/image_DXT.h	/^    unsigned int    dwWidth;$/;"	m	struct:__anon51
dwWidth	lib/soil/src/stbi_DDS_aug_c.h	/^    unsigned int    dwWidth;$/;"	m	struct:__anon59
e	lib/soil/src/stb_image_aug.c	/^static int e(char *str)$/;"	f	file:
e	lib/soil/src/stb_image_aug.c	132;"	d	file:
e	lib/soil/src/stb_image_aug.c	134;"	d	file:
e	lib/soil/src/stb_image_aug.c	136;"	d	file:
epf	lib/soil/src/stb_image_aug.c	139;"	d	file:
epuc	lib/soil/src/stb_image_aug.c	140;"	d	file:
expand	lib/soil/src/stb_image_aug.c	/^static int expand(zbuf *z, int n)  \/\/ need to make room for n bytes$/;"	f	file:
expand_palette	lib/soil/src/stb_image_aug.c	/^static int expand_palette(png *a, uint8 *palette, int len, int pal_img_n)$/;"	f	file:
expanded	lib/soil/src/stb_image_aug.c	/^   uint8 *idata, *expanded, *out;$/;"	m	struct:__anon71	file:
exposure	data/nptypes.h	/^	float		exposure;					\/\/in seconds$/;"	m	struct:NPcamera
extend_receive	lib/soil/src/stb_image_aug.c	/^__forceinline static int extend_receive(jpeg *j, int n)$/;"	f	file:
f2f	lib/soil/src/stb_image_aug.c	832;"	d	file:
facet	data/nptypes.h	/^	int			facet;						\/\/topo face number$/;"	m	struct:NPnode
factor	data/nptypes.h	/^	NPfloatXYZS	factor;				\/\/multiplies the value for scaling range$/;"	m	struct:NPlabel
failure_reason	lib/soil/src/stb_image_aug.c	/^static char *failure_reason;$/;"	v	file:
false	data/stdbool.h	30;"	d
fast	data/nptypes.h	/^	float	fast;						\/\/ fast velocity, shift key pressed $/;"	m	struct:NPctrl
fast	lib/soil/src/stb_image_aug.c	/^   uint16 fast[1 << ZFAST_BITS];$/;"	m	struct:__anon68	file:
fast	lib/soil/src/stb_image_aug.c	/^   uint8  fast[1 << FAST_BITS];$/;"	m	struct:__anon64	file:
file	data/nptypes.h	/^	NPfile		file;$/;"	m	struct:NPio
fileDataSource	data/nptypes.h	/^	FILE*		fileDataSource;$/;"	m	struct:NPch
fill_bits	lib/soil/src/stb_image_aug.c	/^static void fill_bits(zbuf *z)$/;"	f	file:
find_max_RGBE	lib/soil/src/image_helper.c	/^find_max_RGBE$/;"	f
first_row_filter	lib/soil/src/stb_image_aug.c	/^static uint8 first_row_filter[5] =$/;"	v	file:
firstcode	lib/soil/src/stb_image_aug.c	/^   uint16 firstcode[16];$/;"	m	struct:__anon68	file:
firstsymbol	lib/soil/src/stb_image_aug.c	/^   uint16 firstsymbol[16];$/;"	m	struct:__anon68	file:
float2fixed	lib/soil/src/stb_image_aug.c	1381;"	d	file:
float2int	lib/soil/src/stb_image_aug.c	532;"	d	file:
floatTracks	data/nptypes.h	/^	NPnodePropertyTracks	floatTracks;\/\/ tracks associated with "float" Node properties$/;"	m	struct:NPch
font	data/nptypes.h	/^	void*		font;$/;"	m	struct:NPconsole
font	data/nptypes.h	/^	void*		font;$/;"	m	struct:NPtextTag
format	data/nptypes.h	/^	int			format;						\/\/320p, 480i, 720p, 4K full app$/;"	m	struct:NPcamera
format	data/nptypes.h	/^	int			format;						\/\/320p, 480i, 720p, 4K full app$/;"	m	struct:NPvideo
formatID	data/nptypes.h	/^	int			formatID;					\/\/DB translation to antz field, label$/;"	m	struct:NPnode
fov	data/nptypes.h	/^	float		fov;						\/\/FOV 35mm, 70mm...$/;"	m	struct:NPcamera
fps	data/nptypes.h	/^	NPtextTag	fps;$/;"	m	struct:NPhud
fps	data/nptypes.h	/^	float		fps;						\/\/ 15, 24, 29.97, 30, 59.94, 120...$/;"	m	struct:NPcamera
fps	data/nptypes.h	/^	float		fps;						\/\/ 15, 24, 29.97, 30, 59.94, 120...$/;"	m	struct:NPvideo
freeze	data/nptypes.h	/^	bool		freeze;						\/\/freezes data and physics updates$/;"	m	struct:NPconsole
freeze	data/nptypes.h	/^	bool		freeze;						\/\/freezes data and physics updates$/;"	m	struct:NPnode
fsh	lib/soil/src/stb_image_aug.c	833;"	d	file:
fullFilePath	data/nptypes.h	/^	char*		fullFilePath;$/;"	m	struct:NPch
fullScreen	data/nptypes.h	/^	int			fullScreen;$/;"	m	struct:NPgl
g	data/nptypes.h	/^	float r,g,b,a;$/;"	m	struct:__anon5
g	data/nptypes.h	/^	float r,g,b;$/;"	m	struct:__anon4
g	data/nptypes.h	/^	unsigned char r,g,b,a;$/;"	m	struct:__anon9
gData	npdata.c	/^void* gData;$/;"	v
gain	data/nptypes.h	/^	NPfloatRGBA	gain;						\/\/color multiplier$/;"	m	struct:NPvideo
geometry	data/nptypes.h	/^	int			geometry;					\/\/cube, sphere, pin, FFT mesh...$/;"	m	struct:NPnode
get16	lib/soil/src/stb_image_aug.c	/^static int get16(stbi *s)$/;"	f	file:
get16le	lib/soil/src/stb_image_aug.c	/^static int get16le(stbi *s)$/;"	f	file:
get32	lib/soil/src/stb_image_aug.c	/^static uint32 get32(stbi *s)$/;"	f	file:
get32le	lib/soil/src/stb_image_aug.c	/^static uint32 get32le(stbi *s)$/;"	f	file:
get8	lib/soil/src/stb_image_aug.c	/^__forceinline static int get8(stbi *s)$/;"	f	file:
get8u	lib/soil/src/stb_image_aug.c	/^__forceinline static uint8 get8u(stbi *s)$/;"	f	file:
get_chunk_header	lib/soil/src/stb_image_aug.c	/^static chunk get_chunk_header(stbi *s)$/;"	f	file:
get_marker	lib/soil/src/stb_image_aug.c	/^static uint8 get_marker(jpeg *j)$/;"	f	file:
getn	lib/soil/src/stb_image_aug.c	/^static void getn(stbi *s, stbi_uc *buffer, int n)$/;"	f	file:
gl	data/nptypes.h	/^	NPgl		gl;$/;"	m	struct:NPio
glutCreateMenu	lib/freeglut/include/GL/freeglut_std.h	617;"	d
glutCreateMenu_ATEXIT_HACK	lib/freeglut/include/GL/freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateMenu_ATEXIT_HACK(void (* func)(int)) { return __glutCreateMenuWithExit(func, exit); }$/;"	f
glutCreateWindow	lib/freeglut/include/GL/freeglut_std.h	615;"	d
glutCreateWindow_ATEXIT_HACK	lib/freeglut/include/GL/freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$/;"	f
glutInit	lib/freeglut/include/GL/freeglut_std.h	613;"	d
glutInit_ATEXIT_HACK	lib/freeglut/include/GL/freeglut_std.h	/^static void FGAPIENTRY FGUNUSED glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$/;"	f
grow_buffer_unsafe	lib/soil/src/stb_image_aug.c	/^static void grow_buffer_unsafe(jpeg *j)$/;"	f	file:
h	lib/soil/src/stb_image_aug.c	/^      int h,v;$/;"	m	struct:__anon65::__anon66	file:
h2	lib/soil/src/stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon65::__anon66	file:
h2l_gamma_i	lib/soil/src/stb_image_aug.c	/^static float h2l_gamma_i=1.0f\/2.2f, h2l_scale_i=1.0f;$/;"	v	file:
h2l_scale_i	lib/soil/src/stb_image_aug.c	/^static float h2l_gamma_i=1.0f\/2.2f, h2l_scale_i=1.0f;$/;"	v	file:
ha	lib/soil/src/stb_image_aug.c	/^      int hd,ha;$/;"	m	struct:__anon65::__anon66	file:
has_DXT_capability	lib/soil/src/SOIL.c	/^static int has_DXT_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
has_NPOT_capability	lib/soil/src/SOIL.c	/^static int has_NPOT_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
has_cubemap_capability	lib/soil/src/SOIL.c	/^static int has_cubemap_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
has_tex_rectangle_capability	lib/soil/src/SOIL.c	/^static int has_tex_rectangle_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
hd	lib/soil/src/stb_image_aug.c	/^      int hd,ha;$/;"	m	struct:__anon65::__anon66	file:
hdr_convert	lib/soil/src/stb_image_aug.c	/^static void hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	file:
hdr_gettoken	lib/soil/src/stb_image_aug.c	/^static char *hdr_gettoken(stbi *z, char *buffer)$/;"	f	file:
hdr_load	lib/soil/src/stb_image_aug.c	/^static float *hdr_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
hdr_load_rgbe	lib/soil/src/stb_image_aug.c	/^static stbi_uc *hdr_load_rgbe(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
hdr_test	lib/soil/src/stb_image_aug.c	/^static int hdr_test(stbi *s)$/;"	f	file:
hdr_to_ldr	lib/soil/src/stb_image_aug.c	/^static stbi_uc *hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	file:
height	data/nptypes.h	/^	int			height;$/;"	m	struct:NPcamera
height	data/nptypes.h	/^	int			height;$/;"	m	struct:NPgl
height	data/nptypes.h	/^	int			height;$/;"	m	struct:NPvideo
hide	data/nptypes.h	/^	bool		hide;						\/\/hide the node, data stays active$/;"	m	struct:NPconsole
hide	data/nptypes.h	/^	bool		hide;						\/\/hide the node, data stays active$/;"	m	struct:NPnode
high_bit	lib/soil/src/stb_image_aug.c	/^static int high_bit(unsigned int z)$/;"	f	file:
historyMax	data/nptypes.h	/^	int			historyMax;					\/\/max number of lines stored$/;"	m	struct:NPconsole
hs	lib/soil/src/stb_image_aug.c	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon67	file:
hud	data/nptypes.h	/^	NPhud		hud;$/;"	m	struct:NPgl
hue	data/nptypes.h	/^	float		hue;$/;"	m	struct:NPvideo
huff_ac	lib/soil/src/stb_image_aug.c	/^   huffman huff_ac[4];$/;"	m	struct:__anon65	file:
huff_dc	lib/soil/src/stb_image_aug.c	/^   huffman huff_dc[4];$/;"	m	struct:__anon65	file:
huffman	lib/soil/src/stb_image_aug.c	/^} huffman;$/;"	t	typeref:struct:__anon64	file:
id	data/nptypes.h	/^	int			id;							\/\/local node ID $/;"	m	struct:NPnode
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPcamera
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPgis
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPgrid
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPnodeData
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPpin
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPpoints
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPsurface
id	data/nptypes.h	/^	int			id;							\/\/node ID$/;"	m	struct:NPvideo
id	data/nptypes.h	/^	int			id;					\/\/the first column is table id key$/;"	m	struct:NPrecordTag
id	data/nptypes.h	/^	int		id;$/;"	m	struct:NPmapType
id	lib/soil/src/stb_image_aug.c	/^      int id;$/;"	m	struct:__anon65::__anon66	file:
idata	lib/soil/src/stb_image_aug.c	/^   uint8 *idata, *expanded, *out;$/;"	m	struct:__anon71	file:
idct_block	lib/soil/src/stb_image_aug.c	/^static void idct_block(uint8 *out, int out_stride, short data[64], uint8 *dequantize)$/;"	f	file:
idct_block	lib/soil/src/stb_image_aug.c	/^static void idct_block(uint8 *out, int out_stride, short data[64], unsigned short *dequantize)$/;"	f	file:
img_buffer	lib/soil/src/stb_image_aug.c	/^   uint8 *img_buffer, *img_buffer_end;$/;"	m	struct:__anon63	file:
img_buffer_end	lib/soil/src/stb_image_aug.c	/^   uint8 *img_buffer, *img_buffer_end;$/;"	m	struct:__anon63	file:
img_comp	lib/soil/src/stb_image_aug.c	/^   } img_comp[4];$/;"	m	struct:__anon65	typeref:struct:__anon65::__anon66	file:
img_file	lib/soil/src/stb_image_aug.c	/^   FILE  *img_file;$/;"	m	struct:__anon63	file:
img_h_max	lib/soil/src/stb_image_aug.c	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon65	file:
img_mcu_h	lib/soil/src/stb_image_aug.c	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon65	file:
img_mcu_w	lib/soil/src/stb_image_aug.c	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon65	file:
img_mcu_x	lib/soil/src/stb_image_aug.c	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon65	file:
img_mcu_y	lib/soil/src/stb_image_aug.c	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon65	file:
img_n	lib/soil/src/stb_image_aug.c	/^   int img_n, img_out_n;$/;"	m	struct:__anon63	file:
img_out_n	lib/soil/src/stb_image_aug.c	/^   int img_n, img_out_n;$/;"	m	struct:__anon63	file:
img_v_max	lib/soil/src/stb_image_aug.c	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon65	file:
img_x	lib/soil/src/stb_image_aug.c	/^   uint32 img_x, img_y;$/;"	m	struct:__anon63	file:
img_y	lib/soil/src/stb_image_aug.c	/^   uint32 img_x, img_y;$/;"	m	struct:__anon63	file:
index	data/nptypes.h	/^	int			index;$/;"	m	struct:NPnodeData
init_defaults	lib/soil/src/stb_image_aug.c	/^static void init_defaults(void)$/;"	f	file:
innerRadius	data/nptypes.h	/^	float		innerRadius;				\/\/inner radius of the toroid$/;"	m	struct:NPpin
int16	lib/soil/src/stb_image_aug.c	/^typedef   signed short  int16;$/;"	t	file:
int32	lib/soil/src/stb_image_aug.c	/^typedef   signed int    int32;$/;"	t	file:
intTracks	data/nptypes.h	/^	NPnodePropertyTracks	intTracks;	\/\/ tracks associated with "int" Node properties$/;"	m	struct:NPch
interlaced	data/nptypes.h	/^	int			interlaced;					\/\/interlaced field order$/;"	m	struct:NPcamera
interlaced	data/nptypes.h	/^	int			interlaced;					\/\/interlaced field order$/;"	m	struct:NPvideo
interval	data/nptypes.h	/^	int			interval;					\/\/the interval to be averaged$/;"	m	struct:NPnode
io	data/nptypes.h	/^	NPio	io;$/;"	m	struct:Data
item	data/nptypes.h	/^	void*		item;$/;"	m	struct:NPdataItem
jpeg	lib/soil/src/stb_image_aug.c	/^} jpeg;$/;"	t	typeref:struct:__anon65	file:
justify	data/nptypes.h	/^	int			justify;$/;"	m	struct:NPconsole
kAverage	data/nptypes.h	/^	kAverage,$/;"	e	enum:__anon24
kAverageNull	data/nptypes.h	/^	kAverageNull = 0,$/;"	e	enum:__anon24
kAverageRootMeanSquare	data/nptypes.h	/^	kAverageRootMeanSquare,$/;"	e	enum:__anon24
kAverageRunning	data/nptypes.h	/^	kAverageRunning$/;"	e	enum:__anon24
kAverageSmoothed	data/nptypes.h	/^	kAverageSmoothed,$/;"	e	enum:__anon24
kCameraSensorDebayerCCD	data/nptypes.h	/^	kCameraSensorDebayerCCD,				\/\/single color CCD debayer pattern$/;"	e	enum:__anon17
kCameraSensorDepthCCD	data/nptypes.h	/^	kCameraSensorDepthCCD					\/\/BW or color with Z depth data$/;"	e	enum:__anon17
kCameraSensorMonoCCD	data/nptypes.h	/^	kCameraSensorMonoCCD,					\/\/monochrome CCD such as BW, IR$/;"	e	enum:__anon17
kCameraSensorNull	data/nptypes.h	/^	kCameraSensorNull = 0,					\/\/don't know the sensor type$/;"	e	enum:__anon17
kCameraSensorThreeCCD	data/nptypes.h	/^	kCameraSensorThreeCCD,					\/\/3CCD color sensor$/;"	e	enum:__anon17
kCenterJustify	data/nptypes.h	/^	kCenterJustify$/;"	e	enum:__anon25
kChannelCycleCount	data/nptypes.h	/^	kChannelCycleCount,$/;"	e	enum:__anon27
kChannelNull	data/nptypes.h	/^	kChannelNull = 0,$/;"	e	enum:__anon27
kChannelOscilloscope	data/nptypes.h	/^	kChannelOscilloscope$/;"	e	enum:__anon27
kColorSpaceCMYK_16	data/nptypes.h	/^	kColorSpaceCMYK_16,$/;"	e	enum:__anon22
kColorSpaceCMYK_8	data/nptypes.h	/^	kColorSpaceCMYK_8,			\/\/bits per channel$/;"	e	enum:__anon22
kColorSpaceNull	data/nptypes.h	/^	kColorSpaceNull = 0,$/;"	e	enum:__anon22
kColorSpaceRGBA_10	data/nptypes.h	/^	kColorSpaceRGBA_10,$/;"	e	enum:__anon22
kColorSpaceRGBA_12	data/nptypes.h	/^	kColorSpaceRGBA_12,$/;"	e	enum:__anon22
kColorSpaceRGBA_16	data/nptypes.h	/^	kColorSpaceRGBA_16,$/;"	e	enum:__anon22
kColorSpaceRGBA_24	data/nptypes.h	/^	kColorSpaceRGBA_24,$/;"	e	enum:__anon22
kColorSpaceRGBA_32	data/nptypes.h	/^	kColorSpaceRGBA_32,$/;"	e	enum:__anon22
kColorSpaceRGBA_8	data/nptypes.h	/^	kColorSpaceRGBA_8,			\/\/bits per channel$/;"	e	enum:__anon22
kColorSpaceRGB_10	data/nptypes.h	/^	kColorSpaceRGB_10,$/;"	e	enum:__anon22
kColorSpaceRGB_12	data/nptypes.h	/^	kColorSpaceRGB_12,$/;"	e	enum:__anon22
kColorSpaceRGB_16	data/nptypes.h	/^	kColorSpaceRGB_16,$/;"	e	enum:__anon22
kColorSpaceRGB_24	data/nptypes.h	/^	kColorSpaceRGB_24,$/;"	e	enum:__anon22
kColorSpaceRGB_32	data/nptypes.h	/^	kColorSpaceRGB_32,	$/;"	e	enum:__anon22
kColorSpaceRGB_8	data/nptypes.h	/^	kColorSpaceRGB_8,			\/\/bits per channel$/;"	e	enum:__anon22
kColorSpaceYUVA_422_10	data/nptypes.h	/^	kColorSpaceYUVA_422_10,$/;"	e	enum:__anon22
kColorSpaceYUVA_422_12	data/nptypes.h	/^	kColorSpaceYUVA_422_12,$/;"	e	enum:__anon22
kColorSpaceYUVA_422_8	data/nptypes.h	/^	kColorSpaceYUVA_422_8,		\/\/bits per channel$/;"	e	enum:__anon22
kColorSpaceYUVA_444_10	data/nptypes.h	/^	kColorSpaceYUVA_444_10,$/;"	e	enum:__anon22
kColorSpaceYUVA_444_12	data/nptypes.h	/^	kColorSpaceYUVA_444_12,$/;"	e	enum:__anon22
kColorSpaceYUVA_444_16	data/nptypes.h	/^	kColorSpaceYUVA_444_16,$/;"	e	enum:__anon22
kColorSpaceYUVA_444_8	data/nptypes.h	/^	kColorSpaceYUVA_444_8,		\/\/bits per channel$/;"	e	enum:__anon22
kColorSpaceYUV_422_10	data/nptypes.h	/^	kColorSpaceYUV_422_10,$/;"	e	enum:__anon22
kColorSpaceYUV_422_12	data/nptypes.h	/^	kColorSpaceYUV_422_12,$/;"	e	enum:__anon22
kColorSpaceYUV_422_8	data/nptypes.h	/^	kColorSpaceYUV_422_8,		\/\/bits per channel$/;"	e	enum:__anon22
kColorSpaceYUV_444_10	data/nptypes.h	/^	kColorSpaceYUV_444_10,$/;"	e	enum:__anon22
kColorSpaceYUV_444_12	data/nptypes.h	/^	kColorSpaceYUV_444_12,$/;"	e	enum:__anon22
kColorSpaceYUV_444_16	data/nptypes.h	/^	kColorSpaceYUV_444_16,$/;"	e	enum:__anon22
kColorSpaceYUV_444_8	data/nptypes.h	/^	kColorSpaceYUV_444_8,		\/\/bits per channel$/;"	e	enum:__anon22
kCtrlCommandNull	data/nptypes.h	/^	kCtrlCommandNull = 0,$/;"	e	enum:__anon30
kGetNull	data/nptypes.h	/^	kGetNull = 0,$/;"	e	enum:__anon14
kGlutKeyDown	data/nptypes.h	/^enum {	kGlutKeyDown = 1,$/;"	e	enum:__anon32
kGlutKeyDownSpecial	data/nptypes.h	/^		kGlutKeyDownSpecial,$/;"	e	enum:__anon32
kGlutKeyUp	data/nptypes.h	/^		kGlutKeyUp,$/;"	e	enum:__anon32
kGlutKeyUpSpecial	data/nptypes.h	/^		kGlutKeyUpSpecial$/;"	e	enum:__anon32
kKeyCode1	data/nptypes.h	/^				kKeyCode1,$/;"	e	enum:__anon33
kKeyCode2	data/nptypes.h	/^				kKeyCode2,$/;"	e	enum:__anon33
kKeyCode3	data/nptypes.h	/^				kKeyCode3,$/;"	e	enum:__anon33
kKeyCode4	data/nptypes.h	/^				kKeyCode4,$/;"	e	enum:__anon33
kKeyCode5	data/nptypes.h	/^				kKeyCode5,$/;"	e	enum:__anon33
kKeyCode6	data/nptypes.h	/^				kKeyCode6,$/;"	e	enum:__anon33
kKeyCode7	data/nptypes.h	/^				kKeyCode7,$/;"	e	enum:__anon33
kKeyCode8	data/nptypes.h	/^				kKeyCode8,$/;"	e	enum:__anon33
kKeyCode9	data/nptypes.h	/^				kKeyCode9,$/;"	e	enum:__anon33
kKeyCodeA	data/nptypes.h	/^enum {		kKeyCodeA = 0x00,$/;"	e	enum:__anon33
kKeyCodeB	data/nptypes.h	/^				kKeyCodeB = 0x0b,$/;"	e	enum:__anon33
kKeyCodeBackSlash	data/nptypes.h	/^				kKeyCodeBackSlash,$/;"	e	enum:__anon33
kKeyCodeBackSpace	data/nptypes.h	/^				kKeyCodeBackSpace,$/;"	e	enum:__anon33
kKeyCodeC	data/nptypes.h	/^				kKeyCodeC,$/;"	e	enum:__anon33
kKeyCodeComma	data/nptypes.h	/^				kKeyCodeComma,$/;"	e	enum:__anon33
kKeyCodeD	data/nptypes.h	/^				kKeyCodeD,$/;"	e	enum:__anon33
kKeyCodeDelete	data/nptypes.h	/^				kKeyCodeDelete = 0x33,$/;"	e	enum:__anon33
kKeyCodeDeleteRight	data/nptypes.h	/^				kKeyCodeDeleteRight = 0x75,$/;"	e	enum:__anon33
kKeyCodeDown	data/nptypes.h	/^				kKeyCodeDown = 0x7D,$/;"	e	enum:__anon33
kKeyCodeE	data/nptypes.h	/^				kKeyCodeE,$/;"	e	enum:__anon33
kKeyCodeESC	data/nptypes.h	/^				kKeyCodeESC = 0x35,$/;"	e	enum:__anon33
kKeyCodeEnd	data/nptypes.h	/^				kKeyCodeEnd = 0x77,$/;"	e	enum:__anon33
kKeyCodeEqual	data/nptypes.h	/^				kKeyCodeEqual,$/;"	e	enum:__anon33
kKeyCodeF	data/nptypes.h	/^				kKeyCodeF,$/;"	e	enum:__anon33
kKeyCodeF1	data/nptypes.h	/^				kKeyCodeF1 = 0x7A,$/;"	e	enum:__anon33
kKeyCodeF13	data/nptypes.h	/^				kKeyCodeF13 = 0x69,$/;"	e	enum:__anon33
kKeyCodeF16	data/nptypes.h	/^				kKeyCodeF16 = 0x6A,$/;"	e	enum:__anon33
kKeyCodeF2	data/nptypes.h	/^				kKeyCodeF2 = 0x78,$/;"	e	enum:__anon33
kKeyCodeF3	data/nptypes.h	/^				kKeyCodeF3 = 0x63,$/;"	e	enum:__anon33
kKeyCodeF4	data/nptypes.h	/^				kKeyCodeF4 = 0x76,$/;"	e	enum:__anon33
kKeyCodeF5	data/nptypes.h	/^				kKeyCodeF5 = 0x60,$/;"	e	enum:__anon33
kKeyCodeF6	data/nptypes.h	/^				kKeyCodeF6 = 0x61,$/;"	e	enum:__anon33
kKeyCodeF7	data/nptypes.h	/^				kKeyCodeF7 = 0x62,$/;"	e	enum:__anon33
kKeyCodeF8	data/nptypes.h	/^				kKeyCodeF8 = 0x64,$/;"	e	enum:__anon33
kKeyCodeG	data/nptypes.h	/^				kKeyCodeG,$/;"	e	enum:__anon33
kKeyCodeH	data/nptypes.h	/^				kKeyCodeH,$/;"	e	enum:__anon33
kKeyCodeHelp	data/nptypes.h	/^				kKeyCodeHelp = 0x72,$/;"	e	enum:__anon33
kKeyCodeHome	data/nptypes.h	/^				kKeyCodeHome = 0x73,$/;"	e	enum:__anon33
kKeyCodeI	data/nptypes.h	/^				kKeyCodeI,$/;"	e	enum:__anon33
kKeyCodeJ	data/nptypes.h	/^				kKeyCodeJ,$/;"	e	enum:__anon33
kKeyCodeK	data/nptypes.h	/^				kKeyCodeK,$/;"	e	enum:__anon33
kKeyCodeL	data/nptypes.h	/^				kKeyCodeL,$/;"	e	enum:__anon33
kKeyCodeLeft	data/nptypes.h	/^				kKeyCodeLeft = 0x7B,$/;"	e	enum:__anon33
kKeyCodeLeftBracket	data/nptypes.h	/^				kKeyCodeLeftBracket,$/;"	e	enum:__anon33
kKeyCodeM	data/nptypes.h	/^				kKeyCodeM,$/;"	e	enum:__anon33
kKeyCodeMinus	data/nptypes.h	/^				kKeyCodeMinus,$/;"	e	enum:__anon33
kKeyCodeN	data/nptypes.h	/^				kKeyCodeN,$/;"	e	enum:__anon33
kKeyCodeNumPad1	data/nptypes.h	/^				kKeyCodeNumPad1 = 0x53,$/;"	e	enum:__anon33
kKeyCodeNumPad2	data/nptypes.h	/^				kKeyCodeNumPad2 = 0x54,$/;"	e	enum:__anon33
kKeyCodeNumPad3	data/nptypes.h	/^				kKeyCodeNumPad3 = 0x55,$/;"	e	enum:__anon33
kKeyCodeNumPad4	data/nptypes.h	/^				kKeyCodeNumPad4 = 0x56,$/;"	e	enum:__anon33
kKeyCodeNumPad5	data/nptypes.h	/^				kKeyCodeNumPad5 = 0x57,$/;"	e	enum:__anon33
kKeyCodeNumPad6	data/nptypes.h	/^				kKeyCodeNumPad6 = 0x58,$/;"	e	enum:__anon33
kKeyCodeNumPad7	data/nptypes.h	/^				kKeyCodeNumPad7 = 0x59,$/;"	e	enum:__anon33
kKeyCodeNumPad8	data/nptypes.h	/^				kKeyCodeNumPad8 = 0x5B,$/;"	e	enum:__anon33
kKeyCodeNumPad9	data/nptypes.h	/^				kKeyCodeNumPad9 = 0x5C$/;"	e	enum:__anon33
kKeyCodeNumPadClear	data/nptypes.h	/^				kKeyCodeNumPadClear = 0x47, $/;"	e	enum:__anon33
kKeyCodeNumPadEnter	data/nptypes.h	/^				kKeyCodeNumPadEnter = 0x4C,$/;"	e	enum:__anon33
kKeyCodeNumPadEqual	data/nptypes.h	/^				kKeyCodeNumPadEqual = 0x51,$/;"	e	enum:__anon33
kKeyCodeNumPadMinus	data/nptypes.h	/^				kKeyCodeNumPadMinus = 0x4E,$/;"	e	enum:__anon33
kKeyCodeNumPadPeriod	data/nptypes.h	/^				kKeyCodeNumPadPeriod = 0x41,$/;"	e	enum:__anon33
kKeyCodeNumPadPlus	data/nptypes.h	/^				kKeyCodeNumPadPlus = 0x45,$/;"	e	enum:__anon33
kKeyCodeNumPadSlash	data/nptypes.h	/^				kKeyCodeNumPadSlash = 0x4B,$/;"	e	enum:__anon33
kKeyCodeNumPadStar	data/nptypes.h	/^				kKeyCodeNumPadStar = 0x43,$/;"	e	enum:__anon33
kKeyCodeNumPadZero	data/nptypes.h	/^				kKeyCodeNumPadZero = 0x52,$/;"	e	enum:__anon33
kKeyCodeO	data/nptypes.h	/^				kKeyCodeO,$/;"	e	enum:__anon33
kKeyCodeP	data/nptypes.h	/^				kKeyCodeP,$/;"	e	enum:__anon33
kKeyCodePageDown	data/nptypes.h	/^				kKeyCodePageDown = 0x79,$/;"	e	enum:__anon33
kKeyCodePageUp	data/nptypes.h	/^				kKeyCodePageUp = 0x74,$/;"	e	enum:__anon33
kKeyCodePeriod	data/nptypes.h	/^				kKeyCodePeriod,$/;"	e	enum:__anon33
kKeyCodeQ	data/nptypes.h	/^				kKeyCodeQ,$/;"	e	enum:__anon33
kKeyCodeR	data/nptypes.h	/^				kKeyCodeR,$/;"	e	enum:__anon33
kKeyCodeReturn	data/nptypes.h	/^				kKeyCodeReturn,$/;"	e	enum:__anon33
kKeyCodeRight	data/nptypes.h	/^				kKeyCodeRight = 0x7C, $/;"	e	enum:__anon33
kKeyCodeRightBracket	data/nptypes.h	/^				kKeyCodeRightBracket,$/;"	e	enum:__anon33
kKeyCodeRightQuote	data/nptypes.h	/^				kKeyCodeRightQuote,$/;"	e	enum:__anon33
kKeyCodeS	data/nptypes.h	/^				kKeyCodeS,$/;"	e	enum:__anon33
kKeyCodeSemiColon	data/nptypes.h	/^				kKeyCodeSemiColon,$/;"	e	enum:__anon33
kKeyCodeSlash	data/nptypes.h	/^				kKeyCodeSlash,$/;"	e	enum:__anon33
kKeyCodeSpace	data/nptypes.h	/^				kKeyCodeSpace,$/;"	e	enum:__anon33
kKeyCodeT	data/nptypes.h	/^				kKeyCodeT,$/;"	e	enum:__anon33
kKeyCodeTab	data/nptypes.h	/^				kKeyCodeTab,$/;"	e	enum:__anon33
kKeyCodeTilda	data/nptypes.h	/^				kKeyCodeTilda,$/;"	e	enum:__anon33
kKeyCodeU	data/nptypes.h	/^				kKeyCodeU,$/;"	e	enum:__anon33
kKeyCodeUp	data/nptypes.h	/^				kKeyCodeUp = 0x7E,$/;"	e	enum:__anon33
kKeyCodeV	data/nptypes.h	/^				kKeyCodeV = 0x09,$/;"	e	enum:__anon33
kKeyCodeW	data/nptypes.h	/^				kKeyCodeW,$/;"	e	enum:__anon33
kKeyCodeX	data/nptypes.h	/^				kKeyCodeX,$/;"	e	enum:__anon33
kKeyCodeY	data/nptypes.h	/^				kKeyCodeY,$/;"	e	enum:__anon33
kKeyCodeZ	data/nptypes.h	/^				kKeyCodeZ,$/;"	e	enum:__anon33
kKeyCodeZero	data/nptypes.h	/^				kKeyCodeZero,$/;"	e	enum:__anon33
kKeyDown	data/nptypes.h	/^enum {	kKeyDown = 1,$/;"	e	enum:__anon31
kKeyModifier	data/nptypes.h	/^		kKeyModifier$/;"	e	enum:__anon31
kKeyRepeat	data/nptypes.h	/^		kKeyRepeat,$/;"	e	enum:__anon31
kKeyUp	data/nptypes.h	/^		kKeyUp,$/;"	e	enum:__anon31
kLargeFont	data/nptypes.h	/^	kLargeFont$/;"	e	enum:__anon26
kLeftJustify	data/nptypes.h	/^	kLeftJustify = 0,$/;"	e	enum:__anon25
kMediumFont	data/nptypes.h	/^	kMediumFont,$/;"	e	enum:__anon26
kNPGLboolean	data/nptypes.h	/^	kNPGLboolean,$/;"	e	enum:__anon34
kNPGLfloat	data/nptypes.h	/^	kNPGLfloat,$/;"	e	enum:__anon34
kNPGLint	data/nptypes.h	/^	kNPGLint,$/;"	e	enum:__anon34
kNPGLubyte	data/nptypes.h	/^	kNPGLubyte,$/;"	e	enum:__anon34
kNPTypeNull	data/nptypes.h	/^	kNPTypeNull = 0,$/;"	e	enum:__anon34
kNP_GLUT_BITMAP_8_BY_13	data/nptypes.h	/^	kNP_GLUT_BITMAP_8_BY_13,$/;"	e	enum:__anon47
kNP_GLUT_BITMAP_9_BY_15	data/nptypes.h	1720;"	d
kNP_GLUT_BITMAP_HELVETICA_10	data/nptypes.h	/^	kNP_GLUT_BITMAP_HELVETICA_10,$/;"	e	enum:__anon47
kNP_GLUT_BITMAP_HELVETICA_12	data/nptypes.h	/^	kNP_GLUT_BITMAP_HELVETICA_12,$/;"	e	enum:__anon47
kNP_GLUT_BITMAP_HELVETICA_18	data/nptypes.h	/^	kNP_GLUT_BITMAP_HELVETICA_18,$/;"	e	enum:__anon47
kNP_GLUT_BITMAP_TIMES_ROMAN_10	data/nptypes.h	/^	kNP_GLUT_BITMAP_TIMES_ROMAN_10,$/;"	e	enum:__anon47
kNP_GLUT_BITMAP_TIMES_ROMAN_24	data/nptypes.h	/^	kNP_GLUT_BITMAP_TIMES_ROMAN_24,$/;"	e	enum:__anon47
kNP_GLUT_STROKE_MONO_ROMAN	data/nptypes.h	/^	kNP_GLUT_STROKE_MONO_ROMAN,$/;"	e	enum:__anon47
kNP_GLUT_STROKE_ROMAN	data/nptypes.h	/^	kNP_GLUT_STROKE_ROMAN = 0,$/;"	e	enum:__anon47
kNPalphaModeAdditive	data/nptypes.h	/^	kNPalphaModeAdditive,$/;"	e	enum:__anon23
kNPalphaModeCount	data/nptypes.h	/^	kNPalphaModeCount$/;"	e	enum:__anon23
kNPalphaModeDark	data/nptypes.h	/^	kNPalphaModeDark,$/;"	e	enum:__anon23
kNPalphaModeNull	data/nptypes.h	/^	kNPalphaModeNull = 0,$/;"	e	enum:__anon23
kNPalphaModeSubtractive	data/nptypes.h	/^	kNPalphaModeSubtractive,	\/\/default alphaMode$/;"	e	enum:__anon23
kNPaperture	data/nptypes.h	/^	kNPaperture,$/;"	e	enum:__anon34
kNPaspectRatio	data/nptypes.h	/^	kNPaspectRatio,$/;"	e	enum:__anon34
kNPattributeNameOffset	data/nptypes.h	89;"	d
kNPautoZoom	data/nptypes.h	/^	kNPautoZoom,$/;"	e	enum:__anon34
kNPauxA	data/nptypes.h	/^	kNPauxA,$/;"	e	enum:__anon34
kNPauxB	data/nptypes.h	/^	kNPauxB,$/;"	e	enum:__anon34
kNPaverage	data/nptypes.h	/^	kNPaverage,$/;"	e	enum:__anon34
kNPavgCount	io/npmouse.c	35;"	d	file:
kNPbase	data/nptypes.h	/^	kNPbase,$/;"	e	enum:__anon34
kNPbaseItemCount	data/nptypes.h	70;"	d
kNPbool	data/nptypes.h	/^	kNPbool,$/;"	e	enum:__anon34
kNPboolXYZ	data/nptypes.h	/^	kNPboolXYZ,$/;"	e	enum:__anon34
kNPboolXYZS	data/nptypes.h	/^	kNPboolXYZS,$/;"	e	enum:__anon34
kNPboolean	data/nptypes.h	/^	kNPboolean,$/;"	e	enum:__anon34
kNPbranchLevel	data/nptypes.h	/^	kNPbranchLevel,$/;"	e	enum:__anon34
kNPbyte	data/nptypes.h	/^	kNPbyte,$/;"	e	enum:__anon34
kNPcamera	data/nptypes.h	/^	kNPcamera,$/;"	e	enum:__anon34
kNPcameraCount	data/nptypes.h	50;"	d
kNPcameraItemCount	data/nptypes.h	72;"	d
kNPcenterNull	data/nptypes.h	/^	kNPcenterNull = 0,$/;"	e	enum:__anon39
kNPcenterPerCycle	data/nptypes.h	/^	kNPcenterPerCycle,		\/\/center on the current data point$/;"	e	enum:__anon39
kNPcenterPerGrid	data/nptypes.h	/^	kNPcenterPerGrid		\/\/center when current point exceeds 1 grid space$/;"	e	enum:__anon39
kNPchInputID	data/nptypes.h	/^	kNPchInputID,$/;"	e	enum:__anon34
kNPchLastUpdated	data/nptypes.h	/^	kNPchLastUpdated,$/;"	e	enum:__anon34
kNPchOutputID	data/nptypes.h	/^	kNPchOutputID,$/;"	e	enum:__anon34
kNPchannelMapHeader	data/nptypes.h	536;"	d
kNPchannelMax	data/nptypes.h	93;"	d
kNPchannelOffset	data/nptypes.h	90;"	d
kNPchild	data/nptypes.h	/^	kNPchild,$/;"	e	enum:__anon34
kNPchildCount	data/nptypes.h	/^	kNPchildCount,$/;"	e	enum:__anon34
kNPchildIndex	data/nptypes.h	/^	kNPchildIndex,$/;"	e	enum:__anon34
kNPclipFar	data/nptypes.h	/^	kNPclipFar,$/;"	e	enum:__anon34
kNPclipNear	data/nptypes.h	/^	kNPclipNear,$/;"	e	enum:__anon34
kNPcmd	data/nptypes.h	/^	kNPcmd,$/;"	e	enum:__anon34
kNPcmdAlphaDown	data/nptypes.h	/^	kNPcmdAlphaDown,$/;"	e	enum:__anon30
kNPcmdAlphaMode	data/nptypes.h	/^	kNPcmdAlphaMode,$/;"	e	enum:__anon30
kNPcmdAlphaUp	data/nptypes.h	/^	kNPcmdAlphaUp,$/;"	e	enum:__anon30
kNPcmdAltColor	data/nptypes.h	/^	kNPcmdAltColor,$/;"	e	enum:__anon30
kNPcmdBackground	data/nptypes.h	/^	kNPcmdBackground,$/;"	e	enum:__anon30
kNPcmdBiasDown	data/nptypes.h	/^	kNPcmdBiasDown,$/;"	e	enum:__anon30
kNPcmdBiasUp	data/nptypes.h	/^	kNPcmdBiasUp,$/;"	e	enum:__anon30
kNPcmdCamera	data/nptypes.h	/^	kNPcmdCamera,$/;"	e	enum:__anon30
kNPcmdCenter	data/nptypes.h	/^	kNPcmdCenter,$/;"	e	enum:__anon30
kNPcmdChannelDown	data/nptypes.h	/^	kNPcmdChannelDown,$/;"	e	enum:__anon30
kNPcmdChannelUp	data/nptypes.h	/^	kNPcmdChannelUp,$/;"	e	enum:__anon30
kNPcmdClear	data/nptypes.h	/^	kNPcmdClear,$/;"	e	enum:__anon30
kNPcmdClearFrameBuffer	data/nptypes.h	/^	kNPcmdClearFrameBuffer,$/;"	e	enum:__anon30
kNPcmdColorDown	data/nptypes.h	/^	kNPcmdColorDown,$/;"	e	enum:__anon30
kNPcmdColorFade	data/nptypes.h	/^	kNPcmdColorFade,$/;"	e	enum:__anon30
kNPcmdColorPallete	data/nptypes.h	/^	kNPcmdColorPallete,$/;"	e	enum:__anon30
kNPcmdColorUp	data/nptypes.h	/^	kNPcmdColorUp,$/;"	e	enum:__anon30
kNPcmdCount	data/nptypes.h	/^	kNPcmdCount$/;"	e	enum:__anon30
kNPcmdDelete	data/nptypes.h	/^	kNPcmdDelete,$/;"	e	enum:__anon30
kNPcmdFreeze	data/nptypes.h	/^	kNPcmdFreeze,$/;"	e	enum:__anon30
kNPcmdFullscreen	data/nptypes.h	/^	kNPcmdFullscreen,$/;"	e	enum:__anon30
kNPcmdGainDown	data/nptypes.h	/^	kNPcmdGainDown,$/;"	e	enum:__anon30
kNPcmdGainUp	data/nptypes.h	/^	kNPcmdGainUp,$/;"	e	enum:__anon30
kNPcmdGrid	data/nptypes.h	/^	kNPcmdGrid,$/;"	e	enum:__anon30
kNPcmdHUD	data/nptypes.h	/^	kNPcmdHUD,$/;"	e	enum:__anon30
kNPcmdHide	data/nptypes.h	/^	kNPcmdHide,$/;"	e	enum:__anon30
kNPcmdLight	data/nptypes.h	/^	kNPcmdLight,$/;"	e	enum:__anon30
kNPcmdLines	data/nptypes.h	/^	kNPcmdLines,$/;"	e	enum:__anon30
kNPcmdMenu	data/nptypes.h	/^	kNPcmdMenu = 4242,$/;"	e	enum:__anon30
kNPcmdMesh	data/nptypes.h	/^	kNPcmdMesh,$/;"	e	enum:__anon30
kNPcmdNew	data/nptypes.h	/^	kNPcmdNew,$/;"	e	enum:__anon30
kNPcmdNext	data/nptypes.h	/^	kNPcmdNext,$/;"	e	enum:__anon30
kNPcmdNextBranch	data/nptypes.h	/^	kNPcmdNextBranch,$/;"	e	enum:__anon30
kNPcmdNormalMode	data/nptypes.h	/^	kNPcmdNormalMode,$/;"	e	enum:__anon30
kNPcmdPause	data/nptypes.h	/^	kNPcmdPause,$/;"	e	enum:__anon30
kNPcmdPin	data/nptypes.h	/^	kNPcmdPin,$/;"	e	enum:__anon30
kNPcmdPoints	data/nptypes.h	/^	kNPcmdPoints,	$/;"	e	enum:__anon30
kNPcmdPresetEight	data/nptypes.h	/^	kNPcmdPresetEight,$/;"	e	enum:__anon30
kNPcmdPresetFive	data/nptypes.h	/^	kNPcmdPresetFive,$/;"	e	enum:__anon30
kNPcmdPresetFour	data/nptypes.h	/^	kNPcmdPresetFour,$/;"	e	enum:__anon30
kNPcmdPresetOne	data/nptypes.h	/^	kNPcmdPresetOne,$/;"	e	enum:__anon30
kNPcmdPresetSeven	data/nptypes.h	/^	kNPcmdPresetSeven,$/;"	e	enum:__anon30
kNPcmdPresetSix	data/nptypes.h	/^	kNPcmdPresetSix,$/;"	e	enum:__anon30
kNPcmdPresetThree	data/nptypes.h	/^	kNPcmdPresetThree,$/;"	e	enum:__anon30
kNPcmdPresetTwo	data/nptypes.h	/^	kNPcmdPresetTwo,$/;"	e	enum:__anon30
kNPcmdPrevious	data/nptypes.h	/^	kNPcmdPrevious,$/;"	e	enum:__anon30
kNPcmdPreviousBranch	data/nptypes.h	/^	kNPcmdPreviousBranch,$/;"	e	enum:__anon30
kNPcmdPrimitive	data/nptypes.h	/^	kNPcmdPrimitive,$/;"	e	enum:__anon30
kNPcmdRatio	data/nptypes.h	/^	kNPcmdRatio,$/;"	e	enum:__anon30
kNPcmdRotateCCW	data/nptypes.h	/^	kNPcmdRotateCCW,$/;"	e	enum:__anon30
kNPcmdRotateCCWOff	data/nptypes.h	/^	kNPcmdRotateCCWOff,$/;"	e	enum:__anon30
kNPcmdRotateCW	data/nptypes.h	/^	kNPcmdRotateCW,$/;"	e	enum:__anon30
kNPcmdRotateCWOff	data/nptypes.h	/^	kNPcmdRotateCWOff,$/;"	e	enum:__anon30
kNPcmdRotateDown	data/nptypes.h	/^	kNPcmdRotateDown,$/;"	e	enum:__anon30
kNPcmdRotateDownOff	data/nptypes.h	/^	kNPcmdRotateDownOff,$/;"	e	enum:__anon30
kNPcmdRotateLeft	data/nptypes.h	/^	kNPcmdRotateLeft,$/;"	e	enum:__anon30
kNPcmdRotateLeftOff	data/nptypes.h	/^	kNPcmdRotateLeftOff,$/;"	e	enum:__anon30
kNPcmdRotateRight	data/nptypes.h	/^	kNPcmdRotateRight,$/;"	e	enum:__anon30
kNPcmdRotateRightOff	data/nptypes.h	/^	kNPcmdRotateRightOff,$/;"	e	enum:__anon30
kNPcmdRotateUp	data/nptypes.h	/^	kNPcmdRotateUp,$/;"	e	enum:__anon30
kNPcmdRotateUpOff	data/nptypes.h	/^	kNPcmdRotateUpOff,$/;"	e	enum:__anon30
kNPcmdSampleInterval	data/nptypes.h	/^	kNPcmdSampleInterval,$/;"	e	enum:__anon30
kNPcmdScroll	data/nptypes.h	/^	kNPcmdScroll,$/;"	e	enum:__anon30
kNPcmdSegments	data/nptypes.h	/^	kNPcmdSegments,$/;"	e	enum:__anon30
kNPcmdSelect	data/nptypes.h	/^	kNPcmdSelect,$/;"	e	enum:__anon30
kNPcmdSelectAll	data/nptypes.h	/^	kNPcmdSelectAll,$/;"	e	enum:__anon30
kNPcmdSelectAllInvert	data/nptypes.h	/^	kNPcmdSelectAllInvert,$/;"	e	enum:__anon30
kNPcmdSelectAxes	data/nptypes.h	/^	kNPcmdSelectAxes,$/;"	e	enum:__anon30
kNPcmdSelectNone	data/nptypes.h	/^	kNPcmdSelectNone,$/;"	e	enum:__anon30
kNPcmdSelectOff	data/nptypes.h	/^	kNPcmdSelectOff,$/;"	e	enum:__anon30
kNPcmdSelectOne	data/nptypes.h	/^	kNPcmdSelectOne,$/;"	e	enum:__anon30
kNPcmdSelectSetNone	data/nptypes.h	/^	kNPcmdSelectSetNone,$/;"	e	enum:__anon30
kNPcmdSelectThree	data/nptypes.h	/^	kNPcmdSelectThree,$/;"	e	enum:__anon30
kNPcmdSelectToggle	data/nptypes.h	/^	kNPcmdSelectToggle,$/;"	e	enum:__anon30
kNPcmdSelectTwo	data/nptypes.h	/^	kNPcmdSelectTwo,$/;"	e	enum:__anon30
kNPcmdSetpointHi	data/nptypes.h	/^	kNPcmdSetpointHi,$/;"	e	enum:__anon30
kNPcmdSetpointLo	data/nptypes.h	/^	kNPcmdSetpointLo,											\/\/ add kNPcmd..,  debug zz$/;"	e	enum:__anon30
kNPcmdShader	data/nptypes.h	/^	kNPcmdShader,$/;"	e	enum:__anon30
kNPcmdShaderMode	data/nptypes.h	/^	kNPcmdShaderMode,$/;"	e	enum:__anon30
kNPcmdTagType	data/nptypes.h	/^	kNPcmdTagType,$/;"	e	enum:__anon30
kNPcmdTexture	data/nptypes.h	/^	kNPcmdTexture,$/;"	e	enum:__anon30
kNPcmdTopo	data/nptypes.h	/^	kNPcmdTopo,$/;"	e	enum:__anon30
kNPcmdXdecrease	data/nptypes.h	/^	kNPcmdXdecrease,$/;"	e	enum:__anon30
kNPcmdXdecreaseOff	data/nptypes.h	/^	kNPcmdXdecreaseOff,$/;"	e	enum:__anon30
kNPcmdXincrease	data/nptypes.h	/^	kNPcmdXincrease,$/;"	e	enum:__anon30
kNPcmdXincreaseOff	data/nptypes.h	/^	kNPcmdXincreaseOff,$/;"	e	enum:__anon30
kNPcmdYdecrease	data/nptypes.h	/^	kNPcmdYdecrease,$/;"	e	enum:__anon30
kNPcmdYdecreaseOff	data/nptypes.h	/^	kNPcmdYdecreaseOff,$/;"	e	enum:__anon30
kNPcmdYincrease	data/nptypes.h	/^	kNPcmdYincrease,$/;"	e	enum:__anon30
kNPcmdYincreaseOff	data/nptypes.h	/^	kNPcmdYincreaseOff,$/;"	e	enum:__anon30
kNPcmdZdecrease	data/nptypes.h	/^	kNPcmdZdecrease,$/;"	e	enum:__anon30
kNPcmdZdecreaseOff	data/nptypes.h	/^	kNPcmdZdecreaseOff,$/;"	e	enum:__anon30
kNPcmdZincrease	data/nptypes.h	/^	kNPcmdZincrease,$/;"	e	enum:__anon30
kNPcmdZincreaseOff	data/nptypes.h	/^	kNPcmdZincreaseOff,$/;"	e	enum:__anon30
kNPcmdZoomOff	data/nptypes.h	/^	kNPcmdZoomOff,$/;"	e	enum:__anon30
kNPcmdZoomOn	data/nptypes.h	/^	kNPcmdZoomOn,$/;"	e	enum:__anon30
kNPcolor	data/nptypes.h	/^	kNPcolor,$/;"	e	enum:__anon34
kNPcolorFade	data/nptypes.h	/^	kNPcolorFade,$/;"	e	enum:__anon34
kNPcolorIndex	data/nptypes.h	/^	kNPcolorIndex,$/;"	e	enum:__anon34
kNPcolorShift	data/nptypes.h	/^	kNPcolorShift,$/;"	e	enum:__anon34
kNPcolorSpace	data/nptypes.h	/^	kNPcolorSpace,$/;"	e	enum:__anon34
kNPconsoleCharPerLine	data/nptypes.h	77;"	d
kNPconsoleHistoryMax	data/nptypes.h	78;"	d
kNPconsoleLineMax	data/nptypes.h	76;"	d
kNPconsoleModeCount	data/nptypes.h	/^	kNPconsoleModeCount$/;"	e	enum:__anon46
kNPconsoleModeMax	data/nptypes.h	/^	kNPconsoleModeMax,			\/\/display maximum number of lines possible$/;"	e	enum:__anon46
kNPconsoleModeNull	data/nptypes.h	/^	kNPconsoleModeNull = 0,		\/\/hide console$/;"	e	enum:__anon46
kNPconsoleModeOne	data/nptypes.h	/^	kNPconsoleModeOne,			\/\/display 1 line$/;"	e	enum:__anon46
kNPconsoleModeThree	data/nptypes.h	/^	kNPconsoleModeThree,		\/\/display 3 lines$/;"	e	enum:__anon46
kNPcubeLength	data/nptypes.h	54;"	d
kNPdata	data/nptypes.h	/^	kNPdata,$/;"	e	enum:__anon34
kNPdataTypeMax	data/nptypes.h	69;"	d
kNPdefaultRatio	data/nptypes.h	57;"	d
kNPdescSizeMax	data/nptypes.h	83;"	d
kNPdragModeSize	data/nptypes.h	/^	kNPdragModeSize$/;"	e	enum:__anon38
kNPexposure	data/nptypes.h	/^	kNPexposure,$/;"	e	enum:__anon34
kNPfacet	data/nptypes.h	/^	kNPfacet,$/;"	e	enum:__anon34
kNPfacetCube	data/nptypes.h	52;"	d
kNPfileClose	data/nptypes.h	/^	kNPfileClose,$/;"	e	enum:__anon30
kNPfileDialogClose	data/nptypes.h	/^	kNPfileDialogClose$/;"	e	enum:__anon28
kNPfileDialogExport	data/nptypes.h	/^	kNPfileDialogExport,$/;"	e	enum:__anon28
kNPfileDialogImport	data/nptypes.h	/^	kNPfileDialogImport,$/;"	e	enum:__anon28
kNPfileDialogNULL	data/nptypes.h	/^	kNPfileDialogNULL = 0,$/;"	e	enum:__anon28
kNPfileDialogNew	data/nptypes.h	/^	kNPfileDialogNew,$/;"	e	enum:__anon28
kNPfileDialogOpen	data/nptypes.h	/^	kNPfileDialogOpen,$/;"	e	enum:__anon28
kNPfileDialogSave	data/nptypes.h	/^	kNPfileDialogSave,$/;"	e	enum:__anon28
kNPfileDialogSaveAs	data/nptypes.h	/^	kNPfileDialogSaveAs,$/;"	e	enum:__anon28
kNPfileExport	data/nptypes.h	/^	kNPfileExport,$/;"	e	enum:__anon30
kNPfileImport	data/nptypes.h	/^	kNPfileImport,$/;"	e	enum:__anon30
kNPfileMapOne	data/nptypes.h	/^	kNPfileMapOne,		\/\/used for quick loading and saving of state files$/;"	e	enum:__anon30
kNPfileMapThree	data/nptypes.h	/^	kNPfileMapThree,$/;"	e	enum:__anon30
kNPfileMapTwo	data/nptypes.h	/^	kNPfileMapTwo,$/;"	e	enum:__anon30
kNPfileMax	io/npfile.h	33;"	d
kNPfileNew	data/nptypes.h	/^	kNPfileNew,$/;"	e	enum:__anon30
kNPfileOpen	data/nptypes.h	/^	kNPfileOpen,$/;"	e	enum:__anon30
kNPfileSave	data/nptypes.h	/^	kNPfileSave,$/;"	e	enum:__anon30
kNPfileSaveAs	data/nptypes.h	/^	kNPfileSaveAs,$/;"	e	enum:__anon30
kNPfloat	data/nptypes.h	/^	kNPfloat,$/;"	e	enum:__anon34
kNPfloatRGB	data/nptypes.h	/^	kNPfloatRGB,$/;"	e	enum:__anon34
kNPfloatRGBA	data/nptypes.h	/^	kNPfloatRGBA,$/;"	e	enum:__anon34
kNPfloatXY	data/nptypes.h	/^	kNPfloatXY,$/;"	e	enum:__anon34
kNPfloatXYZ	data/nptypes.h	/^	kNPfloatXYZ,$/;"	e	enum:__anon34
kNPfloatXYZA	data/nptypes.h	/^	kNPfloatXYZA,$/;"	e	enum:__anon34
kNPfloatXYZS	data/nptypes.h	/^	kNPfloatXYZS,$/;"	e	enum:__anon34
kNPfontCount	data/nptypes.h	/^	kNPfontCount$/;"	e	enum:__anon47
kNPformat	data/nptypes.h	/^	kNPformat,$/;"	e	enum:__anon34
kNPformatID	data/nptypes.h	/^	kNPformatID,$/;"	e	enum:__anon34
kNPfov	data/nptypes.h	/^	kNPfov,$/;"	e	enum:__anon34
kNPfps	data/nptypes.h	/^	kNPfps,$/;"	e	enum:__anon34
kNPfreeze	data/nptypes.h	/^	kNPfreeze,$/;"	e	enum:__anon34
kNPgeometry	data/nptypes.h	/^	kNPgeometry,$/;"	e	enum:__anon34
kNPglNormalNull	data/nptypes.h	/^	kNPglNormalNull = 0,$/;"	e	enum:__anon36
kNPglNormalSize	data/nptypes.h	/^	kNPglNormalSize$/;"	e	enum:__anon36
kNPglNormalize	data/nptypes.h	/^	kNPglNormalize,$/;"	e	enum:__anon36
kNPglRescaleNormal	data/nptypes.h	/^	kNPglRescaleNormal,$/;"	e	enum:__anon36
kNPglShadeFlat	data/nptypes.h	/^	kNPglShadeFlat,$/;"	e	enum:__anon37
kNPglShadeNull	data/nptypes.h	/^	kNPglShadeNull = 0,$/;"	e	enum:__anon37
kNPglShadeSize	data/nptypes.h	/^	kNPglShadeSize$/;"	e	enum:__anon37
kNPglShadeSmooth	data/nptypes.h	/^	kNPglShadeSmooth,$/;"	e	enum:__anon37
kNPglutSolidCone	data/nptypes.h	/^	kNPglutSolidCone,$/;"	e	enum:__anon35
kNPglutSolidCube	data/nptypes.h	/^	kNPglutSolidCube,$/;"	e	enum:__anon35
kNPglutSolidDodecahedron	data/nptypes.h	/^	kNPglutSolidDodecahedron,$/;"	e	enum:__anon35
kNPglutSolidIcosahedron	data/nptypes.h	/^	kNPglutSolidIcosahedron,$/;"	e	enum:__anon35
kNPglutSolidOctahedron	data/nptypes.h	/^	kNPglutSolidOctahedron,$/;"	e	enum:__anon35
kNPglutSolidSphere	data/nptypes.h	/^	kNPglutSolidSphere,$/;"	e	enum:__anon35
kNPglutSolidTeapot	data/nptypes.h	/^	kNPglutSolidTeapot,$/;"	e	enum:__anon35
kNPglutSolidTetrahedron	data/nptypes.h	/^	kNPglutSolidTetrahedron,$/;"	e	enum:__anon35
kNPglutSolidTorus	data/nptypes.h	/^	kNPglutSolidTorus,$/;"	e	enum:__anon35
kNPglutWireCone	data/nptypes.h	/^	kNPglutWireCone,$/;"	e	enum:__anon35
kNPglutWireCube	data/nptypes.h	/^	kNPglutWireCube = 0,$/;"	e	enum:__anon35
kNPglutWireDodecahedron	data/nptypes.h	/^	kNPglutWireDodecahedron,$/;"	e	enum:__anon35
kNPglutWireIcosahedron	data/nptypes.h	/^	kNPglutWireIcosahedron,$/;"	e	enum:__anon35
kNPglutWireOctahedron	data/nptypes.h	/^	kNPglutWireOctahedron,$/;"	e	enum:__anon35
kNPglutWireSphere	data/nptypes.h	/^	kNPglutWireSphere,$/;"	e	enum:__anon35
kNPglutWireTeapot	data/nptypes.h	/^	kNPglutWireTeapot,$/;"	e	enum:__anon35
kNPglutWireTetrahedron	data/nptypes.h	/^	kNPglutWireTetrahedron,$/;"	e	enum:__anon35
kNPglutWireTorus	data/nptypes.h	/^	kNPglutWireTorus,$/;"	e	enum:__anon35
kNPgrid	data/nptypes.h	/^	kNPgrid,$/;"	e	enum:__anon34
kNPgridItemCount	data/nptypes.h	73;"	d
kNPgridSegmentsX	data/nptypes.h	61;"	d
kNPgridSegmentsY	data/nptypes.h	62;"	d
kNPgridSpacing	data/nptypes.h	60;"	d
kNPheight	data/nptypes.h	/^	kNPheight,$/;"	e	enum:__anon34
kNPhide	data/nptypes.h	/^	kNPhide,$/;"	e	enum:__anon34
kNPid	data/nptypes.h	/^	kNPid,$/;"	e	enum:__anon34
kNPinnerRadius	data/nptypes.h	/^	kNPinnerRadius,$/;"	e	enum:__anon34
kNPint	data/nptypes.h	/^	kNPint,$/;"	e	enum:__anon34
kNPintXYZ	data/nptypes.h	/^	kNPintXYZ,$/;"	e	enum:__anon34
kNPintXYZS	data/nptypes.h	/^	kNPintXYZS,$/;"	e	enum:__anon34
kNPinterlaced	data/nptypes.h	/^	kNPinterlaced,$/;"	e	enum:__anon34
kNPinterval	data/nptypes.h	/^	kNPinterval,$/;"	e	enum:__anon34
kNPinvertDeg	io/gl/npgldraw.c	277;"	d	file:
kNPjustifyCenter	data/nptypes.h	/^	kNPjustifyCenter,$/;"	e	enum:__anon48
kNPjustifyCount	data/nptypes.h	/^	kNPjustifyCount$/;"	e	enum:__anon48
kNPjustifyLeft	data/nptypes.h	/^	kNPjustifyLeft,$/;"	e	enum:__anon48
kNPjustifyNull	data/nptypes.h	/^	kNPjustifyNull = 0,$/;"	e	enum:__anon48
kNPjustifyRight	data/nptypes.h	/^	kNPjustifyRight,$/;"	e	enum:__anon48
kNPkeyEventTypeSize	data/nptypes.h	40;"	d
kNPkeyMapSize	data/nptypes.h	39;"	d
kNPlineWidth	data/nptypes.h	/^	kNPlineWidth,$/;"	e	enum:__anon34
kNPmapAll	data/nptypes.h	/^	kNPmapAll,$/;"	e	enum:__anon15
kNPmapArray	data/nptypes.h	/^	kNPmapArray,$/;"	e	enum:__anon15
kNPmapAudio	data/nptypes.h	/^	kNPmapAudio,$/;"	e	enum:__anon15
kNPmapBUS	data/nptypes.h	/^	kNPmapBUS,				\/\/ Node maps$/;"	e	enum:__anon15
kNPmapCPU	data/nptypes.h	/^	kNPmapCPU,$/;"	e	enum:__anon15
kNPmapCluster	data/nptypes.h	/^	kNPmapCluster,			\/\/ < 1 ms latency, < 40km$/;"	e	enum:__anon15
kNPmapCount	data/nptypes.h	/^	kNPmapCount$/;"	e	enum:__anon15
kNPmapDraw	data/nptypes.h	/^	kNPmapDraw,				\/\/a list of objects to draw in a GL context $/;"	e	enum:__anon15
kNPmapDrive	data/nptypes.h	/^	kNPmapDrive,$/;"	e	enum:__anon15
kNPmapFileBufferMax	data/nptypes.h	42;"	d
kNPmapGPU	data/nptypes.h	/^	kNPmapGPU,$/;"	e	enum:__anon15
kNPmapGalaxy	data/nptypes.h	/^	kNPmapGalaxy,$/;"	e	enum:__anon15
kNPmapGalaxyCluster	data/nptypes.h	/^	kNPmapGalaxyCluster,$/;"	e	enum:__anon15
kNPmapHID	data/nptypes.h	/^	kNPmapHID,$/;"	e	enum:__anon15
kNPmapHaptic	data/nptypes.h	/^	kNPmapHaptic,$/;"	e	enum:__anon15
kNPmapIO	data/nptypes.h	/^	kNPmapIO,					\/\/ typically a bus device if a node$/;"	e	enum:__anon15
kNPmapJoystick	data/nptypes.h	/^	kNPmapJoystick,$/;"	e	enum:__anon15
kNPmapKey	data/nptypes.h	/^	kNPmapKey,$/;"	e	enum:__anon15
kNPmapList	data/nptypes.h	/^	kNPmapList,$/;"	e	enum:__anon15
kNPmapLocation	data/nptypes.h	/^	kNPmapLocation,			\/\/ < 3 ms latency, < 400km$/;"	e	enum:__anon15
kNPmapMouse	data/nptypes.h	/^	kNPmapMouse,$/;"	e	enum:__anon15
kNPmapNPE	data/nptypes.h	/^	kNPmapNPE,$/;"	e	enum:__anon15
kNPmapNetwork	data/nptypes.h	/^	kNPmapNetwork,$/;"	e	enum:__anon15
kNPmapNode	data/nptypes.h	/^	kNPmapNode,				\/\/ < 1 us latency, < 4m, CPU node, not scene node$/;"	e	enum:__anon15
kNPmapNodeCSV	data/nptypes.h	/^	kNPmapNodeCSV,$/;"	e	enum:__anon29
kNPmapNodeCSVvOne	data/nptypes.h	/^	kNPmapNodeCSVvOne,$/;"	e	enum:__anon29
kNPmapNodeKML	data/nptypes.h	/^	kNPmapNodeKML,$/;"	e	enum:__anon29
kNPmapNodeNull	data/nptypes.h	/^	kNPmapNodeNull = 0,$/;"	e	enum:__anon29
kNPmapNodeSQL	data/nptypes.h	/^	kNPmapNodeSQL$/;"	e	enum:__anon29
kNPmapNull	data/nptypes.h	/^	kNPmapNull = 0,$/;"	e	enum:__anon15
kNPmapPlanet	data/nptypes.h	/^	kNPmapPlanet,				\/\/ Earth$/;"	e	enum:__anon15
kNPmapQuadsort	data/nptypes.h	/^	kNPmapQuadsort,			\/\/break scene into quadrants, cluster and NPE$/;"	e	enum:__anon15
kNPmapRAM	data/nptypes.h	/^	kNPmapRAM,$/;"	e	enum:__anon15
kNPmapRegion	data/nptypes.h	/^	kNPmapRegion,				\/\/ < 30 ms latency, < 4000km$/;"	e	enum:__anon15
kNPmapSolar	data/nptypes.h	/^	kNPmapSolar,$/;"	e	enum:__anon15
kNPmapTablet	data/nptypes.h	/^	kNPmapTablet,$/;"	e	enum:__anon15
kNPmapTouchScreen	data/nptypes.h	/^	kNPmapTouchScreen,$/;"	e	enum:__anon15
kNPmapTree	data/nptypes.h	/^	kNPmapTree,$/;"	e	enum:__anon15
kNPmapUniverse	data/nptypes.h	/^	kNPmapUniverse,$/;"	e	enum:__anon15
kNPmapUniverses	data/nptypes.h	/^	kNPmapUniverses,$/;"	e	enum:__anon15
kNPmapVideo	data/nptypes.h	/^	kNPmapVideo,$/;"	e	enum:__anon15
kNPmapZsort	data/nptypes.h	/^	kNPmapZsort,				\/\/GL draw order, for correct alpha rendering$/;"	e	enum:__anon15
kNPmaxFloatProperties	data/nptypes.h	97;"	d
kNPmaxLineLength	data/nptypes.h	99;"	d
kNPmaxPath	data/nptypes.h	66;"	d
kNPmaxTokens	data/nptypes.h	100;"	d
kNPmaxTrackToAttributeMappings	data/nptypes.h	88;"	d
kNPmaxTracks	data/nptypes.h	96;"	d
kNPmaxUcharProperties	data/nptypes.h	98;"	d
kNPmessageLengthMax	data/nptypes.h	80;"	d
kNPmessageQueMax	data/nptypes.h	79;"	d
kNPmouseModeCamExamXY	data/nptypes.h	/^	kNPmouseModeCamExamXY,$/;"	e	enum:__anon38
kNPmouseModeCamExamXZ	data/nptypes.h	/^	kNPmouseModeCamExamXZ,$/;"	e	enum:__anon38
kNPmouseModeCamFlyA	data/nptypes.h	/^	kNPmouseModeCamFlyA,$/;"	e	enum:__anon38
kNPmouseModeCamFlyB	data/nptypes.h	/^	kNPmouseModeCamFlyB,$/;"	e	enum:__anon38
kNPmouseModeCamLook	data/nptypes.h	/^	kNPmouseModeCamLook,$/;"	e	enum:__anon38
kNPmouseModeDragWorld	data/nptypes.h	/^	kNPmouseModeDragWorld,$/;"	e	enum:__anon38
kNPmouseModeDragXY	data/nptypes.h	/^	kNPmouseModeDragXY,$/;"	e	enum:__anon38
kNPmouseModeDragXZ	data/nptypes.h	/^	kNPmouseModeDragXZ,$/;"	e	enum:__anon38
kNPmouseModeNull	data/nptypes.h	/^	kNPmouseModeNull = 0,$/;"	e	enum:__anon38
kNPmsgCtrl	data/nptypes.h	/^	kNPmsgCtrl,$/;"	e	enum:__anon45
kNPmsgDebug	data/nptypes.h	/^	kNPmsgDebug,$/;"	e	enum:__anon45
kNPmsgErr	data/nptypes.h	/^	kNPmsgErr,$/;"	e	enum:__anon45
kNPmsgFile	data/nptypes.h	/^	kNPmsgFile,$/;"	e	enum:__anon45
kNPmsgGL	data/nptypes.h	/^	kNPmsgGL$/;"	e	enum:__anon45
kNPmsgNPE	data/nptypes.h	/^	kNPmsgNPE,$/;"	e	enum:__anon45
kNPmsgNull	data/nptypes.h	/^	kNPmsgNull = 0,$/;"	e	enum:__anon45
kNPmsgWarn	data/nptypes.h	/^	kNPmsgWarn,$/;"	e	enum:__anon45
kNPnode	data/nptypes.h	/^	kNPnode,$/;"	e	enum:__anon34
kNPnodeChildMax	data/nptypes.h	46;"	d
kNPnodeData	data/nptypes.h	/^	kNPnodeData,$/;"	e	enum:__anon34
kNPnodeItemCount	data/nptypes.h	71;"	d
kNPnodeMax	data/nptypes.h	44;"	d
kNPnodeRootCamera	data/nptypes.h	/^	kNPnodeRootCamera,			\/\/ root node index for all cameras$/;"	e	enum:__anon40
kNPnodeRootCount	data/nptypes.h	/^	kNPnodeRootCount,$/;"	e	enum:__anon34
kNPnodeRootGrid	data/nptypes.h	/^	kNPnodeRootGrid,			\/\/ root node index for all grids$/;"	e	enum:__anon40
kNPnodeRootMax	data/nptypes.h	45;"	d
kNPnodeRootNull	data/nptypes.h	/^	kNPnodeRootNull = 0,$/;"	e	enum:__anon40
kNPnodeRootPin	data/nptypes.h	/^	kNPnodeRootPin				\/\/ first root node for all pins$/;"	e	enum:__anon40
kNPopenAntz	data/nptypes.h	/^	kNPopenAntz,$/;"	e	enum:__anon34
kNPopenApp	data/nptypes.h	/^	kNPopenApp,$/;"	e	enum:__anon34
kNPopenURL	data/nptypes.h	/^	kNPopenURL,$/;"	e	enum:__anon34
kNPouterRadius	data/nptypes.h	/^	kNPouterRadius,$/;"	e	enum:__anon34
kNPoverlay	data/nptypes.h	/^	kNPoverlay,$/;"	e	enum:__anon34
kNPpaletteSize	data/nptypes.h	64;"	d
kNPparent	data/nptypes.h	/^	kNPparent,$/;"	e	enum:__anon34
kNPpickModeAll	data/nptypes.h	/^	kNPpickModeAll,				\/\/ pick anything$/;"	e	enum:__anon41
kNPpickModeCamera	data/nptypes.h	/^	kNPpickModeCamera,			\/\/ pick cameras$/;"	e	enum:__anon41
kNPpickModeCount	data/nptypes.h	/^	kNPpickModeCount$/;"	e	enum:__anon41
kNPpickModeGrid	data/nptypes.h	/^	kNPpickModeGrid,			\/\/ pick grids$/;"	e	enum:__anon41
kNPpickModeNull	data/nptypes.h	/^	kNPpickModeNull = 0,$/;"	e	enum:__anon41
kNPpickModePin	data/nptypes.h	/^	kNPpickModePin,				\/\/ pick pins$/;"	e	enum:__anon41
kNPpin	data/nptypes.h	/^	kNPpin,$/;"	e	enum:__anon34
kNPpinHeight	data/nptypes.h	58;"	d
kNPpinItemCount	data/nptypes.h	74;"	d
kNPpointSize	data/nptypes.h	/^	kNPpointSize,$/;"	e	enum:__anon34
kNPpositionBottom	data/nptypes.h	/^	kNPpositionBottom,$/;"	e	enum:__anon49
kNPpositionCenter	data/nptypes.h	/^	kNPpositionCenter,		\/\/may be used to specify vertical or horizontal$/;"	e	enum:__anon49
kNPpositionCount	data/nptypes.h	/^	kNPpositionCount$/;"	e	enum:__anon49
kNPpositionLeft	data/nptypes.h	/^	kNPpositionLeft,$/;"	e	enum:__anon49
kNPpositionNull	data/nptypes.h	/^	kNPpositionNull = 0,$/;"	e	enum:__anon49
kNPpositionRight	data/nptypes.h	/^	kNPpositionRight,$/;"	e	enum:__anon49
kNPpositionTop	data/nptypes.h	/^	kNPpositionTop,$/;"	e	enum:__anon49
kNPprimitiveCount	data/nptypes.h	/^	kNPprimitiveCount	\/\/add primitives, vertex, triangle, quad, circle, cylinder$/;"	e	enum:__anon35
kNPprimitiveSolidPin	data/nptypes.h	/^	kNPprimitiveSolidPin,		\/\/ solid and wire reversed, debug zz$/;"	e	enum:__anon35
kNPprimitiveWirePin	data/nptypes.h	/^	kNPprimitiveWirePin,$/;"	e	enum:__anon35
kNPproximity	data/nptypes.h	/^	kNPproximity,$/;"	e	enum:__anon34
kNPproximityMode	data/nptypes.h	/^	kNPproximityMode,$/;"	e	enum:__anon34
kNPradiusRatioIndex	data/nptypes.h	/^	kNPradiusRatioIndex,$/;"	e	enum:__anon34
kNPratio	data/nptypes.h	/^	kNPratio,$/;"	e	enum:__anon34
kNPrecordCount	data/nptypes.h	/^	kNPrecordCount,$/;"	e	enum:__anon34
kNPrecordID	data/nptypes.h	/^	kNPrecordID,$/;"	e	enum:__anon34
kNPrecordTagListMax	data/nptypes.h	85;"	d
kNProtate	data/nptypes.h	/^	kNProtate,$/;"	e	enum:__anon34
kNProtateRate	data/nptypes.h	/^	kNProtateRate,$/;"	e	enum:__anon34
kNProtateTex	data/nptypes.h	/^	kNProtateTex,$/;"	e	enum:__anon34
kNProtateVec	data/nptypes.h	/^	kNProtateVec,$/;"	e	enum:__anon34
kNPscale	data/nptypes.h	/^	kNPscale,$/;"	e	enum:__anon34
kNPscaleRate	data/nptypes.h	/^	kNPscaleRate,$/;"	e	enum:__anon34
kNPscaleTex	data/nptypes.h	/^	kNPscaleTex,$/;"	e	enum:__anon34
kNPscreenSizeIndex	data/nptypes.h	/^	kNPscreenSizeIndex,$/;"	e	enum:__anon34
kNPsegments	data/nptypes.h	/^	kNPsegments,$/;"	e	enum:__anon34
kNPselected	data/nptypes.h	/^	kNPselected,$/;"	e	enum:__anon34
kNPsensorType	data/nptypes.h	/^	kNPsensorType,$/;"	e	enum:__anon34
kNPsetHi	data/nptypes.h	/^	kNPsetHi,$/;"	e	enum:__anon34
kNPsetLo	data/nptypes.h	/^	kNPsetLo,$/;"	e	enum:__anon34
kNPshader	data/nptypes.h	/^	kNPshader,$/;"	e	enum:__anon34
kNPsize	data/nptypes.h	/^	kNPsize$/;"	e	enum:__anon34
kNPslices	data/nptypes.h	/^	kNPslices,$/;"	e	enum:__anon34
kNPsphereRadius	data/nptypes.h	55;"	d
kNPstacks	data/nptypes.h	/^	kNPstacks,$/;"	e	enum:__anon34
kNPstereo	data/nptypes.h	/^	kNPstereo,$/;"	e	enum:__anon34
kNPtableCamera	data/nptypes.h	/^	kNPtableCamera,$/;"	e	enum:__anon44
kNPtableChannelMap	data/nptypes.h	/^	kNPtableChannelMap,$/;"	e	enum:__anon44
kNPtableChannels	data/nptypes.h	/^	kNPtableChannels,$/;"	e	enum:__anon44
kNPtableCount	data/nptypes.h	/^	kNPtableCount,$/;"	e	enum:__anon34
kNPtableFormat	data/nptypes.h	/^	kNPtableFormat,$/;"	e	enum:__anon44
kNPtableGlobal	data/nptypes.h	/^	kNPtableGlobal,$/;"	e	enum:__anon44
kNPtableGrid	data/nptypes.h	/^	kNPtableGrid,$/;"	e	enum:__anon44
kNPtableID	data/nptypes.h	/^	kNPtableID,$/;"	e	enum:__anon34
kNPtableMap	data/nptypes.h	/^	kNPtableMap,$/;"	e	enum:__anon44
kNPtableNode	data/nptypes.h	/^	kNPtableNode,$/;"	e	enum:__anon44
kNPtableNull	data/nptypes.h	/^	kNPtableNull = 0,$/;"	e	enum:__anon44
kNPtableTag	data/nptypes.h	/^	kNPtableTag,$/;"	e	enum:__anon44
kNPtagListMax	data/nptypes.h	84;"	d
kNPtagMode	data/nptypes.h	/^	kNPtagMode,$/;"	e	enum:__anon34
kNPtagModeBoxHUD	data/nptypes.h	/^	kNPtagModeBoxHUD,			\/\/node colored text on grey box, no outline$/;"	e	enum:__anon50
kNPtagModeBoxOutlineHUD	data/nptypes.h	/^	kNPtagModeBoxOutlineHUD,	\/\/white text on grey box, node colored outline$/;"	e	enum:__anon50
kNPtagModeCount	data/nptypes.h	/^	kNPtagModeCount$/;"	e	enum:__anon50
kNPtagModeNull	data/nptypes.h	/^	kNPtagModeNull = 0,			\/\/fixed to object in 3D scene, not oriented$/;"	e	enum:__anon50
kNPtagOffset	data/nptypes.h	/^	kNPtagOffset,$/;"	e	enum:__anon34
kNPtextureID	data/nptypes.h	/^	kNPtextureID,$/;"	e	enum:__anon34
kNPtextureMax	data/nptypes.h	37;"	d
kNPtitleSizeMax	data/nptypes.h	82;"	d
kNPtoolColor	data/nptypes.h	/^	kNPtoolColor,			\/\/ change color and transparency$/;"	e	enum:__anon42
kNPtoolCount	data/nptypes.h	/^	kNPtoolCount$/;"	e	enum:__anon42
kNPtoolFreeze	data/nptypes.h	/^	kNPtoolFreeze,			\/\/ freeze node and child nodes$/;"	e	enum:__anon42
kNPtoolHide	data/nptypes.h	/^	kNPtoolHide,			\/\/ hide and unhide child nodes$/;"	e	enum:__anon42
kNPtoolInfo	data/nptypes.h	/^	kNPtoolInfo,			\/\/ pick anything$/;"	e	enum:__anon42
kNPtoolNull	data/nptypes.h	/^	kNPtoolNull = 0,		\/\/ default behavior based on pickMode$/;"	e	enum:__anon42
kNPtoolRotate	data/nptypes.h	/^	kNPtoolRotate,			\/\/ pick grids$/;"	e	enum:__anon42
kNPtoolScale	data/nptypes.h	/^	kNPtoolScale,			\/\/ pick pins$/;"	e	enum:__anon42
kNPtoolTranslate	data/nptypes.h	/^	kNPtoolTranslate,		\/\/ pick cameras$/;"	e	enum:__anon42
kNPtopo	data/nptypes.h	/^	kNPtopo,$/;"	e	enum:__anon34
kNPtopoCount	data/nptypes.h	/^	kNPtopoCount$/;"	e	enum:__anon43
kNPtopoCube	data/nptypes.h	/^	kNPtopoCube,$/;"	e	enum:__anon43
kNPtopoGrid	data/nptypes.h	/^	kNPtopoGrid,$/;"	e	enum:__anon43
kNPtopoNull	data/nptypes.h	/^	kNPtopoNull = 0,		\/\/topology determined by node type$/;"	e	enum:__anon43
kNPtopoPin	data/nptypes.h	/^	kNPtopoPin,$/;"	e	enum:__anon43
kNPtopoSphere	data/nptypes.h	/^	kNPtopoSphere,$/;"	e	enum:__anon43
kNPtopoSurface	data/nptypes.h	/^	kNPtopoSurface,			\/\/need to create type, fix in ctrlCmd debug zz$/;"	e	enum:__anon43
kNPtopoTorus	data/nptypes.h	/^	kNPtopoTorus,$/;"	e	enum:__anon43
kNPtorusRadius	data/nptypes.h	56;"	d
kNPtrackBufferSize	data/nptypes.h	94;"	d
kNPtrackOffset	data/nptypes.h	91;"	d
kNPtranslate	data/nptypes.h	/^	kNPtranslate,$/;"	e	enum:__anon34
kNPtranslateRate	data/nptypes.h	/^	kNPtranslateRate,$/;"	e	enum:__anon34
kNPtranslateTex	data/nptypes.h	/^	kNPtranslateTex,$/;"	e	enum:__anon34
kNPtranslateVec	data/nptypes.h	/^	kNPtranslateVec,$/;"	e	enum:__anon34
kNPtriggerHi	data/nptypes.h	/^	kNPtriggerHi,$/;"	e	enum:__anon34
kNPtriggerLo	data/nptypes.h	/^	kNPtriggerLo,$/;"	e	enum:__anon34
kNPtype	data/nptypes.h	/^	kNPtype,$/;"	e	enum:__anon34
kNPubyte	data/nptypes.h	/^	kNPubyte,$/;"	e	enum:__anon34
kNPubyteRGB	data/nptypes.h	/^	kNPubyteRGB,$/;"	e	enum:__anon34
kNPubyteRGBA	data/nptypes.h	/^	kNPubyteRGBA,$/;"	e	enum:__anon34
kNPuint	data/nptypes.h	/^	kNPuint,$/;"	e	enum:__anon34
kNPurlMax	data/nptypes.h	67;"	d
kNPversion	data/nptypes.h	/^	kNPversion,$/;"	e	enum:__anon34
kNPvoidPtr	data/nptypes.h	/^	kNPvoidPtr,$/;"	e	enum:__anon34
kNPwidth	data/nptypes.h	/^	kNPwidth,$/;"	e	enum:__anon34
kNeg2PI	data/nptypes.h	34;"	d
kNodeCamera	data/nptypes.h	/^	kNodeCamera,			\/\/for both real-world and virtual GL cameras$/;"	e	enum:__anon12
kNodeChannel	data/nptypes.h	/^	kNodeChannel,$/;"	e	enum:__anon14
kNodeColor	data/nptypes.h	/^	kNodeColor,$/;"	e	enum:__anon14
kNodeDefault	data/nptypes.h	/^	kNodeDefault = 0,$/;"	e	enum:__anon12
kNodeGrid	data/nptypes.h	/^	kNodeGrid,				\/\/grid in 1D, 2D or 3D$/;"	e	enum:__anon12
kNodePin	data/nptypes.h	/^	kNodePin,				\/\/combo of cones, spheres, toroids, etc...$/;"	e	enum:__anon12
kNodePoints	data/nptypes.h	/^	kNodePoints,			\/\/for X\/XY\/XYZ line, eeg\/ecg, temp, movement...$/;"	e	enum:__anon12
kNodeSurface	data/nptypes.h	/^	kNodeSurface,			\/\/ground, sky... background objects drawn first$/;"	e	enum:__anon12
kNodeVideo	data/nptypes.h	/^	kNodeVideo,				\/\/video from live\/stream, internal GL, or file$/;"	e	enum:__anon12
kPI	data/nptypes.h	32;"	d
kPos2PI	data/nptypes.h	33;"	d
kRADtoDEG	data/nptypes.h	35;"	d
kRightJustify	data/nptypes.h	/^	kRightJustify,$/;"	e	enum:__anon25
kSelectAdd	data/nptypes.h	/^	kSelectAdd,$/;"	e	enum:__anon13
kSelectAll	data/nptypes.h	/^	kSelectAll,$/;"	e	enum:__anon13
kSelectChildren	data/nptypes.h	/^	kSelectChildren,$/;"	e	enum:__anon13
kSelectColor	data/nptypes.h	/^	kSelectColor,$/;"	e	enum:__anon13
kSelectNULL	data/nptypes.h	/^	kSelectNULL = 0,$/;"	e	enum:__anon13
kSelectNone	data/nptypes.h	/^	kSelectNone,$/;"	e	enum:__anon13
kSelectParent	data/nptypes.h	/^	kSelectParent,$/;"	e	enum:__anon13
kSelectProperty	data/nptypes.h	/^	kSelectProperty$/;"	e	enum:__anon13
kSelectRemove	data/nptypes.h	/^	kSelectRemove,$/;"	e	enum:__anon13
kSelectSiblings	data/nptypes.h	/^	kSelectSiblings,$/;"	e	enum:__anon13
kShadingCount	data/nptypes.h	/^	kShadingCount$/;"	e	enum:__anon16
kShadingFlat	data/nptypes.h	/^	kShadingFlat,$/;"	e	enum:__anon16
kShadingGouraud	data/nptypes.h	/^	kShadingGouraud,$/;"	e	enum:__anon16
kShadingNull	data/nptypes.h	/^	kShadingNull = 0,$/;"	e	enum:__anon16
kShadingPhong	data/nptypes.h	/^	kShadingPhong,$/;"	e	enum:__anon16
kShadingRaytrace	data/nptypes.h	/^	kShadingRaytrace,$/;"	e	enum:__anon16
kShadingReflection	data/nptypes.h	/^	kShadingReflection,$/;"	e	enum:__anon16
kShadingWire	data/nptypes.h	/^	kShadingWire,$/;"	e	enum:__anon16
kSmallFont	data/nptypes.h	/^	kSmallFont = 0,$/;"	e	enum:__anon26
kTorusScreenSizeCount	io/gl/npgeometry.c	31;"	d	file:
kTorusThicknessCount	io/gl/npgeometry.c	32;"	d	file:
kVideoFPS_119_88HZ	data/nptypes.h	/^	kVideoFPS_119_88HZ,$/;"	e	enum:__anon19
kVideoFPS_120HZ	data/nptypes.h	/^	kVideoFPS_120HZ$/;"	e	enum:__anon19
kVideoFPS_23_976HZ	data/nptypes.h	/^	kVideoFPS_23_976HZ,		\/\/Film on Video$/;"	e	enum:__anon19
kVideoFPS_24HZ	data/nptypes.h	/^	kVideoFPS_24HZ,			\/\/Film$/;"	e	enum:__anon19
kVideoFPS_25HZ	data/nptypes.h	/^	kVideoFPS_25HZ,			\/\/PAL$/;"	e	enum:__anon19
kVideoFPS_29_97HZ	data/nptypes.h	/^	kVideoFPS_29_97HZ,		\/\/NTSC$/;"	e	enum:__anon19
kVideoFPS_30HZ	data/nptypes.h	/^	kVideoFPS_30HZ,			$/;"	e	enum:__anon19
kVideoFPS_59_94HZ	data/nptypes.h	/^	kVideoFPS_59_94HZ,		\/\/1080i, 60i, 60$/;"	e	enum:__anon19
kVideoFPS_60HZ	data/nptypes.h	/^	kVideoFPS_60HZ,$/;"	e	enum:__anon19
kVideoFPS_72HZ	data/nptypes.h	/^	kVideoFPS_72HZ,			\/\/experimental format$/;"	e	enum:__anon19
kVideoFPS_Null	data/nptypes.h	/^	kVideoFPS_Null = 0,$/;"	e	enum:__anon19
kVideoFieldEven	data/nptypes.h	/^	kVideoFieldEven$/;"	e	enum:__anon20
kVideoFieldNull	data/nptypes.h	/^	kVideoFieldNull = 0,$/;"	e	enum:__anon20
kVideoFieldOdd	data/nptypes.h	/^	kVideoFieldOdd,$/;"	e	enum:__anon20
kVideoFormat1080i	data/nptypes.h	/^	kVideoFormat1080i,$/;"	e	enum:__anon18
kVideoFormat1080p	data/nptypes.h	/^	kVideoFormat1080p,$/;"	e	enum:__anon18
kVideoFormat12k	data/nptypes.h	/^	kVideoFormat12k,$/;"	e	enum:__anon18
kVideoFormat16k	data/nptypes.h	/^	kVideoFormat16k,$/;"	e	enum:__anon18
kVideoFormat24k	data/nptypes.h	/^	kVideoFormat24k,$/;"	e	enum:__anon18
kVideoFormat2K	data/nptypes.h	/^	kVideoFormat2K,$/;"	e	enum:__anon18
kVideoFormat32k	data/nptypes.h	/^	kVideoFormat32k,$/;"	e	enum:__anon18
kVideoFormat48k	data/nptypes.h	/^	kVideoFormat48k,$/;"	e	enum:__anon18
kVideoFormat4k	data/nptypes.h	/^	kVideoFormat4k,$/;"	e	enum:__anon18
kVideoFormat64k	data/nptypes.h	/^	kVideoFormat64k$/;"	e	enum:__anon18
kVideoFormat720p	data/nptypes.h	/^	kVideoFormat720p,$/;"	e	enum:__anon18
kVideoFormat8k	data/nptypes.h	/^	kVideoFormat8k,$/;"	e	enum:__anon18
kVideoFormatNTSC	data/nptypes.h	/^	kVideoFormatNTSC,$/;"	e	enum:__anon18
kVideoFormatNull	data/nptypes.h	/^	kVideoFormatNull = 0,$/;"	e	enum:__anon18
kVideoFormatPAL	data/nptypes.h	/^	kVideoFormatPAL,$/;"	e	enum:__anon18
kVideoStereoLeft	data/nptypes.h	/^	kVideoStereoLeft,$/;"	e	enum:__anon21
kVideoStereoNull	data/nptypes.h	/^	kVideoStereoNull,$/;"	e	enum:__anon21
kVideoStereoRight	data/nptypes.h	/^	kVideoStereoRight,$/;"	e	enum:__anon21
kVideoStereoSequential	data/nptypes.h	/^	kVideoStereoSequential$/;"	e	enum:__anon21
kWindowHeight	io/npglut.c	40;"	d	file:
kWindowPositionX	io/npglut.c	41;"	d	file:
kWindowPositionY	io/npglut.c	42;"	d	file:
kWindowWidth	io/npglut.c	39;"	d	file:
key	data/nptypes.h	/^	NPkey		key;$/;"	m	struct:NPio
l2h_gamma	lib/soil/src/stb_image_aug.c	/^static float l2h_gamma=2.2f, l2h_scale=1.0f;$/;"	v	file:
l2h_scale	lib/soil/src/stb_image_aug.c	/^static float l2h_gamma=2.2f, l2h_scale=1.0f;$/;"	v	file:
ldr_to_hdr	lib/soil/src/stb_image_aug.c	/^static float   *ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	file:
length	lib/soil/src/stb_image_aug.c	/^   uint32 length;$/;"	m	struct:__anon70	file:
length_base	lib/soil/src/stb_image_aug.c	/^static int length_base[31] = {$/;"	v	file:
length_extra	lib/soil/src/stb_image_aug.c	/^static int length_extra[31]=$/;"	v	file:
line	data/nptypes.h	/^	char		line[kNPconsoleLineMax][kNPconsoleCharPerLine+1]; \/\/+1 for null char$/;"	m	struct:NPconsole
line0	lib/soil/src/stb_image_aug.c	/^   uint8 *line0,*line1;$/;"	m	struct:__anon67	file:
line1	lib/soil/src/stb_image_aug.c	/^   uint8 *line0,*line1;$/;"	m	struct:__anon67	file:
lineColor	data/nptypes.h	/^	NPubyteRGBA lineColor;		\/\/box outline$/;"	m	struct:NPtextTag
lineCount	data/nptypes.h	/^	int			lineCount;$/;"	m	struct:NPconsole
lineIndex	data/nptypes.h	/^	int			lineIndex;					\/\/the currently displayed line$/;"	m	struct:NPconsole
lineMax	data/nptypes.h	/^	int			lineMax;					\/\/default is 40 lines$/;"	m	struct:NPconsole
lineWidth	data/nptypes.h	/^	float		lineWidth;					\/\/draws lines, zero for off$/;"	m	struct:NPconsole
lineWidth	data/nptypes.h	/^	float		lineWidth;					\/\/draws lines, zero for off$/;"	m	struct:NPnode
lineWidth	data/nptypes.h	/^	float		lineWidth;		\/\/1 line title only, 3 lines, max lines$/;"	m	struct:NPtextTag
linebuf	lib/soil/src/stb_image_aug.c	/^      uint8 *linebuf;$/;"	m	struct:__anon65::__anon66	file:
list	data/nptypes.h	/^	void**		list;$/;"	m	struct:NPtags
loadTracksIntoCircularBuffer	io/npch.c	/^void loadTracksIntoCircularBuffer (void* dataRef)$/;"	f
load_from_file	lib/soil/src/stb_image_aug.h	/^   stbi_uc * (*load_from_file)(FILE *f, int *x, int *y, int *comp, int req_comp);$/;"	m	struct:__anon74
load_from_memory	lib/soil/src/stb_image_aug.h	/^   stbi_uc * (*load_from_memory)(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp);$/;"	m	struct:__anon74
load_jpeg_image	lib/soil/src/stb_image_aug.c	/^static uint8 *load_jpeg_image(jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	file:
loaders	lib/soil/src/stb_image_aug.c	/^stbi_loader *loaders[MAX_LOADERS];$/;"	v
loopAtEndOfTrack	io/npch.c	/^bool loopAtEndOfTrack = true;	\/\/zz,  move to data->io.ch$/;"	v
main	main.c	/^int main (int argc, char **argv)$/;"	f
map	data/nptypes.h	/^	NPmap	map;$/;"	m	struct:Data
map	data/nptypes.h	/^	int		map[kNPkeyEventTypeSize][kNPkeyMapSize];$/;"	m	struct:NPkey
mapPath	data/nptypes.h	/^	char		mapPath[4096];$/;"	m	struct:NPfile
marker	lib/soil/src/stb_image_aug.c	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon65	file:
max_loaders	lib/soil/src/stb_image_aug.c	/^static int max_loaders = 0;$/;"	v	file:
maxcode	lib/soil/src/stb_image_aug.c	/^   int maxcode[17];$/;"	m	struct:__anon68	file:
maxcode	lib/soil/src/stb_image_aug.c	/^   unsigned int maxcode[18];$/;"	m	struct:__anon64	file:
message	data/nptypes.h	/^	NPmessage	message;$/;"	m	struct:NPio
mipmap_image	lib/soil/src/image_helper.c	/^	mipmap_image$/;"	f
modAlt	data/nptypes.h	/^	int		modAlt;$/;"	m	struct:NPkey
modCommand	data/nptypes.h	/^	int		modCommand;$/;"	m	struct:NPkey
modCtrl	data/nptypes.h	/^	int		modCtrl;$/;"	m	struct:NPkey
modShift	data/nptypes.h	/^	int		modShift;$/;"	m	struct:NPkey
mode	data/nptypes.h	/^	int			mode;						\/\/1 line, 3 lines, max lines$/;"	m	struct:NPconsole
mode	data/nptypes.h	/^	int			mode;			\/\/2D, 3D billboard, fixed in model space$/;"	m	struct:NPtextTag
mode	data/nptypes.h	/^	int			mode;$/;"	m	struct:NPmouse
mouse	data/nptypes.h	/^	NPmouse		mouse;$/;"	m	struct:NPio
name	data/nptypes.h	/^	char		name[64];			\/\/author, city, population...$/;"	m	struct:NPlabel
name	data/nptypes.h	/^	char*	name;$/;"	m	struct:NPmapType
node	data/nptypes.h	/^	void**	node;					\/\/root node array, size of kNPnodeRootMax$/;"	m	struct:NPmap
nodeCount	data/nptypes.h	/^	int		nodeCount;				\/\/total for root and children nodes$/;"	m	struct:NPmap
nodeField	data/nptypes.h	/^	NPintXYZS	nodeField;			\/\/which node parameter to display$/;"	m	struct:NPlabel
nodeID	data/nptypes.h	/^	void**	nodeID;					\/\/maps node ID to NPnodePtr, kNPnodeMax$/;"	m	struct:NPmap
nodePropertyMemoryLocations	data/nptypes.h	/^	void*		nodePropertyMemoryLocations[kNPmaxFloatProperties];		\/\/ memory address of each node property fed from track data$/;"	m	struct:NPnodePropertyTracks
nodePropertyMemoryNextLocation	data/nptypes.h	/^	void**		nodePropertyMemoryNextLocation;							\/\/ next available location for a float property memory address$/;"	m	struct:NPnodePropertyTracks
nodeRootCount	data/nptypes.h	/^	int		nodeRootCount;			\/\/number of root nodes$/;"	m	struct:NPmap
nodeRootIndex	data/nptypes.h	/^	int		nodeRootIndex;			\/\/the active node root$/;"	m	struct:NPmap
nomore	lib/soil/src/stb_image_aug.c	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon65	file:
normal	data/nptypes.h	/^	int			normal;$/;"	m	struct:NPgl
normalArray	data/nptypes.h	/^	float		*normalArray;				\/\/the array of normals$/;"	m	struct:NPgis
normalArray	data/nptypes.h	/^	float		*normalArray;				\/\/the array of normals$/;"	m	struct:NPsurface
normalCount	data/nptypes.h	/^	int			normalCount;				\/\/$/;"	m	struct:NPgis
normalCount	data/nptypes.h	/^	int			normalCount;				\/\/$/;"	m	struct:NPsurface
note	data/nptypes.h	/^	char*	note;$/;"	m	struct:NPmapType
npAddRecordTag	data/npmapfile.c	/^void npAddRecordTag (pNPrecordTag recordTag, void* dataRef)$/;"	f
npAddTag	io/gl/nptags.c	/^void npAddTag (pNPtextTag tag, void* dataRef)$/;"	f
npAddTagToDraw	io/gl/npgldraw.c	/^void npAddTagToDraw (NPnodePtr node, void* dataRef)$/;"	f
npAppLoop	npctrl.c	/^int npAppLoop (void* dataRef)$/;"	f
npAppLoopGlut	io/npglut.c	/^void npAppLoopGlut (void* dataRef)$/;"	f
npCSVDialog	io/file/npcsv.c	/^FILE* npCSVDialog (const char* fileName, int dialogType, void* dataRef)$/;"	f
npCSVGetAttrib	io/file/npcsv.c	/^void npCSVGetAttrib (int size, void* dataRef)$/;"	f
npCSVSetAttrib	io/file/npcsv.c	/^void npCSVSetAttrib (int size, void* dataRef)$/;"	f
npCSVtoMap	io/file/npcsv.c	/^void npCSVtoMap (FILE* file, int type, void*dataRef)$/;"	f
npCameraTranslate	ctrl/npengine.c	/^void npCameraTranslate (void* nodeRef, void* dataRef )$/;"	f
npChCloseInputStream	io/npch.c	/^void npChCloseInputStream (int needToFigureOut, void* dataRef)$/;"	f
npChCloseOutStream	io/npch.c	/^void npChCloseOutStream (int needToFigureOut, void* dataRef)$/;"	f
npChDataExport	io/npch.c	/^void npChDataExport (char* buffer, int *size, void* dataRef)$/;"	f
npChDataImport	io/npch.c	/^void npChDataImport (char* buffer, int size, void* dataRef)	\/\/antzch0001.csv$/;"	f
npChFileTokens	io/npch.c	/^char** npChFileTokens (FILE* file, void* dataRef)$/;"	f
npChGetChannelAfter	io/npch.c	/^int npChGetChannelAfter(pNPch ch, int channelNumber) $/;"	f
npChGetChannelBefore	io/npch.c	/^int npChGetChannelBefore(pNPch ch, int channelNumber) $/;"	f
npChGetMaxChannel	io/npch.c	/^int npChGetMaxChannel (pNPch ch)$/;"	f
npChGetMinChannel	io/npch.c	/^int npChGetMinChannel (pNPch ch)$/;"	f
npChMapAttributeAdd	io/npch.c	/^void npChMapAttributeAdd (int channel, int attribute, int track, void* dataRef)$/;"	f
npChMapAttributeDelete	io/npch.c	/^void npChMapAttributeDelete (int channel, int attribute, void* dataRef)$/;"	f
npChMapExport	io/npch.c	/^void npChMapExport (char* buffer, int *size, void* dataRef)$/;"	f
npChMapImport	io/npch.c	/^void npChMapImport (char* buffer, int size, void* dataRef)$/;"	f
npChOpenInputStream	io/npch.c	/^void npChOpenInputStream (int needToFigureOut, void* dataRef)$/;"	f
npChOpenOutputStream	io/npch.c	/^void npChOpenOutputStream (int needToFigureOut, void* dataRef)$/;"	f
npChReadLine	io/npch.c	/^void* npChReadLine(char* bufferStart, int maxLength, FILE* file)$/;"	f
npChRemoveMemoryReferences	io/npch.c	/^void npChRemoveMemoryReferences (pNPnodePropertyTracks propertyTracks, void* boundaryStart, void* boundaryEnd)$/;"	f
npChRemoveNode	io/npch.c	/^void npChRemoveNode (NPnodePtr node, void* dataRef)$/;"	f
npChSetBuildPath	io/npfile.c	/^void npChSetBuildPath(char* path, char* csvPath, char* filePrefix, $/;"	f
npChSubscribeNode	io/npch.c	/^void npChSubscribeNode (NPnodePtr node, void* dataRef)$/;"	f
npChTrackFileTokens	io/npch.c	/^char** npChTrackFileTokens (FILE* file, void* dataRef)$/;"	f
npCloseAuxDB	io/db/npauxdb.c	/^void npCloseAuxDB (void* dataRef)		\/\/clean-up$/;"	f
npCloseCSV	io/file/npcsv.c	/^void npCloseCSV (void* dataRef)$/;"	f
npCloseCh	io/npch.c	/^void npCloseCh (void* dataRef)		\/\/clean-up$/;"	f
npCloseCmd	ctrl/npcmd.c	/^void npCloseCmd (void* dataRef)$/;"	f
npCloseCtrl	npctrl.c	/^void npCloseCtrl (void* dataRef)$/;"	f
npCloseDB	io/npdb.c	/^void npCloseDB (void* dataRef)		\/\/clean-up$/;"	f
npCloseData	npdata.c	/^void npCloseData()$/;"	f
npCloseEngine	ctrl/npengine.c	/^void npCloseEngine (void* dataRef)$/;"	f
npCloseFile	io/npfile.c	/^void npCloseFile (void* dataRef)$/;"	f
npCloseFileCSV	io/file/npcsv.c	/^void npCloseFileCSV (int size, void* dataRef)$/;"	f
npCloseFileMapFile	data/npmapfile.c	/^void npCloseFileMapFile (int size, void* dataRef)$/;"	f
npCloseGDAL	io/file/npgdal.c	/^void npCloseGDAL (void* dataRef)$/;"	f
npCloseGL	io/npgl.c	/^void npCloseGL (void* dataRef) $/;"	f
npCloseGLPrimitive	io/gl/npgeometry.c	/^void npCloseGLPrimitive (void* dataRef)$/;"	f
npCloseGlut	io/npglut.c	/^void npCloseGlut (void* dataRef)$/;"	f
npCloseIO	npio.c	/^void npCloseIO (void* dataRef)$/;"	f
npCloseJSON	io/file/npjson.c	/^void npCloseJSON (void* dataRef)$/;"	f
npCloseKML	io/file/npkml.c	/^void npCloseKML (void* dataRef)$/;"	f
npCloseKey	io/npkey.c	/^void npCloseKey (void* dataRef)$/;"	f
npCloseMapFile	data/npmapfile.c	/^void npCloseMapFile (void* dataRef)$/;"	f
npCloseMouse	io/npmouse.c	/^void npCloseMouse (void* dataRef)$/;"	f
npCloseMySQL	io/db/npmysql.c	/^void npCloseMySQL (void* dataRef)		\/\/clean-up$/;"	f
npCloseNode	data/npnode.c	/^void npCloseNode(void* dataRef)$/;"	f
npCloseOBJ	io/file/npobj.c	/^void npCloseOBJ (void* dataRef)$/;"	f
npCloseTags	io/gl/nptags.c	/^void npCloseTags (void* dataRef)		\/\/clean-up$/;"	f
npCloseTest	ctrl/nptest.c	/^void npCloseTest (void* dataRef)$/;"	f
npCloseTexMap	io/gl/nptexmap.c	/^void npCloseTexMap (void* dataRef)		\/\/clean-up$/;"	f
npCloseXML	io/file/npxml.c	/^void npCloseXML (void* dataRef)$/;"	f
npCopyGPUtoCPU	io/npgl.c	/^void npCopyGPUtoCPU (void* dataRef)$/;"	f
npCreatePrimitiveDL	io/gl/npgeometry.c	/^GLuint npCreatePrimitiveDL(void)$/;"	f
npCtrlChannel	npctrl.c	/^void npCtrlChannel (int command, NPnodePtr node, void* dataRef)$/;"	f
npCtrlCommand	npctrl.c	/^void npCtrlCommand (int command, void* dataRef)$/;"	f
npCtrlCommandSet	npctrl.c	/^void npCtrlCommandSet (int command, void* nodeRef, void* dataRef)$/;"	f
npCtrlFile	npctrl.c	/^void npCtrlFile (int command, void* dataRef)$/;"	f
npCtrlGlobal	npctrl.c	/^void npCtrlGlobal (int command, void* dataRef)$/;"	f
npCtrlProperty	npctrl.c	/^void npCtrlProperty (int command, void* dataRef)$/;"	f
npCtrlSelect	npctrl.c	/^void npCtrlSelect (int command, void* dataRef)$/;"	f
npCtrlVector	npctrl.c	/^void npCtrlVector (int command, void* dataRef)$/;"	f
npDataCameraPreset	npdata.c	/^void npDataCameraPreset (int preset, NPnodePtr node, void* dataRef)$/;"	f
npDataPreset	npdata.c	/^void npDataPreset (int preset, void* dataRef)$/;"	f
npDelDir	io/npfile.c	/^void npDelDir (int size, void* dataRef)$/;"	f
npDeleteAllTags	io/gl/nptags.c	/^void npDeleteAllTags (void* dataRef)$/;"	f
npDeleteChannel	io/npch.c	/^void npDeleteChannel (int channel, void* dataRef)$/;"	f
npDeleteTag	io/gl/nptags.c	/^void npDeleteTag (int recordID, int tableID, void* dataRef)$/;"	f
npDialogMapFile	data/npmapfile.c	/^FILE* npDialogMapFile (const char* fileName, int dialogType, void* dataRef)$/;"	f
npDispatchMessages	npctrl.c	/^void npDispatchMessages (void* dataRef)$/;"	f
npDistance	io/gl/npgldraw.c	/^float npDistance( NPfloatXYZ vecA, NPfloatXYZ vecB )$/;"	f
npDrawCompass	io/gl/npgldraw.c	/^void npDrawCompass (void* dataRef)$/;"	f
npDrawConsole	io/gl/npgldraw.c	/^void npDrawConsole (void* dataRef)$/;"	f
npDrawFPS	io/gl/npgldraw.c	/^void npDrawFPS (void* dataRef)$/;"	f
npDrawHUD	io/gl/npgldraw.c	/^void npDrawHUD (void* dataRef)$/;"	f
npDrawNodeTags	io/gl/nptags.c	/^void npDrawNodeTags (void* dataRef)$/;"	f
npDrawNodeTextTag	io/gl/nptags.c	/^void npDrawNodeTextTag (NPnodePtr node, void* dataRef)$/;"	f
npDrawNodes	io/gl/npgldraw.c	/^void npDrawNodes (void* dataRef)$/;"	f
npDrawSort	io/gl/npgldraw.c	/^void npDrawSort(void* dataRef)$/;"	f
npDrawTextTag	io/gl/nptags.c	/^void npDrawTextTag (pNPtextTag tag, void* dataRef)$/;"	f
npDrawTorus	io/gl/npgeometry.c	/^void npDrawTorus (int geometry, GLfloat innerRadius)$/;"	f
npExportCSV	io/file/npcsv.c	/^void npExportCSV (FILE* file, void* dataRef)$/;"	f
npExportMapFile	data/npmapfile.c	/^int npExportMapFile (FILE* file, int type, void* dataRef)$/;"	f
npExportTagsToCSV	io/gl/nptags.c	/^void npExportTagsToCSV (char* buffer, int* size, int* wordSize, void* dataRef)$/;"	f
npFileClose	io/npfile.c	/^int npFileClose (FILE* file, void* dataRef)$/;"	f
npFileDialog	io/npfile.c	/^FILE* npFileDialog (const char* fileName, int dialogType, void* dataRef)$/;"	f
npFileExport	io/npfile.c	/^void npFileExport (int size, void* dataRef)$/;"	f
npFileFormat	data/npmapfile.c	/^int npFileFormat(char* buffer, int wordSize, int size)$/;"	f
npFileImport	io/npfile.c	/^void npFileImport (const char* fileName, void* dataRef)$/;"	f
npFileNew	io/npfile.c	/^FILE* npFileNew (const char* fileName, const char* mode, void* dataRef)$/;"	f
npFileOpen	io/npfile.c	/^FILE* npFileOpen (const char* fileName, const char* mode, void* dataRef)$/;"	f
npFileOpenChMap	io/npfile.c	/^void npFileOpenChMap (const char* filePath, void* dataRef)$/;"	f
npFileOpenChMeta	io/npfile.c	/^void npFileOpenChMeta (const char* filePath, void* dataRef)$/;"	f
npFileOpenChSet	io/npfile.c	/^void npFileOpenChSet (const char* filePath, void* dataRef)$/;"	f
npFileOpenChTracks	io/npfile.c	/^void npFileOpenChTracks (const char* filePath, void* dataRef)$/;"	f
npFileOpenMap	data/npmapfile.c	/^int npFileOpenMap (char* filePath, int wordSize, int size, void* dataRef)$/;"	f
npFileOpenMapAttrib	data/npmapfile.c	/^void npFileOpenMapAttrib (int attrib, void* dataRef)$/;"	f
npFileOpenTag	data/npmapfile.c	/^int npFileOpenTag (char* filePath, int wordSize, int size, void* dataRef)$/;"	f
npFileRead	io/npfile.c	/^int npFileRead (void* readBuffer, int elementSize, int elementCount, $/;"	f
npFileRewind	io/npfile.c	/^void npFileRewind (FILE* file)$/;"	f
npFileSaveMap	data/npmapfile.c	/^int npFileSaveMap (char* filePath, int wordSize, int size, void* dataRef)$/;"	f
npFileSaveTag	data/npmapfile.c	/^int npFileSaveTag (char* filePath, int wordSize, int size, void* dataRef)$/;"	f
npFileSeek	io/npfile.c	/^int npFileSeek (FILE* file, long offSet, int origin)$/;"	f
npFileTell	io/npfile.c	/^long npFileTell (FILE* file)$/;"	f
npFileWrite	io/npfile.c	/^int npFileWrite (const void* str, int wordSize, int size, FILE* file, void* dataRef)$/;"	f
npGLDrawScene	io/npgl.c	/^void npGLDrawScene (void* dataRef) $/;"	f
npGLLighting	io/npgl.c	/^void npGLLighting (void* dataRef)$/;"	f
npGLPrimitive	io/gl/npgeometry.c	/^void npGLPrimitive (int geometry, float ratio)$/;"	f
npGLResizeScene	io/npgl.c	/^void npGLResizeScene (int width, int height)							$/;"	f
npGLShading	io/npgl.c	/^void npGLShading (dataRef)$/;"	f
npGLSolidCone	io/npglut.c	/^void npGLSolidCone (GLdouble base, GLdouble height, GLint slices, GLint stacks)$/;"	f
npGLSolidSphere	io/npglut.c	/^void npGLSolidSphere (GLdouble radius, GLint slices, GLint stacks)$/;"	f
npGLSolidTorus	io/npglut.c	/^void npGLSolidTorus (GLdouble innerRadius, GLdouble outerRadius, $/;"	f
npGLSurface	io/gl/npgeometry.c	/^void npGLSurface (bool texture, NPnodePtr node, void* dataRef)$/;"	f
npGLTexture	io/gl/npgeometry.c	/^void npGLTexture (int geometry, int textureID, void* dataRef)$/;"	f
npGLWireCone	io/npglut.c	/^void npGLWireCone (GLdouble base, GLdouble height, GLint slices, GLint stacks)$/;"	f
npGLWireSphere	io/npglut.c	/^void npGLWireSphere (GLdouble radius, GLint slices, GLint stacks)$/;"	f
npGLWireTorus	io/npglut.c	/^void npGLWireTorus (GLdouble innerRadius, GLdouble outerRadius, $/;"	f
npGetActiveCam	data/npnode.c	/^NPnodePtr npGetActiveCam (void* dataRef)$/;"	f
npGetCWD	io/npfile.c	/^void npGetCWD (char* buffer, int* size)					$/;"	f
npGetDataRef	npdata.c	/^void* npGetDataRef()$/;"	f
npGetDataTypeDesc	npdata.c	/^char* npGetDataTypeDesc (int type)$/;"	f
npGetDataTypeName	npdata.c	/^char* npGetDataTypeName (int type)$/;"	f
npGetFileAttrib	io/npfile.c	/^void npGetFileAttrib (int size, void* dataRef)$/;"	f
npGetFileRef	io/npfile.c	/^FILE* npGetFileRef (int index)$/;"	f
npGetMap	io/npfile.c	/^void npGetMap (int mapType, int format, void* dataRef)$/;"	f
npGetMapFile	data/npmapfile.c	/^int npGetMapFile (char* buffer, int wordSize, int size, void* dataRef)$/;"	f
npGetMapFileAttrib	data/npmapfile.c	/^int npGetMapFileAttrib (int attrib, void* dataRef)$/;"	f
npGetOpenFilePath	io/npfile.c	/^void npGetOpenFilePath (char* buffer, int* size, void* dataRef)$/;"	f
npGetRootIndex	data/npmap.c	/^int npGetRootIndex (NPnodePtr node, void* dataRef)$/;"	f
npGetTag	io/gl/nptags.c	/^pNPtextTag npGetTag (int recordID, int tableID, void* dataRef)$/;"	f
npGlutDrawGLScene	io/npglut.c	/^void npGlutDrawGLScene(void) $/;"	f
npGlutDrawGLSceneIdle	io/npglut.c	/^void npGlutDrawGLSceneIdle(void)$/;"	f
npGlutKeyDown	io/npglut.c	/^void npGlutKeyDown (unsigned char key, int x, int y) $/;"	f
npGlutKeyDownSpecial	io/npglut.c	/^void npGlutKeyDownSpecial (int key, int x, int y) $/;"	f
npGlutKeyUp	io/npglut.c	/^void npGlutKeyUp (unsigned char key, int x, int y) $/;"	f
npGlutKeyUpSpecial	io/npglut.c	/^void npGlutKeyUpSpecial (int key, int x, int y) $/;"	f
npGlutPrimitive	io/npglut.c	/^void npGlutPrimitive (int primitive)$/;"	f
npHideSubNodes	io/npgl.c	/^void npHideSubNodes (bool hide, NPnodePtr node, void* dataRef)$/;"	f
npIDtoRGB	io/gl/npgldraw.c	/^void npIDtoRGB( int id, int* r, int* g, int* b )$/;"	f
npImportCSV	io/file/npcsv.c	/^void npImportCSV (FILE* file, int type, void* dataRef)$/;"	f
npImportMapFile	data/npmapfile.c	/^int npImportMapFile (FILE* file, int type, void* dataRef)$/;"	f
npImportTagsFromCSV	io/gl/nptags.c	/^void npImportTagsFromCSV (char* buffer, int size, int wordSize, void* dataRef)$/;"	f
npInitAuxDB	io/db/npauxdb.c	/^void npInitAuxDB (void* dataRef)$/;"	f
npInitCSV	io/file/npcsv.c	/^void npInitCSV (void* dataRef)$/;"	f
npInitCh	io/npch.c	/^void npInitCh (void* dataRef)$/;"	f
npInitCmd	ctrl/npcmd.c	/^void npInitCmd (void* dataRef)$/;"	f
npInitCtrl	npctrl.c	/^void npInitCtrl (void* dataRef)$/;"	f
npInitDB	io/npdb.c	/^void npInitDB (void* dataRef)$/;"	f
npInitData	npdata.c	/^void* npInitData (int argc, char** argv)$/;"	f
npInitDataChannel	npdata.c	/^void npInitDataChannel (void* dataRef)$/;"	f
npInitDataCtrl	npdata.c	/^void npInitDataCtrl(void* dataRef)$/;"	f
npInitDataFile	npdata.c	/^void npInitDataFile (pNPfile file, void* dataRef)$/;"	f
npInitDataGL	npdata.c	/^void npInitDataGL(void* dataRef)$/;"	f
npInitDataIO	npdata.c	/^void npInitDataIO(int argc, char** argv, void* dataRef)$/;"	f
npInitDataMap	npdata.c	/^void npInitDataMap(void* dataRef)$/;"	f
npInitDataRecordTag	npdata.c	/^void npInitDataRecordTag (pNPrecordTag recordTag, void* dataRef)$/;"	f
npInitDataTags	npdata.c	/^void npInitDataTags (pNPtags tags, void* dataRef)$/;"	f
npInitEngine	ctrl/npengine.c	/^void npInitEngine (void* dataRef)$/;"	f
npInitFile	io/npfile.c	/^void npInitFile (void* dataRef)$/;"	f
npInitGDAL	io/file/npgdal.c	/^void npInitGDAL (void* dataRef)$/;"	f
npInitGL	io/npgl.c	/^void npInitGL(void* dataRef) $/;"	f
npInitGLDraw	io/gl/npgldraw.c	/^void npInitGLDraw(void* dataRef)$/;"	f
npInitGLPrimitive	io/gl/npgeometry.c	/^void npInitGLPrimitive (void* dataRef)$/;"	f
npInitGlut	io/npglut.c	/^void npInitGlut (int argc, char **argv, void* dataRef)$/;"	f
npInitHUD	npdata.c	/^void npInitHUD(void* dataRef)$/;"	f
npInitIO	npio.c	/^void npInitIO (void* dataRef)$/;"	f
npInitJSON	io/file/npjson.c	/^void npInitJSON (void* dataRef)$/;"	f
npInitKML	io/file/npkml.c	/^void npInitKML (void* dataRef)$/;"	f
npInitKey	io/npkey.c	/^void npInitKey (void* dataRef)$/;"	f
npInitMap	data/npmap.c	/^void npInitMap (void* dataRef)$/;"	f
npInitMapFile	data/npmapfile.c	/^void npInitMapFile (void* dataRef)$/;"	f
npInitMessage	npdata.c	/^void npInitMessage (void* dataRef)$/;"	f
npInitMouse	io/npmouse.c	/^void npInitMouse (void* dataRef)$/;"	f
npInitMySQL	io/db/npmysql.c	/^void npInitMySQL (void* dataRef)$/;"	f
npInitNode	data/npnode.c	/^void npInitNode (void* dataRef)$/;"	f
npInitNodeCamera	data/npnode.c	/^void npInitNodeCamera (NPnodePtr node)$/;"	f
npInitNodeConsole	npdata.c	/^void npInitNodeConsole (void* consoleRef, void* dataRef)$/;"	f
npInitNodeDefault	data/npnode.c	/^void npInitNodeDefault (NPnodePtr node)$/;"	f
npInitOBJ	io/file/npobj.c	/^void npInitOBJ (void* dataRef)$/;"	f
npInitPropertyTracks	npdata.c	/^void npInitPropertyTracks (pNPnodePropertyTracks propertyTracks)$/;"	f
npInitTags	io/gl/nptags.c	/^void npInitTags (void* dataRef)$/;"	f
npInitTest	ctrl/nptest.c	/^void npInitTest (void* dataRef)$/;"	f
npInitTexMap	io/gl/nptexmap.c	/^void npInitTexMap (void* dataRef)$/;"	f
npInitTextTag	npdata.c	/^void npInitTextTag (pNPtextTag tag, void* dataRef)$/;"	f
npInitXML	io/file/npxml.c	/^void npInitXML (void* dataRef)$/;"	f
npKeyEvent	io/npkey.c	/^void npKeyEvent (int key, int keyEventType)$/;"	f
npKeyGlut	io/npkey.c	/^void npKeyGlut (int key, int x, int y, int keyTypeGlut, int modifiers)$/;"	f
npLinuxFileDialog	os/linux/nplinux.c	/^FILE* npLinuxFileDialog (const char* fileName, int dialogType, void* dataRef)$/;"	f
npLinuxGetAppPath	os/linux/nplinux.c	/^void npLinuxGetAppPath (char* buffer, int* size)$/;"	f
npLinuxGetCWD	os/linux/nplinux.c	/^void npLinuxGetCWD (char* buffer, int* size)$/;"	f
npLinuxGetOpenFilePath	os/linux/nplinux.c	/^void npLinuxGetOpenFilePath (char* buffer, int* size, void* dataRef)$/;"	f
npLinuxGetTime	os/linux/nplinux.c	/^double npLinuxGetTime (void)									\/\/untested, debug zz$/;"	f
npLinuxSetCWD	os/linux/nplinux.c	/^void npLinuxSetCWD (char* buffer)$/;"	f
npLinuxSetCursorPos	os/linux/nplinux.c	/^int npLinuxSetCursorPos (int x, int y)$/;"	f
npLinuxSetOpenFilePath	os/linux/nplinux.c	/^void npLinuxSetOpenFilePath (char* buffer, void* dataRef)$/;"	f
npLinuxShowCursor	os/linux/nplinux.c	/^int npLinuxShowCursor (int hide)$/;"	f
npLinuxSleep	os/linux/nplinux.c	/^void npLinuxSleep (double seconds)$/;"	f
npLinuxTimeStampCSV	os/linux/nplinux.c	/^void npLinuxTimeStampCSV (char* fileName)$/;"	f
npLinuxUpdateTime	os/linux/nplinux.c	/^void npLinuxUpdateTime (void* dataRef)										\/\/debug zz$/;"	f
npListDir	io/npfile.c	/^void npListDir (int size, void* dataRef)$/;"	f
npLoadChMap	io/npch.c	/^void npLoadChMap (const char* filePath, void* dataRef)$/;"	f
npLoadChMeta	io/npch.c	/^void npLoadChMeta (const char* filePath, void* dataRef)$/;"	f
npLoadChTracks	io/npch.c	/^void npLoadChTracks (const char* filePath, void* dataRef)$/;"	f
npLoadMapFile	data/npmapfile.c	/^void npLoadMapFile (char* buffer, int wordSize, int size, void* dataRef)$/;"	f
npLoadTagFile	data/npmapfile.c	/^void npLoadTagFile (char* buffer, int wordSize, int size, void* dataRef)$/;"	f
npLoadTextures	io/npgl.c	/^void npLoadTextures(void* dataRef) $/;"	f
npLowPassFilter	io/npmouse.c	/^float npLowPassFilter( float start, float target, float fac )$/;"	f
npMSWBeginThread	os/msw/npmsw.c	/^void npMSWBeginThread (voidFnPtr vfp, void *dataRef)$/;"	f
npMSWEndThread	os/msw/npmsw.c	/^void npMSWEndThread (void)$/;"	f
npMSWFileDialog	os/msw/npmsw.c	/^FILE* npMSWFileDialog (const char* fileName, int dialogType, void* dataRef)$/;"	f
npMSWGetAppPath	os/msw/npmsw.c	/^void npMSWGetAppPath (char* buffer, int* size)$/;"	f
npMSWGetCWD	os/msw/npmsw.c	/^void npMSWGetCWD (char* buffer, int* size)$/;"	f
npMSWGetOpenFilePath	os/msw/npmsw.c	/^void npMSWGetOpenFilePath (char* buffer, int* size, void* dataRef)$/;"	f
npMSWGetTime	os/msw/npmsw.c	/^double npMSWGetTime (void)$/;"	f
npMSWSetCWD	os/msw/npmsw.c	/^void npMSWSetCWD (char* buffer)$/;"	f
npMSWSetCursorPos	os/msw/npmsw.c	/^int npMSWSetCursorPos (int x, int y)$/;"	f
npMSWSetOpenFilePath	os/msw/npmsw.c	/^void npMSWSetOpenFilePath (char* buffer, void* dataRef)$/;"	f
npMSWShowCursor	os/msw/npmsw.c	/^int npMSWShowCursor (int hide)$/;"	f
npMSWSleep	os/msw/npmsw.c	/^void npMSWSleep (double seconds)$/;"	f
npMSWTimeStampCSV	os/msw/npmsw.c	/^void npMSWTimeStampCSV (char* fileName)$/;"	f
npMSWUpdateTime	os/msw/npmsw.c	/^void npMSWUpdateTime (void* dataRef)$/;"	f
npMakeDir	io/npfile.c	/^void npMakeDir (int size, void* dataRef)$/;"	f
npMapCSVvOne	data/npmapfile.c	/^void npMapCSVvOne(NPnodePtr node)$/;"	f
npMapNodeAdd	data/npmapfile.c	/^void* npMapNodeAdd (int id, int type, int branchLevel, int parentID, $/;"	f
npMapNodeDown	data/npmap.c	/^NPnodePtr npMapNodeDown (void* dataRef){return NULL;}			\/\/select $/;"	f
npMapNodeNext	data/npmap.c	/^NPnodePtr npMapNodeNext (void* dataRef){return NULL;}			\/\/select next sibling node$/;"	f
npMapNodePrevious	data/npmap.c	/^NPnodePtr npMapNodePrevious (void* dataRef){return NULL;}		\/\/previous sibling$/;"	f
npMapNodeUp	data/npmap.c	/^NPnodePtr npMapNodeUp (void* dataRef){return NULL;}				\/\/select parent$/;"	f
npMapSort	data/npmapfile.c	/^void npMapSort(void* dataRef)$/;"	f
npMapSortAdd	data/npmapfile.c	/^void npMapSortAdd (int id, int parentID, void* nodeRef, void* dataRef)$/;"	f
npMapSortID	data/npmapfile.c	/^NPnodePtr npMapSortID (int id, void* dataRef)$/;"	f
npMapSortInit	data/npmapfile.c	/^void npMapSortInit (void** mapRef, void* dataRef)$/;"	f
npMapTraverseTree	data/npmapfile.c	/^int npMapTraverseTree (char* buffer, NPnodePtr node, int format, void* dataRef)$/;"	f
npMouseEvent	io/npmouse.c	/^void npMouseEvent (int button, int state, int x, int y)$/;"	f
npMouseMotion	io/npmouse.c	/^void npMouseMotion (int x, int y)$/;"	f
npNewChannel	io/npch.c	/^void npNewChannel (int channel, void* dataRef)$/;"	f
npNewMapFile	data/npmapfile.c	/^FILE* npNewMapFile (const char* fileName, const char* mode, void* dataRef)$/;"	f
npNewNodeID	data/npnode.c	/^int npNewNodeID()				\/\/improve this to re-use nodeID upon delete, debug zz$/;"	f
npNewStrcpy	io/npfile.c	/^char* npNewStrcpy (const char* str, void* dataRef) $/;"	f
npNodeDelete	data/npnode.c	/^void npNodeDelete (NPnodePtr node, void* dataRef)$/;"	f
npNodeMoveBranch	data/npmapfile.c	/^void npNodeMoveBranch (NPnodePtr node, NPnodePtr newParent, void* dataRef)$/;"	f
npNodeNew	data/npnode.c	/^void*  npNodeNew (int nodeType, NPnodePtr nodeParent, void* dataRef)$/;"	f
npNodeRemove	data/npnode.c	/^void npNodeRemove (int freeNode, NPnodePtr node, void* dataRef)$/;"	f
npNodeTraverseTree	io/gl/nptags.c	/^void npNodeTraverseTree ( void (*nodeFunc)(NPnodePtr node, void* dataRef), $/;"	f
npNodeUpdateBranchLevel	data/npmapfile.c	/^void npNodeUpdateBranchLevel (NPnodePtr node)$/;"	f
npOSXFileDialog	os/osx/nposx.c	/^FILE* npOSXFileDialog (const char* fileName, int dialogType, void* dataRef)$/;"	f
npOSXGetCWD	os/osx/nposx.c	/^void npOSXGetCWD (char* buffer, int* size)$/;"	f
npOSXSetCursorPos	os/osx/nposx.c	/^void npOSXSetCursorPos (int x, int y)$/;"	f
npOSXShowCursor	os/osx/nposx.c	/^void npOSXShowCursor (int hide)$/;"	f
npOSXSleep	os/osx/nposx.c	/^void npOSXSleep (double seconds)$/;"	f
npOSXTimeStampCSV	os/osx/nposx.c	/^void npOSXTimeStampCSV (char* fileName)$/;"	f
npOSXUpdateTime	os/osx/nposx.c	/^void npOSXUpdateTime (void* dataRef)$/;"	f
npOpenAntz	io/npfile.c	/^void npOpenAntz (const char* command, void* dataRef)$/;"	f
npOpenApp	io/npfile.c	/^void npOpenApp (const char* command, void* dataRef)$/;"	f
npOpenCSV	io/file/npcsv.c	/^FILE* npOpenCSV (const char* fileName, const char* mode, void* dataRef)$/;"	f
npOpenMapFile	data/npmapfile.c	/^FILE* npOpenMapFile (const char* fileName, const char* mode, void* dataRef)$/;"	f
npOpenURL	io/npfile.c	/^void npOpenURL (const char* command, void* dataRef)$/;"	f
npPick	io/npgl.c	/^void npPick (int x, int y, void* dataRef)$/;"	f
npPickTool	io/npgl.c	/^void npPickTool (NPnodePtr node, void* dataRef)$/;"	f
npPostMsg	npdata.c	/^void npPostMsg (char* message, int type, void* dataRef)$/;"	f
npProjectWorldToScreen	io/gl/npgldraw.c	/^NPfloatXYZ npProjectWorldToScreen (const pNPfloatXYZ offset)$/;"	f
npRGBtoID	io/gl/npgldraw.c	/^int npRGBtoID( int r, int g, int b )$/;"	f
npReadCSV	io/file/npcsv.c	/^int npReadCSV (void* readBuffer, int elementSize, int elementCount, $/;"	f
npReadMapFile	data/npmapfile.c	/^int npReadMapFile (void* readBuffer, int elementSize, int elementCount, $/;"	f
npReadMapNodeCSV	data/npmapfile.c	/^void* npReadMapNodeCSV (char* buffer, int wordSize, int size, $/;"	f
npReadTagFromCSV	data/npmapfile.c	/^pNPrecordTag npReadTagFromCSV (char* buffer, int wordSize, int size, $/;"	f
npResizeConsole	io/npgl.c	/^void npResizeConsole (void* dataRef)$/;"	f
npSave	io/npfile.c	/^void npSave (FILE* file, void* dataRef)$/;"	f
npSaveAs	io/npfile.c	/^void npSaveAs (int size, void* dataRef)$/;"	f
npSaveCSV	io/file/npcsv.c	/^void npSaveCSV (FILE* file, void* dataRef)$/;"	f
npSaveChMap	io/npch.c	/^void npSaveChMap (const char* filePath, void* dataRef)$/;"	f
npSaveMapFile	data/npmapfile.c	/^void npSaveMapFile (FILE* file, void* dataRef)$/;"	f
npSeekToNextField	data/npmapfile.c	/^int npSeekToNextField( char* buffer )	\/\/Todo: Check Max$/;"	f
npSeekToNextLine	data/npmapfile.c	/^int npSeekToNextLine( char* buffer )	\/\/Todo: Check Max$/;"	f
npSelectNode	data/npmap.c	/^void npSelectNode (NPnodePtr node, void* dataRef)$/;"	f
npSelectNodeID	data/npmap.c	/^void npSelectNodeID (int id, void* dataRef)$/;"	f
npSetCamTarget	io/npmouse.c	/^void npSetCamTarget (void* dataRef)$/;"	f
npSetFileAttrib	io/npfile.c	/^void npSetFileAttrib (int size, void* dataRef)$/;"	f
npSetNodeTag	io/gl/nptags.c	/^void npSetNodeTag (NPnodePtr node, void* dataRef)$/;"	f
npSetTagOffset	data/npnode.c	/^void npSetTagOffset (NPnodePtr node)$/;"	f
npSyncChMap	io/npch.c	/^void npSyncChMap (void* dataRef)$/;"	f
npSyncTags	io/gl/nptags.c	/^void npSyncTags (void* dataRef)$/;"	f
npTagNode	io/gl/nptags.c	/^void npTagNode (NPnodePtr node, void* dataRef)$/;"	f
npTestCSV	io/file/npcsv.c	/^void npTestCSV (void* fileName, int wordSize, int size, void* dataRef)$/;"	f
npTraverseMap	data/npmap.c	/^void npTraverseMap (void (*nodeFunc)(NPnodePtr node, void* dataRef),$/;"	f
npTraverseTree	data/npmap.c	/^void npTraverseTree (void (*nodeFunc)(NPnodePtr node, void* dataRef), $/;"	f
npUpdateAuxDB	io/db/npauxdb.c	/^void npUpdateAuxDB (void* dataRef)							\/\/add to ctrl loop, debug zz$/;"	f
npUpdateCameraMouse	ctrl/npengine.c	/^void npUpdateCameraMouse (void* nodeRef, void* dataRef )$/;"	f
npUpdateCh	io/npch.c	/^void npUpdateCh (void* dataRef)$/;"	f
npUpdateCmd	ctrl/npcmd.c	/^void npUpdateCmd (void* dataRef)$/;"	f
npUpdateCtrl	npctrl.c	/^void npUpdateCtrl (void* dataRef)$/;"	f
npUpdateDB	io/npdb.c	/^void npUpdateDB (void* dataRef)							\/\/add to ctrl loop, debug zz$/;"	f
npUpdateData	npdata.c	/^void npUpdateData (void* dataRef)$/;"	f
npUpdateEngine	ctrl/npengine.c	/^void npUpdateEngine (void* dataRef)$/;"	f
npUpdateIO	npio.c	/^void npUpdateIO (void* dataRef)$/;"	f
npUpdateMouse	io/npmouse.c	/^void npUpdateMouse (void* dataRef)$/;"	f
npUpdateMySQL	io/db/npmysql.c	/^void npUpdateMySQL (void* dataRef)							\/\/add to ctrl loop, debug zz$/;"	f
npUpdateNodes	io/npch.c	/^void npUpdateNodes(void *dataRef)$/;"	f
npUpdateTags	io/gl/nptags.c	/^void npUpdateTags (void* dataRef)							\/\/add to ctrl loop, debug zz$/;"	f
npUpdateTest	ctrl/nptest.c	/^void npUpdateTest (void* dataRef)$/;"	f
npUpdateTexMap	io/gl/nptexmap.c	/^void npUpdateTexMap (void* dataRef)							\/\/add to ctrl loop, debug zz$/;"	f
npUpdateTextTag	io/gl/nptags.c	/^void npUpdateTextTag (pNPtextTag tag, void* dataRef)$/;"	f
npWriteCSV	io/file/npcsv.c	/^int npWriteCSV (const void* str, int wordSize, int size, FILE* file, void* dataRef)$/;"	f
npWriteMapFile	data/npmapfile.c	/^int npWriteMapFile (const void* str, int wordSize, int size, FILE* file, void* dataRef)$/;"	f
npWriteMapHeader	data/npmapfile.c	/^int npWriteMapHeader (char* bufferIndex, int count, int type, void* dataRef)$/;"	f
npWriteNode	data/npmapfile.c	/^int npWriteNode (char* buffer, void* nodeRef, int format, void* dataRef)$/;"	f
npchPause	io/npch.c	/^void npchPause (void* dataRef)	\/\/zz-JJ$/;"	f
npcmd_H_	ctrl/npcmd.h	26;"	d
npctrl_H_	npctrl.h	26;"	d
npdata_H_	npdata.h	26;"	d
npengine_H_	ctrl/npengine.h	26;"	d
npglFullscreen	io/npglut.c	/^void npglFullscreen (void* dataRef)$/;"	f
npio_H_	npio.h	26;"	d
npkey_H_	io/npkey.h	26;"	d
npmouse_H_	io/npmouse.h	26;"	d
npnode_H_	data/npnode.h	26;"	d
nposBeginThread	os/npos.c	/^void nposBeginThread(voidFnPtr vfp, void *dataRef)$/;"	f
nposEndThread	os/npos.c	/^void nposEndThread()$/;"	f
nposFileDialog	os/npos.c	/^FILE* nposFileDialog (const char* fileName, int dialogType, void* dataRef)$/;"	f
nposGetAppPath	os/npos.c	/^void nposGetAppPath (char* buffer, int* size)$/;"	f
nposGetCWD	os/npos.c	/^void nposGetCWD (char* buffer, int* size)$/;"	f
nposGetOpenFilePath	os/npos.c	/^void nposGetOpenFilePath (char* buffer, int* size, void* dataRef)$/;"	f
nposGetTime	os/npos.c	/^double nposGetTime (void)$/;"	f
nposSetCWD	os/npos.c	/^void nposSetCWD (char* buffer)$/;"	f
nposSetCursorPos	os/npos.c	/^int nposSetCursorPos (int x, int y)$/;"	f
nposSetOpenFilePath	os/npos.c	/^void nposSetOpenFilePath (char* buffer, void* dataRef)$/;"	f
nposShowCursor	os/npos.c	/^int nposShowCursor (int hide)$/;"	f
nposSleep	os/npos.c	/^void nposSleep (double seconds)$/;"	f
nposSupportsAntzThreads	os/npos.c	/^bool nposSupportsAntzThreads()$/;"	f
nposTimeStampCSV	os/npos.c	/^void nposTimeStampCSV (char* fileName)$/;"	f
nposUpdateTime	os/npos.c	/^void nposUpdateTime (void* dataRef)$/;"	f
nptest_H_	ctrl/nptest.h	26;"	d
num_bits	lib/soil/src/stb_image_aug.c	/^   int num_bits;$/;"	m	struct:__anon69	file:
numberTracks	data/nptypes.h	/^	int			numberTracks;			\/\/ number of tracks in this channel$/;"	m	struct:NPch
offset	data/nptypes.h	/^	NPfloatXYZS	offset;				\/\/constant to offset value by$/;"	m	struct:NPlabel
order	lib/soil/src/stb_image_aug.c	/^   int scan_n, order[4];$/;"	m	struct:__anon65	file:
orphanCount	data/nptypes.h	/^	int		orphanCount;$/;"	m	struct:NPmap
orphanList	data/nptypes.h	/^	int*	orphanList;				\/\/list of orphans by node ID$/;"	m	struct:NPmap
out	lib/soil/src/stb_image_aug.c	/^   uint8 *idata, *expanded, *out;$/;"	m	struct:__anon71	file:
outerRadius	data/nptypes.h	/^	float		outerRadius;				\/\/outer radius of the toroid$/;"	m	struct:NPpin
outfile	lib/soil/src/stb_image_aug.c	/^static int outfile(char const *filename, int rgb_dir, int vdir, int x, int y, int comp, void *data, int alpha, int pad, char *fmt, ...)$/;"	f	file:
overlay	data/nptypes.h	/^	bool		overlay;					\/\/overlays relative to screen coord$/;"	m	struct:NPgrid
pData	data/nptypes.h	/^typedef struct Data * pData;$/;"	t	typeref:struct:Data
pNPch	data/nptypes.h	/^typedef struct NPch * pNPch;$/;"	t	typeref:struct:NPch
pNPconsole	data/nptypes.h	/^typedef struct NPconsole * pNPconsole;$/;"	t	typeref:struct:NPconsole
pNPctrl	data/nptypes.h	/^typedef struct NPctrl * pNPctrl;$/;"	t	typeref:struct:NPctrl
pNPfile	data/nptypes.h	/^typedef struct NPfile * pNPfile;$/;"	t	typeref:struct:NPfile
pNPfloatXYZ	data/nptypes.h	/^typedef struct NPfloatXYZ * pNPfloatXYZ;$/;"	t	typeref:struct:NPfloatXYZ
pNPgl	data/nptypes.h	/^typedef struct NPgl * pNPgl;$/;"	t	typeref:struct:NPgl
pNPhud	data/nptypes.h	/^typedef struct NPhud * pNPhud;$/;"	t	typeref:struct:NPhud
pNPio	data/nptypes.h	/^typedef struct NPio * pNPio;$/;"	t	typeref:struct:NPio
pNPkey	data/nptypes.h	/^typedef struct NPkey * pNPkey;$/;"	t	typeref:struct:NPkey
pNPmap	data/nptypes.h	/^typedef struct NPmap * pNPmap;$/;"	t	typeref:struct:NPmap
pNPmessage	data/nptypes.h	/^typedef struct NPmessage * pNPmessage;$/;"	t	typeref:struct:NPmessage
pNPmouse	data/nptypes.h	/^typedef struct NPmouse * pNPmouse;$/;"	t	typeref:struct:NPmouse
pNPnodeData	data/nptypes.h	/^typedef struct NPnodeData * pNPnodeData;$/;"	t	typeref:struct:NPnodeData
pNPnodePropertyTracks	data/nptypes.h	/^typedef struct NPnodePropertyTracks * pNPnodePropertyTracks;$/;"	t	typeref:struct:NPnodePropertyTracks
pNPrecordTag	data/nptypes.h	/^typedef struct NPrecordTag *pNPrecordTag;$/;"	t	typeref:struct:NPrecordTag
pNPtags	data/nptypes.h	/^typedef struct NPtags * pNPtags;$/;"	t	typeref:struct:NPtags
pNPtextTag	data/nptypes.h	/^typedef struct NPtextTag *pNPtextTag;$/;"	t	typeref:struct:NPtextTag
pNPxref	data/nptypes.h	/^typedef struct NPxref * pNPxref;$/;"	t	typeref:struct:NPxref
paeth	lib/soil/src/stb_image_aug.c	/^static int paeth(int a, int b, int c)$/;"	f	file:
parent	data/nptypes.h	/^	void*		parent;						\/\/parent node, binary tree of nodes$/;"	m	struct:NPnode
parentID	data/nptypes.h	/^	int*	parentID;				\/\/maps node ID to parentID$/;"	m	struct:NPmap
parse_entropy_coded_data	lib/soil/src/stb_image_aug.c	/^static int parse_entropy_coded_data(jpeg *z)$/;"	f	file:
parse_huffman_block	lib/soil/src/stb_image_aug.c	/^static int parse_huffman_block(zbuf *a)$/;"	f	file:
parse_png_file	lib/soil/src/stb_image_aug.c	/^static int parse_png_file(png *z, int scan, int req_comp)$/;"	f	file:
parse_uncompressed_block	lib/soil/src/stb_image_aug.c	/^static int parse_uncompressed_block(zbuf *a)$/;"	f	file:
parse_zlib	lib/soil/src/stb_image_aug.c	/^static int parse_zlib(zbuf *a, int parse_header)$/;"	f	file:
parse_zlib_header	lib/soil/src/stb_image_aug.c	/^static int parse_zlib_header(zbuf *a)$/;"	f	file:
pause	data/nptypes.h	/^	bool		pause;$/;"	m	struct:NPch
pickID	data/nptypes.h	/^	int			pickID;$/;"	m	struct:NPgl
pickMode	data/nptypes.h	/^	int			pickMode;				\/\/locks the mouse into cam mode$/;"	m	struct:NPmouse
pickPass	data/nptypes.h	/^	int			pickPass;$/;"	m	struct:NPgl
pinSelected	data/nptypes.h	/^	bool		pinSelected;$/;"	m	struct:NPmouse
pin_dl	io/gl/npgeometry.c	/^static GLint pin_dl;$/;"	v	file:
pin_wire_dl	io/gl/npgeometry.c	/^static GLint pin_wire_dl;$/;"	v	file:
pixelDepth	data/nptypes.h	/^	int			pixelDepth;$/;"	m	struct:NPgl
png	lib/soil/src/stb_image_aug.c	/^} png;$/;"	t	typeref:struct:__anon71	file:
pointSize	data/nptypes.h	/^	float		pointSize;					\/\/draws dots, zero for off$/;"	m	struct:NPnode
position	data/nptypes.h	/^	NPintXY		position;$/;"	m	struct:NPconsole
previous	data/nptypes.h	/^	NPintXYZ	previous;$/;"	m	struct:NPmouse
primitiveDL	io/gl/npgeometry.c	/^GLint primitiveDL;$/;"	v
process_frame_header	lib/soil/src/stb_image_aug.c	/^static int process_frame_header(jpeg *z, int scan)$/;"	f	file:
process_marker	lib/soil/src/stb_image_aug.c	/^static int process_marker(jpeg *z, int m)$/;"	f	file:
process_scan_header	lib/soil/src/stb_image_aug.c	/^static int process_scan_header(jpeg *z)$/;"	f	file:
propertyTrackIndex	data/nptypes.h	/^	int			propertyTrackIndex;										\/\/ next available propertyTrack array offset$/;"	m	struct:NPnodePropertyTracks
propertyTracks	data/nptypes.h	/^	int			propertyTracks[kNPmaxFloatProperties];					\/\/ offset of the tracks that feed each peroperty$/;"	m	struct:NPnodePropertyTracks
proximity	data/nptypes.h	/^	NPfloatXYZ	proximity;					\/\/used for collision engine $/;"	m	struct:NPnode
proximityMode	data/nptypes.h	/^	NPintXYZ	proximityMode;				\/\/used for collision engine $/;"	m	struct:NPnode
psd_load	lib/soil/src/stb_image_aug.c	/^static stbi_uc *psd_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
psd_test	lib/soil/src/stb_image_aug.c	/^static int psd_test(stbi *s)$/;"	f	file:
quadArray	io/gl/npgeometry.c	/^	GLint*			quadArray;$/;"	m	struct:NPtorus	file:
quadArraySize	io/gl/npgeometry.c	/^	GLint			quadArraySize;$/;"	m	struct:NPtorus	file:
que	data/nptypes.h	/^	char		que[kNPmessageQueMax][kNPmessageLengthMax + 1]; \/\/+1 for null$/;"	m	struct:NPmessage
queIndex	data/nptypes.h	/^	int			queIndex;					\/\/the most recent message$/;"	m	struct:NPmessage
query_DXT_capability	lib/soil/src/SOIL.c	/^int query_DXT_capability( void )$/;"	f
query_NPOT_capability	lib/soil/src/SOIL.c	/^int query_NPOT_capability( void )$/;"	f
query_cubemap_capability	lib/soil/src/SOIL.c	/^int query_cubemap_capability( void )$/;"	f
query_tex_rectangle_capability	lib/soil/src/SOIL.c	/^int query_tex_rectangle_capability( void )$/;"	f
r	data/nptypes.h	/^	float r,g,b,a;$/;"	m	struct:__anon5
r	data/nptypes.h	/^	float r,g,b;$/;"	m	struct:__anon4
r	data/nptypes.h	/^	unsigned char r,g,b,a;$/;"	m	struct:__anon9
radius	io/gl/npgeometry.c	/^	GLfloat			radius;$/;"	m	struct:NPcircle	file:
radiusRatioIndex	data/nptypes.h	/^	int			radiusRatioIndex;			\/\/sorts pre-loaded GPU toriods$/;"	m	struct:NPpin
ratio	data/nptypes.h	/^	float		ratio;						\/\/geometry ratio, torus innerRadius$/;"	m	struct:NPnode
raw_data	lib/soil/src/stb_image_aug.c	/^      void *raw_data;$/;"	m	struct:__anon65::__anon66	file:
recordCount	data/nptypes.h	/^	int			recordCount;$/;"	m	struct:NPtags
recordID	data/nptypes.h	/^	int			recordID;					\/\/DB recordID$/;"	m	struct:NPnode
recordID	data/nptypes.h	/^	int			recordID;			\/\/recordID of the node$/;"	m	struct:NPrecordTag
recordID	data/nptypes.h	/^	int			recordID;			\/\/recordID of the node$/;"	m	struct:NPtextTag
recordList	data/nptypes.h	/^	void**		recordList;$/;"	m	struct:NPtags
refreshRate	data/nptypes.h	/^	float		refreshRate;$/;"	m	struct:NPgl
resample	lib/soil/src/stb_image_aug.c	/^   resample_row_func resample;$/;"	m	struct:__anon67	file:
resample_row_1	lib/soil/src/stb_image_aug.c	/^static uint8 *resample_row_1(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_func	lib/soil/src/stb_image_aug.c	/^typedef uint8 *(*resample_row_func)(uint8 *out, uint8 *in0, uint8 *in1,$/;"	t	file:
resample_row_generic	lib/soil/src/stb_image_aug.c	/^static uint8 *resample_row_generic(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_h_2	lib/soil/src/stb_image_aug.c	/^static uint8*  resample_row_h_2(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_hv_2	lib/soil/src/stb_image_aug.c	/^static uint8 *resample_row_hv_2(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_v_2	lib/soil/src/stb_image_aug.c	/^static uint8* resample_row_v_2(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
reset	lib/soil/src/stb_image_aug.c	/^static void reset(jpeg *j)$/;"	f	file:
restart_interval	lib/soil/src/stb_image_aug.c	/^   int restart_interval, todo;$/;"	m	struct:__anon65	file:
result_string_pointer	lib/soil/src/SOIL.c	/^char *result_string_pointer = "SOIL initialized";$/;"	v
rgb_888_from_565	lib/soil/src/image_DXT.c	/^void rgb_888_from_565( unsigned int c, int *r, int *g, int *b )$/;"	f
rgb_to_565	lib/soil/src/image_DXT.c	/^int rgb_to_565( int r, int g, int b )$/;"	f
rotate	data/nptypes.h	/^	NPfloatXYZ	rotate;						\/\/rotation angle in polar radians$/;"	m	struct:NPnode
rotateRate	data/nptypes.h	/^	NPfloatXYZ	rotateRate;					\/\/rotation rate$/;"	m	struct:NPnode
rotateTex	data/nptypes.h	/^	NPfloatXYZA	rotateTex;					\/\/orientation of the texture map$/;"	m	struct:NPpin
rotateVec	data/nptypes.h	/^	NPfloatXYZA	rotateVec;					\/\/orientation$/;"	m	struct:NPnode
s	data/nptypes.h	/^	bool x,y,z,s;$/;"	m	struct:__anon11
s	data/nptypes.h	/^	int x,y,z,s;$/;"	m	struct:__anon8
s	lib/soil/src/stb_image_aug.c	/^   stbi s;$/;"	m	struct:__anon65	file:
s	lib/soil/src/stb_image_aug.c	/^   stbi s;$/;"	m	struct:__anon71	file:
sCaps	lib/soil/src/image_DXT.h	/^    sCaps;$/;"	m	struct:__anon51	typeref:struct:__anon51::__anon53
sCaps	lib/soil/src/stbi_DDS_aug_c.h	/^    }               sCaps;$/;"	m	struct:__anon59	typeref:struct:__anon59::__anon61
sPixelFormat	lib/soil/src/image_DXT.h	/^    sPixelFormat;$/;"	m	struct:__anon51	typeref:struct:__anon51::__anon52
sPixelFormat	lib/soil/src/stbi_DDS_aug_c.h	/^    }               sPixelFormat;$/;"	m	struct:__anon59	typeref:struct:__anon59::__anon60
saturation	data/nptypes.h	/^	float		saturation;$/;"	m	struct:NPvideo
save_image_as_DDS	lib/soil/src/image_DXT.c	/^	save_image_as_DDS$/;"	f
scale	data/nptypes.h	/^	NPfloatXYZ	scale;						\/\/scale node XYZ$/;"	m	struct:NPnode
scaleRate	data/nptypes.h	/^	NPfloatXYZ	scaleRate;					\/\/scale rate $/;"	m	struct:NPnode
scaleTex	data/nptypes.h	/^	NPfloatXYZ	scaleTex;$/;"	m	struct:NPpin
scale_image_RGB_to_NTSC_safe	lib/soil/src/image_helper.c	/^	scale_image_RGB_to_NTSC_safe$/;"	f
scaler	data/nptypes.h	/^	float x,y,z,scaler;$/;"	m	struct:__anon3
scan_n	lib/soil/src/stb_image_aug.c	/^   int scan_n, order[4];$/;"	m	struct:__anon65	file:
screen	data/nptypes.h	/^	NPfloatXYZ	screen;						\/\/MB-LABEL$/;"	m	struct:NPnode
screen	data/nptypes.h	/^	NPfloatXYZ	screen;$/;"	m	struct:NPconsole
screenSizeIndex	data/nptypes.h	/^	int			screenSizeIndex;			\/\/same as above for detail level$/;"	m	struct:NPpin
segments	data/nptypes.h	/^	NPintXYZ	segments;					\/\/for topos and grid segments$/;"	m	struct:NPnode
segments	io/gl/npgeometry.c	/^	int				segments;$/;"	m	struct:NPcircle	file:
segments	io/gl/npgeometry.c	/^	int				segments;$/;"	m	struct:NPtorus	file:
selectAll	data/nptypes.h	/^	int			selectAll;			\/\/true when all nodes selected$/;"	m	struct:NPmap
selectSet	data/nptypes.h	/^	NPboolXYZ	selectSet;			\/\/current selection set to add too$/;"	m	struct:NPmap
selected	data/nptypes.h	/^	int			selected;					\/\/true if node currently selected$/;"	m	struct:NPconsole
selected	data/nptypes.h	/^	int			selected;					\/\/true if node currently selected$/;"	m	struct:NPnode
selectedGrid	data/nptypes.h	/^	NPnodePtr	selectedGrid;		\/\/selected grid$/;"	m	struct:NPmap
selectedID	io/npgl.h	/^int selectedID;$/;"	v
selectedPinIndex	data/nptypes.h	/^	int			selectedPinIndex;	\/\/helpful to know which tree we are on$/;"	m	struct:NPmap
selectedPinNode	data/nptypes.h	/^	NPnodePtr	selectedPinNode;	\/\/current node selection, can be a child branch$/;"	m	struct:NPmap
sensorType	data/nptypes.h	/^	int			sensorType;					\/\/3CCD, Debayer pattern...$/;"	m	struct:NPcamera
setHi	data/nptypes.h	/^	NPfloatXYZ	setHi;					\/\/triggers$/;"	m	struct:NPnode
setLo	data/nptypes.h	/^	NPfloatXYZ	setLo;$/;"	m	struct:NPnode
setNumberToLoad	data/nptypes.h	/^	int			setNumberToLoad;$/;"	m	struct:NPch
shade	data/nptypes.h	/^	int			shade;$/;"	m	struct:NPgl
shader	data/nptypes.h	/^	int			shader;						\/\/the texture ID or procedural shader type$/;"	m	struct:NPnode
shiftsigned	lib/soil/src/stb_image_aug.c	/^static int shiftsigned(int v, int shift, int bits)$/;"	f	file:
signal_callback_handler	os/linux/nplinux.c	/^void signal_callback_handler(int signum)$/;"	f
size	data/nptypes.h	/^	int			size;					\/\/ memory used, add\/del should modify this, debug zz$/;"	m	struct:NPmouse
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPcamera
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPch
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPconsole
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPfile
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPgis
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPgl
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPgrid
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPhud
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPio
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPmessage
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPnode
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPnodeData
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPpin
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPpoints
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPrecordTag
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPsurface
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPtags
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPtextTag
size	data/nptypes.h	/^	int			size;$/;"	m	struct:NPvideo
size	data/nptypes.h	/^	int		size;					\/\/ memory used, add\/del should modify this, debug zz$/;"	m	struct:NPmap
size	data/nptypes.h	/^	int		size;$/;"	m	struct:Data
size	data/nptypes.h	/^	int		size;$/;"	m	struct:NPctrl
size	data/nptypes.h	/^	int		size;$/;"	m	struct:NPkey
size	lib/soil/src/stb_image_aug.c	/^   uint8  size[257];$/;"	m	struct:__anon64	file:
size	lib/soil/src/stb_image_aug.c	/^   uint8  size[288];$/;"	m	struct:__anon68	file:
skip	lib/soil/src/stb_image_aug.c	/^static void skip(stbi *s, int n)$/;"	f	file:
slices	data/nptypes.h	/^	int			slices;						\/\/calculated from radiusRatioIndex$/;"	m	struct:NPpin
slices	io/gl/npgeometry.c	/^	int				slices;$/;"	m	struct:NPtorus	file:
slow	data/nptypes.h	/^	float	slow;						\/\/ slow velocity, shift not pressed$/;"	m	struct:NPctrl
soilGlCompressedTexImage2D	lib/soil/src/SOIL.c	/^P_SOIL_GLCOMPRESSEDTEXIMAGE2DPROC soilGlCompressedTexImage2D = NULL;$/;"	v
sort	data/nptypes.h	/^	void**	sort;					\/\/used for z-sort during GL draw$/;"	m	struct:NPmap
sortCount	data/nptypes.h	/^	int		sortCount;$/;"	m	struct:NPmap
sortID	data/nptypes.h	/^	void**	sortID;					\/\/maps node ID for sorting nodes$/;"	m	struct:NPmap
spacing	data/nptypes.h	/^	NPfloatXYZ	spacing;$/;"	m	struct:NPgrid
stacks	data/nptypes.h	/^	int			stacks;						\/\/...and from the screenSizeIndex$/;"	m	struct:NPpin
start_file	lib/soil/src/stb_image_aug.c	/^static void start_file(stbi *s, FILE *f)$/;"	f	file:
start_mem	lib/soil/src/stb_image_aug.c	/^static void start_mem(stbi *s, uint8 const *buffer, int len)$/;"	f	file:
stbi	lib/soil/src/stb_image_aug.c	/^} stbi;$/;"	t	typeref:struct:__anon63	file:
stbi_YCbCr_installed	lib/soil/src/stb_image_aug.c	/^static stbi_YCbCr_to_RGB_run stbi_YCbCr_installed = YCbCr_to_RGB_row;$/;"	v	file:
stbi_YCbCr_to_RGB_run	lib/soil/src/stb_image_aug.h	/^typedef void (*stbi_YCbCr_to_RGB_run)(uint8 *output, uint8 const *y, uint8 const *cb, uint8 const *cr, int count, int step);$/;"	t
stbi_bmp_load	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_bmp_load             (char const *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_bmp_load_from_file	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_bmp_load_from_file   (FILE *f,                  int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_bmp_load_from_memory	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_bmp_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_bmp_test_file	lib/soil/src/stb_image_aug.c	/^int      stbi_bmp_test_file        (FILE *f)$/;"	f
stbi_bmp_test_memory	lib/soil/src/stb_image_aug.c	/^int      stbi_bmp_test_memory      (stbi_uc const *buffer, int len)$/;"	f
stbi_convert_bit_range	lib/soil/src/stbi_DDS_aug_c.h	/^int stbi_convert_bit_range( int c, int from_bits, int to_bits )$/;"	f
stbi_dds_load	lib/soil/src/stbi_DDS_aug_c.h	/^stbi_uc *stbi_dds_load             (char *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_dds_load_from_file	lib/soil/src/stbi_DDS_aug_c.h	/^stbi_uc *stbi_dds_load_from_file   (FILE *f,                  int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_dds_load_from_memory	lib/soil/src/stbi_DDS_aug_c.h	/^stbi_uc *stbi_dds_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_dds_test_file	lib/soil/src/stbi_DDS_aug_c.h	/^int      stbi_dds_test_file        (FILE *f)$/;"	f
stbi_dds_test_memory	lib/soil/src/stbi_DDS_aug_c.h	/^int      stbi_dds_test_memory      (stbi_uc const *buffer, int len)$/;"	f
stbi_decode_DXT1_block	lib/soil/src/stbi_DDS_aug_c.h	/^void stbi_decode_DXT1_block($/;"	f
stbi_decode_DXT23_alpha_block	lib/soil/src/stbi_DDS_aug_c.h	/^void stbi_decode_DXT23_alpha_block($/;"	f
stbi_decode_DXT45_alpha_block	lib/soil/src/stbi_DDS_aug_c.h	/^void stbi_decode_DXT45_alpha_block($/;"	f
stbi_decode_DXT_color_block	lib/soil/src/stbi_DDS_aug_c.h	/^void stbi_decode_DXT_color_block($/;"	f
stbi_failure_reason	lib/soil/src/stb_image_aug.c	/^char *stbi_failure_reason(void)$/;"	f
stbi_hdr_load_from_file	lib/soil/src/stb_image_aug.c	/^float *stbi_hdr_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_from_memory	lib/soil/src/stb_image_aug.c	/^float *stbi_hdr_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_rgbe	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_hdr_load_rgbe        (char const *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_rgbe_file	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_hdr_load_rgbe_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_rgbe_memory	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_hdr_load_rgbe_memory(stbi_uc *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_test_file	lib/soil/src/stb_image_aug.c	/^int stbi_hdr_test_file(FILE *f)$/;"	f
stbi_hdr_test_memory	lib/soil/src/stb_image_aug.c	/^int stbi_hdr_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_hdr_to_ldr_gamma	lib/soil/src/stb_image_aug.c	/^void   stbi_hdr_to_ldr_gamma(float gamma) { h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	lib/soil/src/stb_image_aug.c	/^void   stbi_hdr_to_ldr_scale(float scale) { h2l_scale_i = 1\/scale; }$/;"	f
stbi_idct_8x8	lib/soil/src/stb_image_aug.h	/^typedef void (*stbi_idct_8x8)(uint8 *out, int out_stride, short data[64], unsigned short *dequantize);$/;"	t
stbi_idct_installed	lib/soil/src/stb_image_aug.c	/^static stbi_idct_8x8 stbi_idct_installed = idct_block;$/;"	v	file:
stbi_image_free	lib/soil/src/stb_image_aug.c	/^void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_install_YCbCr_to_RGB	lib/soil/src/stb_image_aug.c	/^void stbi_install_YCbCr_to_RGB(stbi_YCbCr_to_RGB_run func)$/;"	f
stbi_install_idct	lib/soil/src/stb_image_aug.c	/^extern void stbi_install_idct(stbi_idct_8x8 func)$/;"	f
stbi_is_hdr	lib/soil/src/stb_image_aug.c	/^extern int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_file	lib/soil/src/stb_image_aug.c	/^extern int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	lib/soil/src/stb_image_aug.c	/^int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_jpeg_load	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_jpeg_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_jpeg_load_from_file	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_jpeg_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_jpeg_load_from_memory	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_jpeg_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_jpeg_test_file	lib/soil/src/stb_image_aug.c	/^int stbi_jpeg_test_file(FILE *f)$/;"	f
stbi_jpeg_test_memory	lib/soil/src/stb_image_aug.c	/^int stbi_jpeg_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	lib/soil/src/stb_image_aug.c	/^void   stbi_ldr_to_hdr_gamma(float gamma) { l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	lib/soil/src/stb_image_aug.c	/^void   stbi_ldr_to_hdr_scale(float scale) { l2h_scale = scale; }$/;"	f
stbi_load	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loader	lib/soil/src/stb_image_aug.h	/^} stbi_loader;$/;"	t	typeref:struct:__anon74
stbi_loadf	lib/soil/src/stb_image_aug.c	/^float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	lib/soil/src/stb_image_aug.c	/^float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	lib/soil/src/stb_image_aug.c	/^float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_load	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_png_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_load_from_file	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_png_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_load_from_memory	lib/soil/src/stb_image_aug.c	/^unsigned char *stbi_png_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_test_file	lib/soil/src/stb_image_aug.c	/^int stbi_png_test_file(FILE *f)$/;"	f
stbi_png_test_memory	lib/soil/src/stb_image_aug.c	/^int stbi_png_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_psd_load	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_psd_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_psd_load_from_file	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_psd_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_psd_load_from_memory	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_psd_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_psd_test_file	lib/soil/src/stb_image_aug.c	/^int stbi_psd_test_file(FILE *f)$/;"	f
stbi_psd_test_memory	lib/soil/src/stb_image_aug.c	/^int stbi_psd_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_register_loader	lib/soil/src/stb_image_aug.c	/^int stbi_register_loader(stbi_loader *loader)$/;"	f
stbi_resample	lib/soil/src/stb_image_aug.c	/^} stbi_resample;$/;"	t	typeref:struct:__anon67	file:
stbi_rgb_888_from_565	lib/soil/src/stbi_DDS_aug_c.h	/^void stbi_rgb_888_from_565( unsigned int c, int *r, int *g, int *b )$/;"	f
stbi_tga_load	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_tga_load             (char const *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_tga_load_from_file	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_tga_load_from_file   (FILE *f,                  int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_tga_load_from_memory	lib/soil/src/stb_image_aug.c	/^stbi_uc *stbi_tga_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_tga_test_file	lib/soil/src/stb_image_aug.c	/^int      stbi_tga_test_file        (FILE *f)$/;"	f
stbi_tga_test_memory	lib/soil/src/stb_image_aug.c	/^int      stbi_tga_test_memory      (stbi_uc const *buffer, int len)$/;"	f
stbi_uc	lib/soil/src/stb_image_aug.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_write_bmp	lib/soil/src/stb_image_aug.c	/^int stbi_write_bmp(char const *filename, int x, int y, int comp, void *data)$/;"	f
stbi_write_tga	lib/soil/src/stb_image_aug.c	/^int stbi_write_tga(char const *filename, int x, int y, int comp, void *data)$/;"	f
stbi_zlib_decode_buffer	lib/soil/src/stb_image_aug.c	/^int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	lib/soil/src/stb_image_aug.c	/^char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	lib/soil/src/stb_image_aug.c	/^char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_noheader_buffer	lib/soil/src/stb_image_aug.c	/^int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	lib/soil/src/stb_image_aug.c	/^char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
stereo	data/nptypes.h	/^	int			stereo;						\/\/stereoscopic 3D$/;"	m	struct:NPcamera
stereo	data/nptypes.h	/^	int			stereo;						\/\/stereoscopic 3D$/;"	m	struct:NPvideo
stereo	data/nptypes.h	/^	int			stereo;$/;"	m	struct:NPgl
tableID	data/nptypes.h	/^	int			tableID;					\/\/DB table$/;"	m	struct:NPnode
tableID	data/nptypes.h	/^	int			tableID;			\/\/tableID of the node, may not need these, debug zz$/;"	m	struct:NPrecordTag
tableID	data/nptypes.h	/^	int			tableID;			\/\/tableID of the node, may not need these, debug zz$/;"	m	struct:NPtextTag
tag	data/nptypes.h	/^	pNPtextTag	tag;													\/\/zz debug$/;"	m	struct:NPnode
tagMode	data/nptypes.h	/^	int			tagMode;						\/\/user defined value$/;"	m	struct:NPnode
tagOffset	data/nptypes.h	/^	NPfloatXYZ	tagOffset;					\/\/origin relative to parent origin$/;"	m	struct:NPnode
tags	data/nptypes.h	/^	NPtags		tags;$/;"	m	struct:NPhud
target	data/nptypes.h	/^	NPfloatXYZ	target;$/;"	m	struct:NPmouse
targetDest	data/nptypes.h	/^	NPfloatXYZ	targetDest;$/;"	m	struct:NPmouse
targetRadius	data/nptypes.h	/^	float		targetRadius;$/;"	m	struct:NPmouse
targetRadiusDest	data/nptypes.h	/^	float		targetRadiusDest;$/;"	m	struct:NPmouse
test_file	lib/soil/src/stb_image_aug.h	/^   int       (*test_file)(FILE *f);$/;"	m	struct:__anon74
test_memory	lib/soil/src/stb_image_aug.h	/^   int       (*test_memory)(stbi_uc const *buffer, int len);$/;"	m	struct:__anon74
textureCount	data/nptypes.h	/^	int			textureCount;$/;"	m	struct:NPgl
textureID	data/nptypes.h	/^	int			textureID;					\/\/GL texture ID used for box background$/;"	m	struct:NPconsole
textureID	data/nptypes.h	/^	int			textureID;					\/\/GL texture ID$/;"	m	struct:NPnode
tga_load	lib/soil/src/stb_image_aug.c	/^static stbi_uc *tga_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
tga_test	lib/soil/src/stb_image_aug.c	/^static int tga_test(stbi *s)$/;"	f	file:
thickness	io/gl/npgeometry.c	/^	GLfloat			thickness;$/;"	m	struct:NPtorus	file:
time	data/nptypes.h	/^	double		time;				\/\/system time in seconds$/;"	m	struct:NPio
timeStart	data/nptypes.h	/^	double		timeStart;			\/\/time at app start$/;"	m	struct:NPio
title	data/nptypes.h	/^	char		title[kNPtitleSizeMax + 1];	\/\/one line with max width of 63 characters$/;"	m	struct:NPrecordTag
title	data/nptypes.h	/^	char		title[kNPtitleSizeMax + 1];	\/\/one line with max width of 63 characters$/;"	m	struct:NPtextTag
titleSize	data/nptypes.h	/^	int			titleSize;			\/\/number of characters in title$/;"	m	struct:NPrecordTag
titleSize	data/nptypes.h	/^	int			titleSize;		\/\/number of characters in title$/;"	m	struct:NPtextTag
todo	lib/soil/src/stb_image_aug.c	/^   int restart_interval, todo;$/;"	m	struct:__anon65	file:
tool	data/nptypes.h	/^	int			tool;$/;"	m	struct:NPmouse
topo	data/nptypes.h	/^	int			topo;						\/\/topography, cube, sphere, torus$/;"	m	struct:NPnode
torus_dl	io/gl/npgeometry.c	/^static GLint torus_dl;$/;"	v	file:
torus_wire_dl	io/gl/npgeometry.c	/^static GLint torus_wire_dl;$/;"	v	file:
tq	lib/soil/src/stb_image_aug.c	/^      int tq;$/;"	m	struct:__anon65::__anon66	file:
trackFileTokenBuffer	data/nptypes.h	/^	char		trackFileTokenBuffer[kNPmaxLineLength];$/;"	m	struct:NPch
trackFileTokens	data/nptypes.h	/^	char*		trackFileTokens[kNPmaxTokens];			$/;"	m	struct:NPch
trackFloatData	data/nptypes.h	/^	float**		trackFloatData;			\/\/ list of pointers to "float" values, track data as "float"$/;"	m	struct:NPch
trackIntData	data/nptypes.h	/^	int**		trackIntData;			\/\/ list of pointers to "int" values, track data as "int"$/;"	m	struct:NPch
trackNames	data/nptypes.h	/^	char**		trackNames;				\/\/ each track has a name, name indicates node attribute (multiple allowed, separated by anything except ",")$/;"	m	struct:NPch
trackOffset	data/nptypes.h	/^	int			trackOffset;$/;"	m	struct:NPxref
trackUcharData	data/nptypes.h	/^	unsigned char** trackUcharData;		\/\/ list of pointers to "unsigned char" values, track data as "unsigned char"$/;"	m	struct:NPch
translate	data/nptypes.h	/^	NPfloatXYZ	translate;					\/\/location relative to origin$/;"	m	struct:NPconsole
translate	data/nptypes.h	/^	NPfloatXYZ	translate;					\/\/location relative to origin$/;"	m	struct:NPnode
translateRate	data/nptypes.h	/^	NPfloatXYZ	translateRate;				\/\/node velocity$/;"	m	struct:NPnode
translateTex	data/nptypes.h	/^	NPfloatXYZ	translateTex;$/;"	m	struct:NPpin
translateVec	data/nptypes.h	/^	NPfloatXYZ	translateVec;				\/\/velocity unit vector$/;"	m	struct:NPnode
translating	data/nptypes.h	/^	int			translating;$/;"	m	struct:NPmouse
triggerHi	data/nptypes.h	/^	NPintXYZ	triggerHi;				\/\/triggers are multipurpose$/;"	m	struct:NPnode
triggerLo	data/nptypes.h	/^	NPintXYZ	triggerLo;$/;"	m	struct:NPnode
true	data/stdbool.h	29;"	d
type	data/nptypes.h	/^	int			type;						\/\/node type, point, pin, cam, video$/;"	m	struct:NPnode
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPcamera
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPdataItem
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPgis
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPgrid
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPnodeData
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPpin
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPpoints
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPsurface
type	data/nptypes.h	/^	int			type;$/;"	m	struct:NPvideo
type	data/nptypes.h	/^	int		type;$/;"	m	struct:NPmapType
type	lib/soil/src/stb_image_aug.c	/^   uint32 type;$/;"	m	struct:__anon70	file:
typeMap	data/nptypes.h	/^	NPmapTypePtr	typeMap[kNPdataTypeMax];$/;"	m	struct:NPmap
typeMapBase	data/nptypes.h	/^	NPmapTypePtr	typeMapBase;$/;"	m	struct:NPmap
typeMapCamera	data/nptypes.h	/^	NPmapTypePtr	typeMapCamera;$/;"	m	struct:NPmap
typeMapGrid	data/nptypes.h	/^	NPmapTypePtr	typeMapGrid;$/;"	m	struct:NPmap
typeMapNode	data/nptypes.h	/^	NPmapTypePtr	typeMapNode;$/;"	m	struct:NPmap
typeMapPin	data/nptypes.h	/^	NPmapTypePtr	typeMapPin;$/;"	m	struct:NPmap
typeMapTorus	data/nptypes.h	/^	NPmapTypePtr	typeMapTorus;$/;"	m	struct:NPmap
ucharTracks	data/nptypes.h	/^	NPnodePropertyTracks	ucharTracks;\/\/ tracks associated with "unsigned char" Node properties$/;"	m	struct:NPch
uint	lib/soil/src/stb_image_aug.c	/^typedef unsigned int   uint;$/;"	t	file:
uint16	lib/soil/src/stb_image_aug.c	/^typedef unsigned short uint16;$/;"	t	file:
uint32	lib/soil/src/stb_image_aug.c	/^typedef unsigned int   uint32;$/;"	t	file:
uint8	lib/soil/src/stb_image_aug.c	/^typedef unsigned char uint8;$/;"	t	file:
unitType	data/nptypes.h	/^	NPintXYZS	unitType;			\/\/ft, m, F, C, kg\/m^3, m\/s^2, R,G,B...$/;"	m	struct:NPlabel
up_scale_image	lib/soil/src/image_helper.c	/^	up_scale_image$/;"	f
updateData	data/nptypes.h	/^	bool		updateData;				\/\/ true when we need to update data (either read from track to update node, or vice versa)$/;"	m	struct:NPch
url	data/nptypes.h	/^	char		url[kNPurlMax];$/;"	m	struct:NPio
userSelectedPath	data/nptypes.h	/^	char		userSelectedPath[4096];$/;"	m	struct:NPfile
v	lib/soil/src/stb_image_aug.c	/^      int h,v;$/;"	m	struct:__anon65::__anon66	file:
vArray	io/gl/npgeometry.c	/^	NPfloatXY*		vArray;$/;"	m	struct:NPcircle	file:
vArray	io/gl/npgeometry.c	/^	NPfloatXYZ*		vArray;$/;"	m	struct:NPtorus	file:
vArraySize	io/gl/npgeometry.c	/^	GLint			vArraySize;$/;"	m	struct:NPtorus	file:
validate_uint32	lib/soil/src/stb_image_aug.c	/^typedef unsigned char validate_uint32[sizeof(uint32)==4];$/;"	t	file:
value	lib/soil/src/stb_image_aug.c	/^   uint16 value[288];$/;"	m	struct:__anon68	file:
values	lib/soil/src/stb_image_aug.c	/^   uint8  values[256];$/;"	m	struct:__anon64	file:
vertexArray	data/nptypes.h	/^	float		*vertexArray;				\/\/the array of data points$/;"	m	struct:NPpoints
vertexArray	data/nptypes.h	/^	float		*vertexArray;				\/\/the array of vertices$/;"	m	struct:NPgis
vertexArray	data/nptypes.h	/^	float		*vertexArray;				\/\/the array of vertices$/;"	m	struct:NPsurface
vertexCount	data/nptypes.h	/^	int			vertexCount;				\/\/$/;"	m	struct:NPgis
vertexCount	data/nptypes.h	/^	int			vertexCount;				\/\/$/;"	m	struct:NPsurface
vertexCount	data/nptypes.h	/^	int			vertexCount;				\/\/number of points in the node$/;"	m	struct:NPpoints
voidFnPtr	data/nptypes.h	/^typedef void (*voidFnPtr)(void*);	\/\/zz-JJ$/;"	t
vs	lib/soil/src/stb_image_aug.c	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon67	file:
w2	lib/soil/src/stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon65::__anon66	file:
w_lores	lib/soil/src/stb_image_aug.c	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon67	file:
width	data/nptypes.h	/^	int			width;						\/\/res in pixels$/;"	m	struct:NPcamera
width	data/nptypes.h	/^	int			width;						\/\/res in pixels$/;"	m	struct:NPvideo
width	data/nptypes.h	/^	int			width;$/;"	m	struct:NPgl
window	data/nptypes.h	/^	NPintXYZ	window;					\/\/window position in pixels$/;"	m	struct:NPmouse
windowID	data/nptypes.h	/^	int			windowID;$/;"	m	struct:NPgl
write	data/nptypes.h	/^	char*		write[kNPdataTypeMax];$/;"	m	struct:NPio
write8	lib/soil/src/stb_image_aug.c	/^static void write8(FILE *f, int x) { uint8 z = (uint8) x; fwrite(&z,1,1,f); }$/;"	f	file:
write_pixels	lib/soil/src/stb_image_aug.c	/^static void write_pixels(FILE *f, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad)$/;"	f	file:
writef	lib/soil/src/stb_image_aug.c	/^static void writef(FILE *f, char *fmt, ...)$/;"	f	file:
writefv	lib/soil/src/stb_image_aug.c	/^static void writefv(FILE *f, char *fmt, va_list v)$/;"	f	file:
x	data/nptypes.h	/^	bool x,y,z,s;$/;"	m	struct:__anon11
x	data/nptypes.h	/^	bool x,y,z;$/;"	m	struct:__anon10
x	data/nptypes.h	/^	float x,y,z,angle;$/;"	m	struct:__anon2
x	data/nptypes.h	/^	float x,y,z,scaler;$/;"	m	struct:__anon3
x	data/nptypes.h	/^	float x,y,z;$/;"	m	struct:NPfloatXYZ
x	data/nptypes.h	/^	float x,y;$/;"	m	struct:__anon1
x	data/nptypes.h	/^	int			x;						\/\/raw coordinate$/;"	m	struct:NPmouse
x	data/nptypes.h	/^	int x,y,z,s;$/;"	m	struct:__anon8
x	data/nptypes.h	/^	int x,y,z;$/;"	m	struct:__anon7
x	data/nptypes.h	/^	int x,y;$/;"	m	struct:__anon6
x	lib/soil/src/stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon65::__anon66	file:
xref	data/nptypes.h	/^	NPxref		xref[kNPmaxTrackToAttributeMappings];$/;"	m	struct:NPch
xrefIndex	data/nptypes.h	/^	int			xrefIndex;$/;"	m	struct:NPch
y	data/nptypes.h	/^	bool x,y,z,s;$/;"	m	struct:__anon11
y	data/nptypes.h	/^	bool x,y,z;$/;"	m	struct:__anon10
y	data/nptypes.h	/^	float x,y,z,angle;$/;"	m	struct:__anon2
y	data/nptypes.h	/^	float x,y,z,scaler;$/;"	m	struct:__anon3
y	data/nptypes.h	/^	float x,y,z;$/;"	m	struct:NPfloatXYZ
y	data/nptypes.h	/^	float x,y;$/;"	m	struct:__anon1
y	data/nptypes.h	/^	int			y;$/;"	m	struct:NPmouse
y	data/nptypes.h	/^	int x,y,z,s;$/;"	m	struct:__anon8
y	data/nptypes.h	/^	int x,y,z;$/;"	m	struct:__anon7
y	data/nptypes.h	/^	int x,y;$/;"	m	struct:__anon6
y	lib/soil/src/stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon65::__anon66	file:
ypos	lib/soil/src/stb_image_aug.c	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon67	file:
ystep	lib/soil/src/stb_image_aug.c	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon67	file:
z	data/nptypes.h	/^	bool x,y,z,s;$/;"	m	struct:__anon11
z	data/nptypes.h	/^	bool x,y,z;$/;"	m	struct:__anon10
z	data/nptypes.h	/^	float x,y,z,angle;$/;"	m	struct:__anon2
z	data/nptypes.h	/^	float x,y,z,scaler;$/;"	m	struct:__anon3
z	data/nptypes.h	/^	float x,y,z;$/;"	m	struct:NPfloatXYZ
z	data/nptypes.h	/^	int			z;						\/\/typically the scroll wheel$/;"	m	struct:NPmouse
z	data/nptypes.h	/^	int x,y,z,s;$/;"	m	struct:__anon8
z	data/nptypes.h	/^	int x,y,z;$/;"	m	struct:__anon7
z_distance	lib/soil/src/stb_image_aug.c	/^   zhuffman z_length, z_distance;$/;"	m	struct:__anon69	file:
z_expandable	lib/soil/src/stb_image_aug.c	/^   int   z_expandable;$/;"	m	struct:__anon69	file:
z_length	lib/soil/src/stb_image_aug.c	/^   zhuffman z_length, z_distance;$/;"	m	struct:__anon69	file:
zbuf	lib/soil/src/stb_image_aug.c	/^} zbuf;$/;"	t	typeref:struct:__anon69	file:
zbuffer	lib/soil/src/stb_image_aug.c	/^   uint8 *zbuffer, *zbuffer_end;$/;"	m	struct:__anon69	file:
zbuffer_end	lib/soil/src/stb_image_aug.c	/^   uint8 *zbuffer, *zbuffer_end;$/;"	m	struct:__anon69	file:
zbuild_huffman	lib/soil/src/stb_image_aug.c	/^static int zbuild_huffman(zhuffman *z, uint8 *sizelist, int num)$/;"	f	file:
zget8	lib/soil/src/stb_image_aug.c	/^__forceinline static int zget8(zbuf *z)$/;"	f	file:
zhuffman	lib/soil/src/stb_image_aug.c	/^} zhuffman;$/;"	t	typeref:struct:__anon68	file:
zhuffman_decode	lib/soil/src/stb_image_aug.c	/^__forceinline static int zhuffman_decode(zbuf *a, zhuffman *z)$/;"	f	file:
zout	lib/soil/src/stb_image_aug.c	/^   char *zout;$/;"	m	struct:__anon69	file:
zout_end	lib/soil/src/stb_image_aug.c	/^   char *zout_end;$/;"	m	struct:__anon69	file:
zout_start	lib/soil/src/stb_image_aug.c	/^   char *zout_start;$/;"	m	struct:__anon69	file:
zreceive	lib/soil/src/stb_image_aug.c	/^__forceinline static unsigned int zreceive(zbuf *z, int n)$/;"	f	file:
